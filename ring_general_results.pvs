%% Authors:	
%%		Andréia Borges Avelar da Silva
%%		Universidade de Brasília - Brasil
%%
%% 		Thaynara Arielly de Lima
%% 		Universidade Federal de Goiás - Brasil
%%
%%		André Luiz Galdino
%%		Universidade Federal de Catalão - Brasil
%%
%%	        André Camapum Carvalho de Freitas
%%		Universidade Federal de Goiás - Brasil
%%
%%		Mauricio Ayala-Rincón
%%		Universidade de Brasília - Brasil
%%----------------------------------------------------------------------------
%%
%%	Formalization of some results about Ring Theory
%%
%%	Last version: June 25, 2020
%%
%%----------------------------------------------------------------------------

ring_general_results[T:Type+,+,*:[T,T->T],zero:T,one:T]: THEORY

 BEGIN


   ASSUMING IMPORTING ring_with_one_def[T,+,*,zero,one]

        fullset_is_ring_with_one: ASSUMPTION ring_with_one?(fullset[T])

   ENDASSUMING


 IMPORTING ring_with_one_basic_properties[T,+,*,zero,one],
	   ring_characteristic_def[T,+,*,zero],
	   ring_homomorphisms_def[int,+,*,0,T,+,*,zero],
	   ring_homomorphism_lemmas_extras,
	   ring_with_one_homomorphism_extras,
	   ring_with_one_maximal_ideal[T,+,*,zero,one],
	   ring_nz_closed_aux[T,+,*,zero],
	   ints@primes,
	   ints@div,
	   ints@divides_lems


 k : VAR int
 R: VAR ring_with_one
 l : VAR posnat

 
%%----------------------------------------------------------------------------

 homomorphism_Z_to_R: LEMMA
     charac(R) > 0 IMPLIES 
      (LET phi:[(fullset[int]) -> (R)] = (LAMBDA (m:int): times(one, m)) IN
      	   R_homomorphism?(fullset[int],R)(phi) AND
	   R_kernel(fullset[int],R)(phi) = {x:int | EXISTS (k:int): x = k*charac(R)})

 gen_times_char_one: LEMMA
     (charac(R) > 0 AND times(one,l) = zero)
     IMPLIES l >= charac(R)


 nz_closed_char_prime: LEMMA
     charac(R) > 0 IMPLIES (nz_closed? (R) IMPLIES (prime? (charac(R)) or charac(R) = 1))


 field_zero_maximal_ideal: LEMMA
     commutative_ring?(R) IMPLIES
       (field?[T,+,*,zero,one](R) IFF maximal_ideal?(singleton(zero),R))

 maximal_ideal_iff_proper_id: LEMMA
  monad?[T,*,one](remove(zero,R)) IMPLIES
  (maximal_ideal?(singleton(zero),R) IFF (FORALL (I: ideal(R)): I = R OR I = singleton(zero)))

 proper_id_zero_maximal_ideal: LEMMA
     commutative_ring?(R) AND monad?[T,*,one](remove(zero,R)) IMPLIES
       (maximal_ideal?(singleton(zero),R) IFF
       NOT (EXISTS (I: ideal(R)): strict_subset?(I,R) AND I /= singleton(zero)))

 END ring_general_results


%%----------------------------------------------------------------------------

ring_general_results_extras[T1: TYPE+,s1:[T1,T1 -> T1], p1:[T1,T1 -> T1], zero1: T1, one1:T1,
                            T2: TYPE+,s2:[T2,T2 -> T2], p2:[T2,T2 -> T2], zero2: T2]
			    : THEORY

  BEGIN

        ASSUMING IMPORTING ring_with_one_def[T1,s1,p1,zero1,one1],
		 	   ring_def[T2,s2,p2,zero2]

         R1_is_ring_with_one: ASSUMPTION ring_with_one?(fullset[T1])
 	 R2_is_ring: ASSUMPTION ring?[T2,s2,p2,zero2](fullset[T2])

        ENDASSUMING


  IMPORTING ring_homomorphism_lemmas[T1,s1,p1,zero1,T2,s2,p2,zero2],
  	    ring_homomorphism_lemmas,
   	    ring_general_results[T1,s1,p1,zero1,one1]
 	   
  R:  VAR ring_with_one[T1,s1,p1,zero1,one1]
  
%%----------------------------------------------------------------------------

 no_prop_id_mono: LEMMA
 (FORALL(R: ring_with_one[T1,s1,p1,zero1,one1], I: ideal[T1,s1,p1,zero1](R)):
  (FORALL(S:ring[coset[T1,s1](R,I),add[T1,s1](R,I),product(R,I),I],phi:R_homomorphism[T1,s1,p1,zero1,coset[T1,s1](R,I),add[T1,s1](R,I),product(R,I),I](R, S)):
    NOT zero_homomorphism?[T1,s1,p1,zero1,coset[T1,s1](R,I),add[T1,s1](R,I),product(R,I),I](R,S)(phi)
 IMPLIES
  R_monomorphism?[T1,s1,p1,zero1,coset[T1,s1](R,I),add[T1,s1](R,I),product(R,I),I](R,S)(phi))
  IMPLIES I = R OR I = singleton(zero1))


  mono_no_prop_id: LEMMA
  (FORALL(R: ring_with_one[T1,s1,p1,zero1,one1], S:ring[T2,s2,p2,zero2],phi:R_homomorphism[T1,s1,p1,zero1,T2,s2,p2,zero2](R, S)):
  (FORALL(I: ideal[T1,s1,p1,zero1](R)):
   (I = R OR I = singleton(zero1))) IMPLIES (NOT zero_homomorphism?(R,S)(phi) IMPLIES
   R_monomorphism?(R,S)(phi)))
 
END ring_general_results_extras

%%----------------------------------------------------------------------------
