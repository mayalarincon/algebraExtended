%% TCCs associated with theory quotient_rings_with_one
%% This file was automatically generated by PVS, please **do not modify** by hand.
quotient_rings_with_one_TCCS: THEORY BEGIN

	% Assuming TCC generated (at line 32, column 13) for
	% quotient_rings[T, +, *, zero]
	% generated from assumption quotient_rings.fullset_is_ring
	  % proved
	IMP_quotient_rings_TCC1: OBLIGATION
	ring?[T, +, *, zero](fullset[T])
	
	% Assuming TCC generated (at line 34, column 6) for
	% ring_with_one_ideal[T, +, *, zero, one]
	% generated from assumption ring_with_one_ideal.fullset_is_ring_with_one
	  % proved
	IMP_ring_with_one_ideal_TCC1: OBLIGATION
	ring_with_one?[T, +, *, zero, one](fullset[T])
	
	% Existence TCC generated (at line 38, column 8) for
	% ring_with_one?
	%     [coset[T, +](R, I), add(R, I), product(R, I), I, +(one, I)]
	  % proved
	quotient_ring_with_one_TCC1: OBLIGATION
	FORALL (R: (ring_with_one?[T, +, *, zero, one]), I: ideal[T, +, *, zero](R)):
	    EXISTS (x: coset[T, +](R, I)): TRUE
	
	% Subtype TCC generated (at line 38, column 8) for
	% ring_with_one?
	%     [coset[T, +](R, I), add(R, I), product(R, I), I, +(one, I)]
	% expected type  [[coset[T, +](R, I), coset[T, +](R, I)] ->
	%    coset[T, +](R, I)]
	  % proved
	quotient_ring_with_one_TCC2: OBLIGATION
	FORALL (R: (ring_with_one?[T, +, *, zero, one]), I: ideal[T, +, *, zero](R)):
	    FORALL (x1: [coset[T, +](R, I), coset[T, +](R, I)]):
	      coset?[T, +](R, I)(add[T, +](R, I)(x1))
	
	% Subtype TCC generated (at line 38, column 8) for
	% ring_with_one?
	%     [coset[T, +](R, I), add(R, I), product(R, I), I, +(one, I)]
	% expected type  [[coset[T, +](R, I), coset[T, +](R, I)] ->
	%    coset[T, +](R, I)]
	  % proved
	quotient_ring_with_one_TCC3: OBLIGATION
	FORALL (R: (ring_with_one?[T, +, *, zero, one]), I: ideal[T, +, *, zero](R)):
	    FORALL (x1: [coset[T, +](R, I), coset[T, +](R, I)]):
	      coset?[T, +](R, I)(product[T, +, *](R, I)(x1))
	
	% Subtype TCC generated (at line 38, column 8) for
	% ring_with_one?
	%     [coset[T, +](R, I), add(R, I), product(R, I), I, +(one, I)]
	% expected type  coset[T, +](R, I)
	  % proved
	quotient_ring_with_one_TCC4: OBLIGATION
	FORALL (R: (ring_with_one?[T, +, *, zero, one]), I: ideal[T, +, *, zero](R)):
	    coset?[T, +](R, I)(I)
	
	% Subtype TCC generated (at line 38, column 8) for
	% ring_with_one?
	%     [coset[T, +](R, I), add(R, I), product(R, I), I, +(one, I)]
	% expected type  coset[T, +](R, I)
	  % proved
	quotient_ring_with_one_TCC5: OBLIGATION
	FORALL (R: (ring_with_one?[T, +, *, zero, one]), I: ideal[T, +, *, zero](R)):
	    coset?[T, +](R, I)(((+[T, +])(one, I)))
	
	% The subtype TCC (at line 42, column 8) in decl nil for
	 % term generated from fullset_quot_ring_with_one
	    %  ring_with_one?
	    %     [coset[T, +](R, I), add(R, I), product(R, I), I, +(one, I)]
	    % expected type  [[coset[T, +](R, I), coset[T, +](R, I)] ->
	                   %    coset[T, +](R, I)]
	  % is subsumed by quotient_ring_with_one_TCC2
	% The subtype TCC (at line 42, column 8) in decl nil for
	 % term generated from fullset_quot_ring_with_one
	    %  ring_with_one?
	    %     [coset[T, +](R, I), add(R, I), product(R, I), I, +(one, I)]
	    % expected type  [[coset[T, +](R, I), coset[T, +](R, I)] ->
	                   %    coset[T, +](R, I)]
	  % is subsumed by quotient_ring_with_one_TCC3
	% The subtype TCC (at line 42, column 8) in decl nil for
	 % term generated from fullset_quot_ring_with_one
	    %  ring_with_one?
	    %     [coset[T, +](R, I), add(R, I), product(R, I), I, +(one, I)]
	    % expected type  coset[T, +](R, I)
	  % is subsumed by quotient_ring_with_one_TCC4

END quotient_rings_with_one_TCCS