{
 "ring_with_one_def.commutative_ring_with_one?_TCC1": [
  {
   "info": {
    "theory": "ring_with_one_def",
    "formula": "commutative_ring_with_one?_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "5758b190aab94db4b392c949024d09143f3df538af45b6e8eaa4991f325a1e5c"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "commutative_ring_with_one?_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(expand \"ring_with_one?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"ring?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"star_closed?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skosimp*)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst - \"x1!1`1\" \"x1!1`2\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"member\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "ring_with_one_def.finite_commutative_ring_with_one?_TCC1": [
  {
   "info": {
    "theory": "ring_with_one_def",
    "formula": "finite_commutative_ring_with_one?_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "5758b190aab94db4b392c949024d09143f3df538af45b6e8eaa4991f325a1e5c"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "finite_commutative_ring_with_one?_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(expand \"finite_ring_with_one?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"ring_with_one?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"monoid?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"monad?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"star_closed?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"member\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skosimp*)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ]
}