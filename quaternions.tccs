%% TCCs associated with theory quaternions
%% This file was automatically generated by PVS, please **do not modify** by hand.
quaternions_TCCS: THEORY BEGIN

	% Assuming TCC generated (at line 33, column 10) for
	% quaternions_def[T, +, *, zero, one, a, b]
	% generated from assumption quaternions_def.fullset_is_group
	  % proved
	IMP_quaternions_def_TCC1: OBLIGATION
	group?[T, +, zero](fullset[T])
	
	% Assuming TCC generated (at line 34, column 10) for
	% ring_characteristic_def[T, +, *, zero]
	% generated from assumption ring_characteristic_def.fullset_is_ring
	  % proved
	IMP_ring_characteristic_def_TCC1: OBLIGATION
	ring?[T, +, *, zero](fullset[T])
	
	% Assuming TCC generated (at line 35, column 10) for
	% pvs_strategies_lemmas[T, +, *, zero, one]
	% generated from assumption pvs_strategies_lemmas.fullset_is_field
	  % untried
	IMP_pvs_strategies_lemmas_TCC1: OBLIGATION
	field?[T, +, *, zero, one](fullset[T])
	
	% The assuming TCC (at line 36, column 10) in decl nil for
	% term generated from IMPORTING
	%  ring_nz_closed_aux[T, +, *, zero]
	% generated from assumption ring_nz_closed_aux.fullset_is_ring
	% Subtype TCC generated (at line 50, column 60) for  a_q
	% expected type  nz_quat
	  % proved
	nz_quat_TCC1: OBLIGATION
	a_q[T, +, *, zero, one, a, b] /= zero_q[T, +, *, zero, one, a, b]
	
	% The subtype TCC (at line 141, column 49) in decl nil for
	% term generated from pure_quat_charac  fullset[T]
	% expected type  (ring?)
	% The subtype TCC (at line 185, column 34) in decl nil for
	% term generated from center_quat_is_sc_F  fullset[T]
	% expected type  (ring?)
	% Subtype TCC generated (at line 198, column 43) for  q * v * conjugate(q)
	% expected type  (pure_quat)
	  % proved
	T_q_TCC1: OBLIGATION
	FORALL (q: quat[T, +, *, zero, one, a, b],
	          v: (pure_quat[T, +, *, zero, one, a, b])):
	    pure_quat[T, +, *, zero, one, a, b]
	        (*[T, +, *, zero, one, a, b]
	             (*[T, +, *, zero, one, a, b](q, v),
	              conjugate[T, +, *, zero, one, a, b](q)))
	
	% The subtype TCC (at line 141, column 49) in decl nil for
	 % term generated from pure_quat_charac  fullset[T]
	    % expected type  (ring?)
	  % is subsumed by IMP_ring_characteristic_def_TCC1
	% The subtype TCC (at line 185, column 34) in decl nil for
	 % term generated from center_quat_is_sc_F  fullset[T]
	    % expected type  (ring?)
	  % is subsumed by IMP_ring_characteristic_def_TCC1
	
	% Subtype TCC generated (at line 202, column 11) for  c * v + d * w
	% expected type  (pure_quat)
	  % proved
	T_q_is_linear_TCC1: OBLIGATION
	FORALL (c, d: T, v, w: (pure_quat[T, +, *, zero, one, a, b])):
	    pure_quat[T, +, *, zero, one, a, b]
	        ((+[T, +, *, zero, one, a, b])
	             (*[T, +, *, zero, one, a, b](c, v),
	              *[T, +, *, zero, one, a, b](d, w)))
	
	% Subtype TCC generated (at line 214, column 39) for  c * pure_part(q)
	% expected type  (pure_quat)
	  % proved
	T_q_invariant_red_norm_TCC1: OBLIGATION
	FORALL (c: T, q: quat[T, +, *, zero, one, a, b]):
	    red_norm(q) = one_q IMPLIES
	     pure_quat[T, +, *, zero, one, a, b]
	         (*[T, +, *, zero, one, a, b]
	              (c, pure_part[T, +, *, zero, one, a, b](q)))
	
	% Subtype TCC generated (at line 238, column 3) for
	% inv[nz_quat,
	%     restrict
	%         [[quat[T, +, *, zero, one, a, b],
	%           quat[T, +, *, zero, one, a, b]],
	%          [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]]
	%         (*),
	%     one_q]
	% expected type  [[nz_quat, nz_quat] -> nz_quat]
	  % proved
	inv_q_prod_charac_TCC1: OBLIGATION
	division_ring?[quat[T, +, *, zero, one, a, b], +, *, zero_q, one_q]
	      (fullset[quat[T, +, *, zero, one, a, b]])
	   IMPLIES
	   FORALL (x1: [nz_quat, nz_quat]):
	     *[T, +, *, zero, one, a, b](x1) /= zero_q[T, +, *, zero, one, a, b]
	
	% Subtype TCC generated (at line 238, column 3) for
	% inv[nz_quat,
	%     restrict
	%         [[quat[T, +, *, zero, one, a, b],
	%           quat[T, +, *, zero, one, a, b]],
	%          [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]]
	%         (*),
	%     one_q]
	% expected type  nz_quat
	  % proved
	inv_q_prod_charac_TCC2: OBLIGATION
	division_ring?[quat[T, +, *, zero, one, a, b], +, *, zero_q, one_q]
	      (fullset[quat[T, +, *, zero, one, a, b]])
	   IMPLIES one_q[T, +, *, zero, one, a, b] /= zero_q[T, +, *, zero, one, a, b]
	
	% Assuming TCC generated (at line 238, column 3) for
	% inv[nz_quat,
	%     restrict
	%         [[quat[T, +, *, zero, one, a, b],
	%           quat[T, +, *, zero, one, a, b]],
	%          [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]]
	%         (*),
	%     one_q]
	% generated from assumption group.fullset_is_group
	  % proved
	inv_q_prod_charac_TCC3: OBLIGATION
	division_ring?[quat[T, +, *, zero, one, a, b], +, *, zero_q, one_q]
	      (fullset[quat[T, +, *, zero, one, a, b]])
	   IMPLIES
	   group?
	       [nz_quat,
	        restrict
	            [[quat[T, +, *, zero, one, a, b], quat[T, +, *, zero, one, a, b]],
	             [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]]
	            (*),
	        one_q]
	       (fullset[nz_quat])
	
	% Subtype TCC generated (at line 238, column 65) for  red_norm(q)
	% expected type  nz_quat
	  % proved
	inv_q_prod_charac_TCC4: OBLIGATION
	division_ring?[quat[T, +, *, zero, one, a, b], +, *, zero_q, one_q]
	      (fullset[quat[T, +, *, zero, one, a, b]])
	   IMPLIES
	   FORALL (q: nz_quat):
	     red_norm[T, +, *, zero, one, a, b](q) /= zero_q[T, +, *, zero, one, a, b]
	
	% The subtype TCC (at line 238, column 44) in decl nil for
	 % term generated from inv_q_prod_charac
	    %  inv[nz_quat,
	    %     restrict
	    %         [[quat[T, +, *, zero, one, a, b],
	    %           quat[T, +, *, zero, one, a, b]],
	    %          [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]]
	    %         (*),
	    %     one_q]
	    % expected type  [[nz_quat, nz_quat] -> nz_quat]
	  % is subsumed by inv_q_prod_charac_TCC1
	% The subtype TCC (at line 238, column 44) in decl nil for
	 % term generated from inv_q_prod_charac
	    %  inv[nz_quat,
	    %     restrict
	    %         [[quat[T, +, *, zero, one, a, b],
	    %           quat[T, +, *, zero, one, a, b]],
	    %          [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]]
	    %         (*),
	    %     one_q]
	    % expected type  nz_quat
	  % is subsumed by inv_q_prod_charac_TCC2
	% The assuming TCC (at line 238, column 44) in decl nil for
	 % term generated from inv_q_prod_charac
	    %  inv[nz_quat,
	    %     restrict
	    %         [[quat[T, +, *, zero, one, a, b],
	    %           quat[T, +, *, zero, one, a, b]],
	    %          [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]]
	    %         (*),
	    %     one_q]
	    % generated from assumption group.fullset_is_group
	  % is subsumed by inv_q_prod_charac_TCC3
	% The subtype TCC (at line 247, column 8) in decl nil for
	 % term generated from quat_div_ring_aux2  fullset[T]
	    % expected type  (ring?)
	  % is subsumed by IMP_ring_characteristic_def_TCC1

END quaternions_TCCS