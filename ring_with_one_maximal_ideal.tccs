%% TCCs associated with theory ring_with_one_maximal_ideal
%% This file was automatically generated by PVS, please **do not modify** by hand.
ring_with_one_maximal_ideal_TCCS: THEORY BEGIN

	% Assuming TCC generated (at line 40, column 12) for
	% ring_with_one_prime_ideal[T, +, *, zero, one]
	% generated from assumption ring_with_one_prime_ideal.fullset_is_ring_with_one
	  % untried
	IMP_ring_with_one_prime_ideal_TCC1: OBLIGATION
	ring_with_one?[T, +, *, zero, one](fullset[T])
	
	% Assuming TCC generated (at line 41, column 11) for
	% ring_maximal_ideal[T, +, *, zero]
	% generated from assumption ring_maximal_ideal.fullset_is_ring
	  % untried
	IMP_ring_maximal_ideal_TCC1: OBLIGATION
	ring?[T, +, *, zero](fullset[T])
	
	% The assuming TCC (at line 43, column 11) in decl nil for
	% term generated from IMPORTING
	%  ring_with_id_one_generator[T, +, *, zero, one]
	% generated from assumption ring_with_id_one_generator.fullset_is_ring_with_one
	% Existence TCC generated (at line 59, column 4) for
	% field?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	  % proved
	maximal_ideal_quot_field_TCC1: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          M: maximal_ideal[T, +, *, zero](R)):
	    commutative_ring?(R) IMPLIES EXISTS (x: coset[T, +](R, M)): TRUE
	
	% Subtype TCC generated (at line 59, column 4) for
	% field?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  [[coset[T, +](R, M), coset[T, +](R, M)] ->
	%    coset[T, +](R, M)]
	  % proved
	maximal_ideal_quot_field_TCC2: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          M: maximal_ideal[T, +, *, zero](R)):
	    commutative_ring?(R) IMPLIES
	     FORALL (x1: [coset[T, +](R, M), coset[T, +](R, M)]):
	       coset?[T, +](R, M)(add[T, +](R, M)(x1))
	
	% Subtype TCC generated (at line 59, column 4) for
	% field?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  [[coset[T, +](R, M), coset[T, +](R, M)] ->
	%    coset[T, +](R, M)]
	  % proved
	maximal_ideal_quot_field_TCC3: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          M: maximal_ideal[T, +, *, zero](R)):
	    commutative_ring?(R) IMPLIES
	     FORALL (x1: [coset[T, +](R, M), coset[T, +](R, M)]):
	       coset?[T, +](R, M)(product[T, +, *](R, M)(x1))
	
	% Subtype TCC generated (at line 59, column 4) for
	% field?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  coset[T, +](R, M)
	  % proved
	maximal_ideal_quot_field_TCC4: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          M: maximal_ideal[T, +, *, zero](R)):
	    commutative_ring?(R) IMPLIES coset?[T, +](R, M)(M)
	
	% Subtype TCC generated (at line 59, column 4) for
	% field?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  coset[T, +](R, M)
	  % proved
	maximal_ideal_quot_field_TCC5: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          M: maximal_ideal[T, +, *, zero](R)):
	    commutative_ring?(R) IMPLIES coset?[T, +](R, M)(((+[T, +])(one, M)))
	
	% Existence TCC generated (at line 64, column 4) for
	% division_ring?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	  % proved
	quot_div_ring_maximal_ideal_TCC1: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one], M: ideal[T, +, *, zero](R)):
	    EXISTS (x: coset[T, +](R, M)): TRUE
	
	% Subtype TCC generated (at line 64, column 4) for
	% division_ring?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  [[coset[T, +](R, M), coset[T, +](R, M)] ->
	%    coset[T, +](R, M)]
	  % proved
	quot_div_ring_maximal_ideal_TCC2: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one], M: ideal[T, +, *, zero](R)):
	    FORALL (x1: [coset[T, +](R, M), coset[T, +](R, M)]):
	      coset?[T, +](R, M)(add[T, +](R, M)(x1))
	
	% Subtype TCC generated (at line 64, column 4) for
	% division_ring?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  [[coset[T, +](R, M), coset[T, +](R, M)] ->
	%    coset[T, +](R, M)]
	  % proved
	quot_div_ring_maximal_ideal_TCC3: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one], M: ideal[T, +, *, zero](R)):
	    FORALL (x1: [coset[T, +](R, M), coset[T, +](R, M)]):
	      coset?[T, +](R, M)(product[T, +, *](R, M)(x1))
	
	% Subtype TCC generated (at line 64, column 4) for
	% division_ring?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  coset[T, +](R, M)
	  % proved
	quot_div_ring_maximal_ideal_TCC4: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one], M: ideal[T, +, *, zero](R)):
	    coset?[T, +](R, M)(M)
	
	% Subtype TCC generated (at line 64, column 4) for
	% division_ring?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  coset[T, +](R, M)
	  % proved
	quot_div_ring_maximal_ideal_TCC5: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one], M: ideal[T, +, *, zero](R)):
	    coset?[T, +](R, M)(((+[T, +])(one, M)))
	
	% Existence TCC generated (at line 72, column 6) for
	% division_ring?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	  % proved
	maximal_ideal_charac_TCC1: OBLIGATION
	FORALL (M: set[T], R: ring_with_one[T, +, *, zero, one]):
	    ideal?(M, R) AND commutative_ring?(R) IMPLIES
	     EXISTS (x: coset[T, +](R, M)): TRUE
	
	% Subtype TCC generated (at line 72, column 6) for
	% division_ring?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  [[coset[T, +](R, M), coset[T, +](R, M)] ->
	%    coset[T, +](R, M)]
	  % proved
	maximal_ideal_charac_TCC2: OBLIGATION
	FORALL (M: set[T], R: ring_with_one[T, +, *, zero, one]):
	    ideal?(M, R) AND commutative_ring?(R) IMPLIES
	     FORALL (x1: [coset[T, +](R, M), coset[T, +](R, M)]):
	       coset?[T, +](R, M)(add[T, +](R, M)(x1))
	
	% Subtype TCC generated (at line 72, column 6) for
	% division_ring?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  [[coset[T, +](R, M), coset[T, +](R, M)] ->
	%    coset[T, +](R, M)]
	  % proved
	maximal_ideal_charac_TCC3: OBLIGATION
	FORALL (M: set[T], R: ring_with_one[T, +, *, zero, one]):
	    ideal?(M, R) AND commutative_ring?(R) IMPLIES
	     FORALL (x1: [coset[T, +](R, M), coset[T, +](R, M)]):
	       coset?[T, +](R, M)(product[T, +, *](R, M)(x1))
	
	% Subtype TCC generated (at line 72, column 6) for
	% division_ring?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  coset[T, +](R, M)
	  % proved
	maximal_ideal_charac_TCC4: OBLIGATION
	FORALL (M: set[T], R: ring_with_one[T, +, *, zero, one]):
	    ideal?(M, R) AND commutative_ring?(R) IMPLIES coset?[T, +](R, M)(M)
	
	% Subtype TCC generated (at line 72, column 6) for
	% division_ring?
	%     [coset[T, +](R, M), add[T, +](R, M), product(R, M), M,
	%      (+[T, +])(one, M)]
	% expected type  coset[T, +](R, M)
	  % proved
	maximal_ideal_charac_TCC5: OBLIGATION
	FORALL (M: set[T], R: ring_with_one[T, +, *, zero, one]):
	    ideal?(M, R) AND commutative_ring?(R) IMPLIES
	     coset?[T, +](R, M)(((+[T, +])(one, M)))

END ring_with_one_maximal_ideal_TCCS