%% TCCs associated with theory group
%% This file was automatically generated by PVS, please **do not modify** by hand.
group_TCCS: THEORY BEGIN

	% Assuming TCC generated (at line 49, column 33) for  monoid[T, *, one]
	% generated from assumption monoid.fullset_is_monoid
	  % proved
	IMP_monoid_TCC1: OBLIGATION
	monoid?[T, *, one](fullset[T])
	
	% Subtype TCC generated (at line 51, column 38) for  fullset[T]
	% expected type  group
	  % proved
	group_TCC1: OBLIGATION
	group?[T, *, one](fullset[T])
	
	% Subtype TCC generated (at line 55, column 30) for  group
	% expected type  monoid
	  % proved
	group_is_monoid: OBLIGATION
	FORALL (x: group): monoid?(x)
	
	% Existence TCC generated (at line 58, column 3) for
	% finite_group: TYPE+ = (finite_group?)
	  % proved
	finite_group_TCC1: OBLIGATION
	EXISTS (x: {x: set[T] | finite_group?[T, *, one](x)}): TRUE
	
	% Subtype TCC generated (at line 60, column 36) for  finite_group
	% expected type  group
	  % proved
	finite_group_is_group: OBLIGATION
	FORALL (x: finite_group): group?(x)
	
	% Subtype TCC generated (at line 62, column 36) for  finite_group
	% expected type  finite_monoid
	  % proved
	finite_group_is_finite_monoid: OBLIGATION
	FORALL (x: finite_group): finite_monoid?[T, *, one](x)
	
	% Subtype TCC generated (at line 72, column 29) for  singleton[T](one)
	% expected type  finite_group
	  % proved
	one_group_TCC1: OBLIGATION
	finite_group?[T, *, one](singleton[T](one))
	
	% Existence TCC generated (at line 84, column 3) for
	% inv(x): {y | x * y = one AND y * x = one}
	  % proved
	inv_TCC1: OBLIGATION
	EXISTS (x1: [x: T -> {y | x * y = one AND y * x = one}]): TRUE
	
	% Subtype TCC generated (at line 135, column 42) for  -i
	% expected type  nat
	  % proved
	caret_TCC1: OBLIGATION
	FORALL (i: int): i < 0 IMPLIES -i >= 0
	
	% Subtype TCC generated (at line 135, column 59) for  i
	% expected type  nat
	  % proved
	caret_TCC2: OBLIGATION
	FORALL (i: int): NOT i < 0 IMPLIES i >= 0
	
	% Subtype TCC generated (at line 157, column 27) for
	% {t: T | EXISTS (i: int): t = a ^ i}
	% expected type  group
	  % proved
	generated_by_TCC1: OBLIGATION
	FORALL (a: T): group?[T, *, one]({t: T | EXISTS (i: int): t = a ^ i})
	
	% Subtype TCC generated (at line 173, column 43) for
	% extend[T, (G), bool, FALSE]({s: (G) | FORALL (x: (G)): x * s = s * x})
	% expected type  {s: set[T] | subset?(s, G)}
	  % proved
	center_TCC1: OBLIGATION
	FORALL (G: group):
	    subset?[T]
	        (extend[T, (G), bool, FALSE]
	             ({s: (G) | FORALL (x: (G)): x * s = s * x}),
	         G)

END group_TCCS