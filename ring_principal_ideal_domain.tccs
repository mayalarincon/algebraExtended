%% TCCs associated with theory ring_principal_ideal_domain
%% This file was automatically generated by PVS, please **do not modify** by hand.
ring_principal_ideal_domain_TCCS: THEORY BEGIN

	% Assuming TCC generated (at line 34, column 12) for
	% ring_with_one_maximal_ideal[T, +, *, zero, one]
	% generated from assumption ring_with_one_maximal_ideal.fullset_is_ring_with_one
	  % untried
	IMP_ring_with_one_maximal_ideal_TCC1: OBLIGATION
	ring_with_one?[T, +, *, zero, one](fullset[T])
	
	% Assuming TCC generated (at line 36, column 11) for
	% ring_principal_ideal[T, +, *, zero]
	% generated from assumption ring_principal_ideal.fullset_is_ring
	  % untried
	IMP_ring_principal_ideal_TCC1: OBLIGATION
	ring?[T, +, *, zero](fullset[T])
	
	% The assuming TCC (at line 38, column 11) in decl nil for
	% term generated from IMPORTING
	%  ring_nz_closed_aux[T, +, *, zero]
	% generated from assumption ring_nz_closed_aux.fullset_is_ring
	% The assuming TCC (at line 39, column 11) in decl nil for
	% term generated from IMPORTING
	%  ring_unit[T, +, *, zero, one]
	% generated from assumption ring_unit.fullset_is_ring_with_one
	% The assuming TCC (at line 41, column 12) in decl nil for
	% term generated from IMPORTING
	%  ring_divides[T, +, *, zero, one]
	% generated from assumption ring_divides.fullset_is_ring_with_one
	% The assuming TCC (at line 42, column 12) in decl nil for
	% term generated from IMPORTING
	%  ring_prime_element[T, +, *, zero, one]
	% generated from assumption ring_prime_element.fullset_is_ring_with_one
	% Subtype TCC generated (at line 59, column 64) for  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	  % untried
	PID_prime_el_iff_irreducible_TCC1: OBLIGATION
	FORALL (R: (principal_ideal_domain?[T, +, *, zero, one]), p: (R)):
	    ring_with_one?[T, +, *, zero, one](R)
	
	% The subtype TCC (at line 59, column 97) in decl nil for
	% term generated from PID_prime_el_iff_irreducible  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% Subtype TCC generated (at line 64, column 77) for  c
	% expected type  (remove(zero, R))
	  % untried
	nonzero_nonunit_irreducible_divides_TCC1: OBLIGATION
	FORALL (R: principal_ideal_domain[T, +, *, zero, one], a: (R)):
	    a /= zero AND NOT unit?(R)(a) IMPLIES
	     FORALL (c: (R)):
	       R_irreducible_element?(R)(c) IMPLIES remove[T](zero, R)(c)
	
	% The subtype TCC (at line 59, column 97) in decl nil for
	 % term generated from PID_prime_el_iff_irreducible  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by PID_prime_el_iff_irreducible_TCC1
	
	% The subtype TCC (at line 63, column 71) in decl nil for
	% term generated from nonzero_nonunit_irreducible_divides  R
	% expected type  (ring_with_one?)
	% The subtype TCC (at line 64, column 55) in decl nil for
	% term generated from nonzero_nonunit_irreducible_divides  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% Subtype TCC generated (at line 67, column 51) for  x
	% expected type  (R)
	  % untried
	non_fact_el_set_TCC1: OBLIGATION
	FORALL (R: principal_ideal_domain[T, +, *, zero, one], x: T):
	    member(x, R) AND x /= zero IMPLIES R(x)
	
	% The subtype TCC (at line 63, column 71) in decl nil for
	 % term generated from nonzero_nonunit_irreducible_divides  R
	    % expected type  (ring_with_one?)
	  % is subsumed by PID_prime_el_iff_irreducible_TCC1
	% The subtype TCC (at line 64, column 55) in decl nil for
	 % term generated from nonzero_nonunit_irreducible_divides  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by PID_prime_el_iff_irreducible_TCC1
	
	% Subtype TCC generated (at line 67, column 48) for  R
	% expected type  (ring_with_one?)
	  % untried
	non_fact_el_set_TCC2: OBLIGATION
	FORALL (R: principal_ideal_domain[T, +, *, zero, one], x: T):
	    member(x, R) AND x /= zero IMPLIES ring_with_one?[T, +, *, zero, one](R)
	
	% The subtype TCC (at line 68, column 23) in decl nil for
	% term generated from non_fact_el_set  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% Subtype TCC generated (at line 73, column 63) for  a
	% expected type  (R)
	  % untried
	empty_non_fact_el_set_aux1_TCC1: OBLIGATION
	FORALL (R: principal_ideal_domain[T, +, *, zero, one],
	          a: (non_fact_el_set(R)), x: (non_fact_el_set(R))):
	    R(a)
	
	% The subtype TCC (at line 68, column 23) in decl nil for
	 % term generated from non_fact_el_set  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by non_fact_el_set_TCC2
	
	% Subtype TCC generated (at line 73, column 77) for  x
	% expected type  (R)
	  % untried
	empty_non_fact_el_set_aux1_TCC2: OBLIGATION
	FORALL (R: principal_ideal_domain[T, +, *, zero, one],
	          a: (non_fact_el_set(R)), x: (non_fact_el_set(R))):
	    R(x)
	
	% Subtype TCC generated (at line 77, column 76) for  n - 1
	% expected type  nat
	  % untried
	phi_TCC1: OBLIGATION
	FORALL (n: nat, R: principal_ideal_domain[T, +, *, zero, one],
	          a: (non_fact_el_set(R))):
	    NOT n = 0 IMPLIES FORALL (x: (non_fact_el_set(R))): n - 1 >= 0
	
	% Termination TCC generated (at line 77, column 72) for  phi(n - 1, R, a)
	  % untried
	phi_TCC2: OBLIGATION
	FORALL (n: nat, R: principal_ideal_domain[T, +, *, zero, one],
	          a: (non_fact_el_set(R))):
	    NOT n = 0 IMPLIES FORALL (x: (non_fact_el_set(R))): n - 1 < n
	
	% Subtype TCC generated (at line 77, column 72) for  phi(n - 1, R, a)
	% expected type  (R)
	  % untried
	phi_TCC3: OBLIGATION
	FORALL (n: nat,
	          v:
	            [d1:
	               {z:
	                  [nat, R: principal_ideal_domain[T, +, *, zero, one],
	                   (non_fact_el_set(R))] |
	                  z`1 < n} ->
	               (non_fact_el_set(d1`2))],
	          R: principal_ideal_domain[T, +, *, zero, one],
	          a: (non_fact_el_set(R))):
	    NOT n = 0 IMPLIES FORALL (x: (non_fact_el_set(R))): R(v(n - 1, R, a))
	
	% Subtype TCC generated (at line 77, column 18) for
	% {x: (non_fact_el_set(R)) |
	%    strict_subset?(one_gen(R)(phi(n - 1, R, a)), one_gen(R)(x))}
	% expected type  (nonempty?[(non_fact_el_set(R))])
	  % untried
	phi_TCC4: OBLIGATION
	FORALL (n: nat,
	          v:
	            [d1:
	               {z:
	                  [nat, R: principal_ideal_domain[T, +, *, zero, one],
	                   (non_fact_el_set(R))] |
	                  z`1 < n} ->
	               (non_fact_el_set(d1`2))],
	          R: principal_ideal_domain[T, +, *, zero, one],
	          a: (non_fact_el_set(R))):
	    NOT n = 0 IMPLIES
	     nonempty?[(non_fact_el_set(R))]
	         ({x: (non_fact_el_set(R)) |
	             strict_subset?[(R)]
	                 (one_gen[T, +, *, zero](R)(v(n - 1, R, a)),
	                  one_gen[T, +, *, zero](R)(x))})
	
	% The subtype TCC (at line 77, column 99) in decl nil for
	% term generated from phi  x
	% expected type  (R)
	% Subtype TCC generated (at line 86, column 30) for  phi(i)
	% expected type  (R)
	  % untried
	empty_non_fact_el_set_aux2_TCC1: OBLIGATION
	FORALL (R: principal_ideal_domain[T, +, *, zero, one],
	          a: (non_fact_el_set(R)), phi: [nat -> (non_fact_el_set(R))], i: nat):
	    R(phi(i))
	
	% The subtype TCC (at line 77, column 99) in decl nil for
	 % term generated from phi  x
	    % expected type  (R)
	  % is subsumed by empty_non_fact_el_set_aux1_TCC2
	
	% Subtype TCC generated (at line 86, column 49) for  phi(i + 1)
	% expected type  (R)
	  % untried
	empty_non_fact_el_set_aux2_TCC2: OBLIGATION
	FORALL (R: principal_ideal_domain[T, +, *, zero, one],
	          a: (non_fact_el_set(R)), phi: [nat -> (non_fact_el_set(R))], i: nat):
	    R(phi(i + 1))
	
	% Subtype TCC generated (at line 92, column 49) for  phi(j)
	% expected type  (R)
	  % untried
	empty_non_fact_el_set_aux3_TCC1: OBLIGATION
	FORALL (R: principal_ideal_domain[T, +, *, zero, one],
	          a: (non_fact_el_set(R)), phi: [nat -> (non_fact_el_set(R))], i: nat,
	          j: nat | i < j):
	    R(phi(j))
	
	% The subtype TCC (at line 92, column 30) in decl nil for
	% term generated from empty_non_fact_el_set_aux3  phi(i)
	% expected type  (R)
	% The subtype TCC (at line 102, column 46) in decl nil for
	% term generated from PID_factorization_existence  R
	% expected type  (ring_with_one?)
	% The subtype TCC (at line 103, column 21) in decl nil for
	% term generated from PID_factorization_existence  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% Subtype TCC generated (at line 114, column 59) for  i
	% expected type  below[length(fsIq)]
	  % untried
	PID_factorization_uniqueness_TCC1: OBLIGATION
	FORALL (R: principal_ideal_domain[T, +, *, zero, one], a: (R),
	          fsIp, fsIq: fsIr[T, +, *, zero, one](R)):
	         (a /= zero) AND (NOT unit?(R)(a)) AND (a = op_fseq(fsIp))
	     AND (a = op_fseq(fsIq)) AND (fsIp`length = fsIq`length)
	     IMPLIES
	     FORALL (phi: [below[fsIp`length] -> below[fsIp`length]]):
	       (bijective?(phi)) IMPLIES
	        FORALL (i: below[fsIp`length]): i < fsIq`length
	
	% The subtype TCC (at line 92, column 30) in decl nil for
	 % term generated from empty_non_fact_el_set_aux3  phi(i)
	    % expected type  (R)
	  % is subsumed by empty_non_fact_el_set_aux2_TCC1
	% The subtype TCC (at line 102, column 46) in decl nil for
	 % term generated from PID_factorization_existence  R
	    % expected type  (ring_with_one?)
	  % is subsumed by PID_prime_el_iff_irreducible_TCC1
	% The subtype TCC (at line 103, column 21) in decl nil for
	 % term generated from PID_factorization_existence  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by PID_prime_el_iff_irreducible_TCC1
	
	% Subtype TCC generated (at line 114, column 54) for
	% finseq_appl[(R)](fsIq)(i)
	% expected type  (remove(zero, R))
	  % untried
	PID_factorization_uniqueness_TCC2: OBLIGATION
	FORALL (R: principal_ideal_domain[T, +, *, zero, one], a: (R),
	          fsIp, fsIq: fsIr[T, +, *, zero, one](R)):
	         (a /= zero) AND (NOT unit?(R)(a)) AND (a = op_fseq(fsIp))
	     AND (a = op_fseq(fsIq)) AND (fsIp`length = fsIq`length)
	     IMPLIES
	     FORALL (phi: [below[fsIp`length] -> below[fsIp`length]]):
	       (bijective?(phi)) IMPLIES
	        FORALL (i: below[fsIp`length]):
	          remove[T](zero, R)(finseq_appl[(R)](fsIq)(i))
	
	% Subtype TCC generated (at line 114, column 62) for
	% finseq_appl[(R)](fsIp)(phi(i))
	% expected type  (remove(zero, R))
	  % untried
	PID_factorization_uniqueness_TCC3: OBLIGATION
	FORALL (R: principal_ideal_domain[T, +, *, zero, one], a: (R),
	          fsIp, fsIq: fsIr[T, +, *, zero, one](R)):
	         (a /= zero) AND (NOT unit?(R)(a)) AND (a = op_fseq(fsIp))
	     AND (a = op_fseq(fsIq)) AND (fsIp`length = fsIq`length)
	     IMPLIES
	     FORALL (phi: [below[fsIp`length] -> below[fsIp`length]]):
	       (bijective?(phi)) IMPLIES
	        FORALL (i: below[fsIp`length]):
	          remove[T](zero, R)(finseq_appl[(R)](fsIp)(phi(i)))

END ring_principal_ideal_domain_TCCS