%% TCCs associated with theory lagrange_scaf
%% This file was automatically generated by PVS, please **do not modify** by hand.
lagrange_scaf_TCCS: THEORY BEGIN

	% Subtype TCC generated (at line 24, column 44) for
	% extend[setof[T], (nonempty?[T]), bool, FALSE]
	%     (emptyset[(nonempty?[T])])
	% expected type  partition
	  % proved
	partition_TCC1: OBLIGATION
	partition?(extend[setof[T], (nonempty?[T]), bool, FALSE]
	                 (emptyset[(nonempty?[T])]))
	
	% Subtype TCC generated (at line 34, column 50) for
	% extend[setof[T], (nonempty?[T]), bool, FALSE]
	%     (emptyset[(nonempty?[T])])
	% expected type  finite_partition
	  % proved
	finite_partition_TCC1: OBLIGATION
	finite_partition?(extend[setof[T], (nonempty?[T]), bool, FALSE]
	                        (emptyset[(nonempty?[T])]))
	
	% Subtype TCC generated (at line 37, column 42) for  finite_partition
	% expected type  partition
	  % proved
	finite_partition_is_partition: OBLIGATION
	FORALL (x: finite_partition): partition?(x)
	
	% Subtype TCC generated (at line 51, column 54) for  A
	% expected type  finite_set[T]
	  % proved
	card_equal_partition_TCC1: OBLIGATION
	FORALL (PP: finite_partition, n: nat):
	    card(PP) = n IMPLIES FORALL (A: (PP)): is_finite[T](A)
	
	% Subtype TCC generated (at line 54, column 39) for  Union(PP)
	% expected type  finite_set[T]
	  % proved
	card_equal_partition_TCC2: OBLIGATION
	FORALL (PP: finite_partition, m, n: nat):
	    (FORALL (A, B: (PP)): A = B OR disjoint?(A, B)) AND
	     (FORALL (A: (PP)): card(A) = m) AND card(PP) = n
	     IMPLIES is_finite[T](Union[T](PP))
	
	% Subtype TCC generated (at line 58, column 48) for  A
	% expected type  finite_set[T]
	  % proved
	card_eq_part_TCC1: OBLIGATION
	FORALL (PP: finite_partition, A, B: (PP)): is_finite[T](A)
	
	% Subtype TCC generated (at line 58, column 58) for  B
	% expected type  finite_set[T]
	  % proved
	card_eq_part_TCC2: OBLIGATION
	FORALL (PP: finite_partition, A, B: (PP)): is_finite[T](B)
	
	% Subtype TCC generated (at line 62, column 28) for  Union(PP)
	% expected type  finite_set[T]
	  % proved
	card_eq_part_TCC3: OBLIGATION
	FORALL (H: set[T], PP: finite_partition):
	    (PP(H) AND
	      (FORALL (A, B: (PP)): A = B OR disjoint?(A, B)) AND
	       FORALL (A, B: (PP)): card(A) = card(B))
	     IMPLIES is_finite[T](Union[T](PP))
	
	% Subtype TCC generated (at line 62, column 55) for  H
	% expected type  finite_set[T]
	  % proved
	card_eq_part_TCC4: OBLIGATION
	FORALL (H: set[T], PP: finite_partition):
	    (PP(H) AND
	      (FORALL (A, B: (PP)): A = B OR disjoint?(A, B)) AND
	       FORALL (A, B: (PP)): card(A) = card(B))
	     IMPLIES is_finite[T](H)

END lagrange_scaf_TCCS