{
 "ring_divides.divides_subset": [
  {
   "info": {
    "theory": "ring_divides",
    "formula": "divides_subset",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6e4071175bb912fc332a379e499ae7fea8860ada257267ccb33e4b0c52c8f8ed"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "divides_subset",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(typepred \"R\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(rewrite \"commutative_id_one_gen_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"commutative_id_one_gen_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"divides?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"subset?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"member\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"restrict\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"+\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst 1 \"x*h\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(replace -1 -2 rl)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite \"times_associative\")",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(lemma \"R_prod_star_closed\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(inst?)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(inst -1 \"R\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(rewrite \"commutative_id_one_gen_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"commutative_id_one_gen_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"subset?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"divides?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(typepred \"a\" \"b\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"member\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst -3 \"b\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"restrict\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"+\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(split)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(inst 1 \"h\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(inst 1 \"one\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "2.2.1",
                "name": "(2.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.2.2",
                "name": "(2.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.2",
                  "name": "(hide-all-but (-3 1))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"ring_with_one?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"monoid?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"monad?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"member\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "ring_divides.associates_equiv_relation": [
  {
   "info": {
    "theory": "ring_divides",
    "formula": "associates_equiv_relation",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6e4071175bb912fc332a379e499ae7fea8860ada257267ccb33e4b0c52c8f8ed"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "associates_equiv_relation",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skosimp)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"equivalence?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(split)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(expand \"reflexive?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(skosimp)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"associates?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(case \"divides?(R!1)(x!1, x!1)\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(hide 2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"divides?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(typepred \"x!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"remove\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"member\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(inst 2 \"one\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.2.1",
                "name": "(1.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.2.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.2.2",
                "name": "(1.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.2.2",
                  "name": "(hide -1 2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.2",
                  "name": "(typepred \"R!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.2",
                  "name": "(expand \"ring_with_one?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.2",
                  "name": "(expand \"monoid?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.2",
                  "name": "(expand \"monad?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.2",
                  "name": "(expand \"member\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "1.3",
            "name": "(1.3)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.3",
              "name": "(typepred \"x!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.3",
              "name": "(expand \"remove\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.3",
              "name": "(expand \"member\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.3",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(expand \"symmetric?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"associates?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(expand \"transitive?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(expand \"associates?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(expand \"divides?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(skeep*)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(split)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "3.1",
            "name": "(3.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "3.1",
              "name": "(inst 1 \"x_1 * x!1\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "3.1.1",
                "name": "(3.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "3.1.1",
                  "name": "(hide -2 -4)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.1.1",
                  "name": "(replace -1 -2 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.1.1",
                  "name": "(rewrite \"times_associative\")",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "3.1.2",
                "name": "(3.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "3.1.2",
                  "name": "(typepred \"x_1\" \"x!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.1.2",
                  "name": "(hide-all-but (-1 -2 1))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.1.2",
                  "name": "(lemma \"R_prod_star_closed\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.1.2",
                  "name": "(inst -1 \"R!1\" \"x_1\" \"x!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.1.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "3.2",
            "name": "(3.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "3.2",
              "name": "(hide -1 -3)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.2",
              "name": "(replace -2 -1 rl)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.2",
              "name": "(inst 1 \"x!2 * x_1!1\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "3.2.1",
                "name": "(3.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "3.2.1",
                  "name": "(rewrite \"times_associative\")",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "3.2.2",
                "name": "(3.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "3.2.2",
                  "name": "(hide -)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.2.2",
                  "name": "(typepred \"x!2\" \"x_1!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.2.2",
                  "name": "(lemma \"R_prod_star_closed\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.2.2",
                  "name": "(inst -1 \"R!1\" \"x!2\" \"x_1!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.2.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "ring_divides.divides_equal": [
  {
   "info": {
    "theory": "ring_divides",
    "formula": "divides_equal",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6e4071175bb912fc332a379e499ae7fea8860ada257267ccb33e4b0c52c8f8ed"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "divides_equal",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"associates?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(iff)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(prop)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(lemma \"divides_subset\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst -1 \"R\" \"a\" \"b\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"subset?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst -1 \"x!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(lemma \"divides_subset\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(inst -1 \"R\" \"b\" \"a\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"subset?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(inst -1 \"x!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(rewrite \"commutative_id_one_gen_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"commutative_id_one_gen_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst -1 \"b\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"restrict\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"+\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(iff)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(prop)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(expand \"divides?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(typepred \"b\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(expand \"remove\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(hide 1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(skeep -3)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(inst 1 \"h\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(hide 1 3)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(inst 1 \"one\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "2.2.1",
                "name": "(2.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.2.2",
                "name": "(2.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.2",
                  "name": "(typepred \"R\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"ring_with_one?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"monoid?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"monad?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"member\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(rewrite \"commutative_id_one_gen_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"commutative_id_one_gen_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(inst -1 \"a\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(iff)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(prop)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "3.1",
            "name": "(3.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "3.1",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.1",
              "name": "(expand \"+\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.1",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.1",
              "name": "(hide -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.1",
              "name": "(expand \"divides?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.1",
              "name": "(typepred \"a\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.1",
              "name": "(expand \"remove\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.1",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.1",
              "name": "(inst 2 \"h\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "3.2",
            "name": "(3.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "3.2",
              "name": "(hide 2 3)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.2",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.2",
              "name": "(expand \"+\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "3.2",
              "name": "(inst 1 \"one\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "3.2.1",
                "name": "(3.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "3.2.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "3.2.2",
                "name": "(3.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "3.2.2",
                  "name": "(typepred \"R\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.2.2",
                  "name": "(expand \"ring_with_one?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.2.2",
                  "name": "(expand \"monoid?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.2.2",
                  "name": "(expand \"monad?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.2.2",
                  "name": "(expand \"member\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "3.2.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "ring_divides.unit_divides": [
  {
   "info": {
    "theory": "ring_divides",
    "formula": "unit_divides",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6e4071175bb912fc332a379e499ae7fea8860ada257267ccb33e4b0c52c8f8ed"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "unit_divides",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"unit?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"r_invertible?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"divides?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(case \"r = one * r\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(replaces -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replace -1 1 rl)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst 1 \"y * r\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.1.1",
                "name": "(1.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.1",
                  "name": "(rewrite \"times_associative\")",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.1.2",
                "name": "(1.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.2",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(typepred \"R\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(expand \"ring_with_one?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(flatten)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(hide -2 -3)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(lemma \"R_prod_star_closed\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst -1 \"R\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(inst -1 \"one\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(expand \"divides?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(expand \"unit?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(expand \"l_invertible?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(expand \"r_invertible?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(split)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "2.1.1",
                "name": "(2.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.1.1",
                  "name": "(inst 1 \"x\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(typepred \"R\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(expand \"commutative_ring?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(flatten)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(hide -1 -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(expand \"commutative?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(inst -1 \"u\")",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "2.1.1.1",
                    "name": "(2.1.1.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.1.1.1",
                      "name": "(expand \"restrict\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.1.1.1",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   },
                   {
                    "branch": "2.1.1.2",
                    "name": "(2.1.1.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.1.1.2",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.1.1.2",
                      "name": "(typepred \"u\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.1.1.2",
                      "name": "(expand \"remove\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.1.1.2",
                      "name": "(expand \"member\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.1.1.2",
                      "name": "(propax)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "2.1.2",
                "name": "(2.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.1.2",
                  "name": "(inst 1 \"x\")",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(typepred \"R\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"ring_with_one?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"monoid?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"monad?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"member\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "ring_divides.one_gen_unit_R": [
  {
   "info": {
    "theory": "ring_divides",
    "formula": "one_gen_unit_R",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6e4071175bb912fc332a379e499ae7fea8860ada257267ccb33e4b0c52c8f8ed"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "one_gen_unit_R",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(iff)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(prop)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(propax)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(rewrite \"commutative_id_one_gen_charac\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"+\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(rewrite \"unit_divides\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(inst -2 \"x!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"divides?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(inst 1 \"x\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(rewrite \"unit_divides\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"divides?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst -1 \"r\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(iff)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(prop)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(rewrite \"commutative_id_one_gen_charac\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(expand \"+\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(inst 1 \"h\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(propax)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "ring_divides.quot_unit_associates": [
  {
   "info": {
    "theory": "ring_divides",
    "formula": "quot_unit_associates",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6e4071175bb912fc332a379e499ae7fea8860ada257267ccb33e4b0c52c8f8ed"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quot_unit_associates",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skosimp)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"associates?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(split)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(expand \"unit?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"r_invertible?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(skosimp)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(lemma \"times_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -1 \"b!1\" \"r!1\" \"y!1\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replace -3 -1 rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replaces -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"divides?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst 1 \"y!1\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(expand \"divides?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst 1 \"r!1\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "ring_divides.int_domain_assoc_quot_unit": [
  {
   "info": {
    "theory": "ring_divides",
    "formula": "int_domain_assoc_quot_unit",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6e4071175bb912fc332a379e499ae7fea8860ada257267ccb33e4b0c52c8f8ed"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "int_domain_assoc_quot_unit",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skosimp)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"associates?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"divides?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -3)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skosimp)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -2 -1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"cancel_right_minus\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"a!1\" \"a!1 * x!1 * r!1\" \"a!1 * x!1 * r!1\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -2 -3)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"times_associative\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"times_negative\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(name-replace \"A\" \"a!1\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"A\" -1 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(case-replace \"a!1 = a!1*one\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(expand \"A\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"right_distributive\" :dir rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(lemma \"nz_times_is_zero\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -1 \"R!1\" \"a!1\" \"(one + (inv((x!1 * r!1))))\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(typepred \"R!1\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"integral_domain_w_one?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"integral_domain?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(typepred \"a!1\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"remove\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"member\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(case \" R!1((one + (inv((x!1 * r!1)))))\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(lemma \"cancel_right_plus\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst -1 \" (one + (inv((x!1 * r!1))))\" \"zero\" \"x!1*r!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite \"plus_associative\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(hide-all-but (-1 -4 2))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"unit?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(split)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.1.1",
                "name": "(1.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.1",
                  "name": "(expand \"l_invertible?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst 1 \"x!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.1.2",
                "name": "(1.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.2",
                  "name": "(expand \"r_invertible?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst 1 \"x!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(expand \"commutative_ring?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(flatten)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(expand \"commutative?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst -3 \"x!1\" \"r!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(expand \"restrict\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(hide-all-but (-2 -4 1))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"commutative_ring?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(lemma \"R_sum_star_closed\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(inst -1 \"R!1\" \"one\" \"(inv((x!1 * r!1)))\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(hide 2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"monad?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"member\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(hide-all-but (-1 1))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(lemma \"inv_is_member_R\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(inst -1 \"R!1\" \"x!1*r!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(hide 2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(lemma \"R_prod_star_closed\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(inst -1 \"R!1\" \"x!1\" \"r!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ]
}