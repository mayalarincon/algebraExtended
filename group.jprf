{
 "group.IMP_monoid_TCC1": [
  {
   "info": {
    "theory": "group",
    "formula": "IMP_monoid_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "IMP_monoid_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(lemma \"fullset_is_group\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"group?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "group.group_TCC1": [
  {
   "info": {
    "theory": "group",
    "formula": "group_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "group_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(lemma \"fullset_is_group\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(propax)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "group.group_is_monoid": [
  {
   "info": {
    "theory": "group",
    "formula": "group_is_monoid",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "group_is_monoid",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(judgement-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "group.finite_group_TCC1": [
  {
   "info": {
    "theory": "group",
    "formula": "finite_group_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "finite_group_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(inst + \"singleton[T](one)\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "group.finite_group_is_group": [
  {
   "info": {
    "theory": "group",
    "formula": "finite_group_is_group",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "finite_group_is_group",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(judgement-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "group.finite_group_is_finite_monoid": [
  {
   "info": {
    "theory": "group",
    "formula": "finite_group_is_finite_monoid",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "finite_group_is_finite_monoid",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(judgement-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "group.one_group_TCC1": [
  {
   "info": {
    "theory": "group",
    "formula": "one_group_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "one_group_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(expand \"finite_group?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"group?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(expand \"inv_exists?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(skosimp*)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst + \"one\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(typepred \"x!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(rewrite \"left_identity\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(rewrite \"right_identity\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(grind)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(expand \"singleton\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(propax)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "group.inv_TCC1": [
  {
   "info": {
    "theory": "group",
    "formula": "inv_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "inv_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(inst + \"(lambda (x:T): choose({y: T | x * y = one AND y * x = one}))\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"fullset_is_group\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"group?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"inv_exists?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"nonempty?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"empty?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"member\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skosimp*)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -2 \"x!1\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(skolem!)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst - \"y!1\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(expand \"fullset\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "group.caret_TCC1": [
  {
   "info": {
    "theory": "group",
    "formula": "caret_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "caret_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "group.caret_TCC2": [
  {
   "info": {
    "theory": "group",
    "formula": "caret_TCC2",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "caret_TCC2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "group.generated_by_TCC1": [
  {
   "info": {
    "theory": "group",
    "formula": "generated_by_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "generated_by_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skosimp*)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"group?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(split)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(expand \"monoid?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(split)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(expand \"monad?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"star_closed?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"identity?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"member\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(split)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.1.1",
                "name": "(1.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.1",
                  "name": "(skosimp*)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(typepred \"x!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(typepred \"y!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(skosimp*)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst + \"i!2+i!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(rewrite \"expt_mult\" :dir rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.1.2",
                "name": "(1.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.2",
                  "name": "(inst + \"0\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(rewrite \"expt_0\")",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.1.3",
                "name": "(1.1.3)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.3",
                  "name": "(skosimp)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(expand \"restrict\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(rewrite \"left_identity\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(rewrite \"right_identity\")",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(lemma \"fullset_is_group\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"group?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"monoid?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"associative?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(skosimp*)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(typepred \"x!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(typepred \"y!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(typepred \"z!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(skosimp*)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(inst - \"x!1\" \"y!1\" \"z!1\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.2.1",
                "name": "(1.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.2.1",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.2.2",
                "name": "(1.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.2.2",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.2",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.2.3",
                "name": "(1.2.3)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.2.3",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.3",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(expand \"inv_exists?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(skosimp*)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(typepred \"x!1\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(skolem!)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst + \"a!1^(-i!1)\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(replace -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(lemma \"expt_mult\" (\"a\" \"a!1\" \"i\" \"i!1\" \"j\" \"-i!1\"))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(lemma \"expt_mult\" (\"a\" \"a!1\" \"i\" \"-i!1\" \"j\" \"i!1\"))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(rewrite \"expt_0\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(inst + \"-i!1\")",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "group.center_TCC1": [
  {
   "info": {
    "theory": "group",
    "formula": "center_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "61825a539881d5addf796e111fa6a3da0b73d4f4d204a46854534b139a6faea7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "center_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(subtype-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ]
}