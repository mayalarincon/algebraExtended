{
 "quaternions.sqr_i": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "sqr_i",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "0b5031092f6692909730880c8580131a26a567379062b066f48be515a04cc16d"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "sqr_i",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.sqr_j": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "sqr_j",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6500e8a79d5ab756a9a0060868c1a768772ed5620643d2147df0f33d7aa264f8"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "sqr_j",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(lemma \"ax_sqr_j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"one\" \"one\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"one_sc_times\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"times_one[T,+,*,zero,one]\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(expand * -1 2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite \"times_zero[T,+,*,zero]\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(lemma \"fullset_is_ring_with_one\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(propax)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(lemma \"fullset_is_ring_with_one\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(propax)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(lemma \"fullset_is_ring_with_one\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.ji_prod": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "ji_prod",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "127c84b2ca0844e47c33ded5ffd3a375c526d5ce11530369070e5085ca481398"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "ji_prod",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(rewrite \"ij_is_k\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"ji_prod\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.quat_is_ring_w_one": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "quat_is_ring_w_one",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quat_is_ring_w_one",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(lemma \"fullset_is_field\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"field?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"division_ring?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide (-2 -3))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"ring_with_one?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(split)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(hide -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"ring?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(split)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(hide-all-but (-1 1))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"abelian_group?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"group?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"monoid?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"monad?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(split)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.1.1",
                "name": "(1.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.1",
                  "name": "(hide-all-but (-1 1))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(grind)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.1.2",
                "name": "(1.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.2",
                  "name": "(hide-all-but (-2 1))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(grind)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.1.3",
                "name": "(1.1.3)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.3",
                  "name": "(hide-all-but 1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(expand \"identity?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(skeep)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(expand \"restrict\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(split)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "1.1.3.1",
                    "name": "(1.1.3.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.3.1",
                      "name": "(rewrite \"plus_zero_q\")",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   },
                   {
                    "branch": "1.1.3.2",
                    "name": "(1.1.3.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.3.2",
                      "name": "(rewrite \"zero_q_plus\")",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "1.1.4",
                "name": "(1.1.4)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.4",
                  "name": "(hide-all-but (-4 1))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(expand \"associative?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(expand \"restrict\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(skeep)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(expand \"+\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(split)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "1.1.4.1",
                    "name": "(1.1.4.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.4.1",
                      "name": "(inst?)",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.1.4.1.1",
                        "name": "(1.1.4.1.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.1.1",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.1.1",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.4.1.2",
                        "name": "(1.1.4.1.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.1.2",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.1.2",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.4.1.3",
                        "name": "(1.1.4.1.3)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.1.3",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.1.3",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "branch": "1.1.4.2",
                    "name": "(1.1.4.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.4.2",
                      "name": "(inst?)",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.1.4.2.1",
                        "name": "(1.1.4.2.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.2.1",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.2.1",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.4.2.2",
                        "name": "(1.1.4.2.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.2.2",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.2.2",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.4.2.3",
                        "name": "(1.1.4.2.3)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.2.3",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.2.3",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "branch": "1.1.4.3",
                    "name": "(1.1.4.3)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.4.3",
                      "name": "(inst?)",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.1.4.3.1",
                        "name": "(1.1.4.3.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.3.1",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.3.1",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.4.3.2",
                        "name": "(1.1.4.3.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.3.2",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.3.2",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.4.3.3",
                        "name": "(1.1.4.3.3)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.3.3",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.3.3",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "branch": "1.1.4.4",
                    "name": "(1.1.4.4)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.4.4",
                      "name": "(inst?)",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.1.4.4.1",
                        "name": "(1.1.4.4.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.4.1",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.4.1",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.4.4.2",
                        "name": "(1.1.4.4.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.4.2",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.4.2",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.4.4.3",
                        "name": "(1.1.4.4.3)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.4.4.3",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.4.4.3",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "1.1.5",
                "name": "(1.1.5)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.5",
                  "name": "(hide-all-but (-5 1))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.5",
                  "name": "(expand \"inv_exists?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.5",
                  "name": "(skeep)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.5",
                  "name": "(typepred \"x\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.5",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.5",
                  "name": "(inst-cp -1 \"x`x\")",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "1.1.5.1",
                    "name": "(1.1.5.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.5.1",
                      "name": "(inst-cp -1 \"x`y\")",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.1.5.1.1",
                        "name": "(1.1.5.1.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.5.1.1",
                          "name": "(inst-cp -1 \"x`z\")",
                          "type": "proof-command",
                          "rules": [
                           {
                            "branch": "1.1.5.1.1.1",
                            "name": "(1.1.5.1.1.1)",
                            "type": "proof-branch",
                            "rules": [
                             {
                              "branch": "1.1.5.1.1.1",
                              "name": "(inst -1 \"x`t\")",
                              "type": "proof-command",
                              "rules": [
                               {
                                "branch": "1.1.5.1.1.1.1",
                                "name": "(1.1.5.1.1.1.1)",
                                "type": "proof-branch",
                                "rules": [
                                 {
                                  "branch": "1.1.5.1.1.1.1",
                                  "name": "(skosimp*)",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.5.1.1.1.1",
                                  "name": "(inst 1 \"(y!4, y!3, y!2, y!1)\")",
                                  "type": "proof-command",
                                  "rules": [
                                   {
                                    "branch": "1.1.5.1.1.1.1.1",
                                    "name": "(1.1.5.1.1.1.1.1)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.5.1.1.1.1.1",
                                      "name": "(expand \"+\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.5.1.1.1.1.1",
                                      "name": "(expand \"zero_q\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.5.1.1.1.1.1",
                                      "name": "(assert)",
                                      "type": "proof-command",
                                      "rules": []
                                     }
                                    ]
                                   },
                                   {
                                    "branch": "1.1.5.1.1.1.1.2",
                                    "name": "(1.1.5.1.1.1.1.2)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.5.1.1.1.1.2",
                                      "name": "(hide -)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.5.1.1.1.1.2",
                                      "name": "(expand \"fullset\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.5.1.1.1.1.2",
                                      "name": "(propax)",
                                      "type": "proof-command",
                                      "rules": []
                                     }
                                    ]
                                   }
                                  ]
                                 }
                                ]
                               },
                               {
                                "branch": "1.1.5.1.1.1.2",
                                "name": "(1.1.5.1.1.1.2)",
                                "type": "proof-branch",
                                "rules": [
                                 {
                                  "branch": "1.1.5.1.1.1.2",
                                  "name": "(expand \"fullset\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.5.1.1.1.2",
                                  "name": "(propax)",
                                  "type": "proof-command",
                                  "rules": []
                                 }
                                ]
                               }
                              ]
                             }
                            ]
                           },
                           {
                            "branch": "1.1.5.1.1.2",
                            "name": "(1.1.5.1.1.2)",
                            "type": "proof-branch",
                            "rules": [
                             {
                              "branch": "1.1.5.1.1.2",
                              "name": "(expand \"fullset\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.5.1.1.2",
                              "name": "(propax)",
                              "type": "proof-command",
                              "rules": []
                             }
                            ]
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "branch": "1.1.5.1.2",
                        "name": "(1.1.5.1.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.5.1.2",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.5.1.2",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "branch": "1.1.5.2",
                    "name": "(1.1.5.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.5.2",
                      "name": "(expand \"fullset\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.5.2",
                      "name": "(propax)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "1.1.6",
                "name": "(1.1.6)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.6",
                  "name": "(hide-all-but (-6 1))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.6",
                  "name": "(expand \"commutative?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.6",
                  "name": "(expand \"restrict\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.6",
                  "name": "(skeep)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.6",
                  "name": "(expand \"+\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.6",
                  "name": "(split)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "1.1.6.1",
                    "name": "(1.1.6.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.6.1",
                      "name": "(inst?)",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.1.6.1.1",
                        "name": "(1.1.6.1.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.6.1.1",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.6.1.1",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.6.1.2",
                        "name": "(1.1.6.1.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.6.1.2",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.6.1.2",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "branch": "1.1.6.2",
                    "name": "(1.1.6.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.6.2",
                      "name": "(inst?)",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.1.6.2.1",
                        "name": "(1.1.6.2.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.6.2.1",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.6.2.1",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.6.2.2",
                        "name": "(1.1.6.2.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.6.2.2",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.6.2.2",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "branch": "1.1.6.3",
                    "name": "(1.1.6.3)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.6.3",
                      "name": "(inst?)",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.1.6.3.1",
                        "name": "(1.1.6.3.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.6.3.1",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.6.3.1",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.6.3.2",
                        "name": "(1.1.6.3.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.6.3.2",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.6.3.2",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "branch": "1.1.6.4",
                    "name": "(1.1.6.4)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.6.4",
                      "name": "(inst?)",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.1.6.4.1",
                        "name": "(1.1.6.4.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.6.4.1",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.6.4.1",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.6.4.2",
                        "name": "(1.1.6.4.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.6.4.2",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.6.4.2",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(hide-all-but (-2 1))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"star_closed?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"member\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"fullset\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(propax)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.3",
            "name": "(1.3)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.3",
              "name": "(hide -)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.3",
              "name": "(lemma \"q_assoc\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.3",
              "name": "(expand \"associative?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.3",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.3",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.3",
              "name": "(inst?)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.4",
            "name": "(1.4)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.4",
              "name": "(hide -)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.4",
              "name": "(expand \"left_distributive?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.4",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.4",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.4",
              "name": "(rewrite \"q_distrl\")",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.5",
            "name": "(1.5)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.5",
              "name": "(hide -)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.5",
              "name": "(expand \"right_distributive?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.5",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.5",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.5",
              "name": "(lemma \"q_distr\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.5",
              "name": "(expand \"distributive?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.5",
              "name": "(inst?)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(hide -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"monoid?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(split)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(hide -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(expand \"monad?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(split)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "2.1.1",
                "name": "(2.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.1.1",
                  "name": "(hide (-2 -3))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(expand \"star_closed?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(skeep)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(expand \"member\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.1.2",
                "name": "(2.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.1.2",
                  "name": "(hide (-1 -3))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.2",
                  "name": "(expand \"member\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.2",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.2",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.1.3",
                "name": "(2.1.3)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.1.3",
                  "name": "(hide -)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.3",
                  "name": "(expand \"identity?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.3",
                  "name": "(expand \"restrict\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.3",
                  "name": "(skeep)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.3",
                  "name": "(split)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "2.1.3.1",
                    "name": "(2.1.3.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.1.3.1",
                      "name": "(rewrite \"times_one_q\")",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   },
                   {
                    "branch": "2.1.3.2",
                    "name": "(2.1.3.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.1.3.2",
                      "name": "(rewrite \"one_q_times\")",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(hide -)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(lemma \"q_assoc\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"associative?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(inst?)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.zero_q_plus": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "zero_q_plus",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "zero_q_plus",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand +)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(decompose-equality)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "4",
        "name": "(4)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "4",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.plus_zero_q": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "plus_zero_q",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "plus_zero_q",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand +)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(decompose-equality)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "4",
        "name": "(4)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "4",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.one_q_times": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "one_q_times",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "9e962399376a0fbc7850ab62d6d0e4344ab10d7d435e23ee3feab9fcfa540553"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "one_q_times",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"*\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(decompose-equality)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(case \"fullset_is_ring_with_one\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(expand \"fullset_is_ring_with_one\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(copy -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"ring_with_one?\" -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite* \"zero_times[T,+,*,zero]\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(lemma \"fullset_is_ring_with_one\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"fullset_is_ring_with_one\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(propax)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(lemma \"fullset_is_ring_with_one\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(copy -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"ring_with_one?\" -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite* \"zero_times[T,+,*,zero]\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(lemma \"fullset_is_ring_with_one\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(copy -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(expand \"ring_with_one?\" -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite* \"zero_times[T,+,*,zero]\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "4",
        "name": "(4)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "4",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(lemma \"fullset_is_ring_with_one\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(copy -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(expand \"ring_with_one?\" -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite* \"zero_times[T,+,*,zero]\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.times_one_q": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "times_one_q",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "d74630ad8eab0849045ab94b022fe35582b0b05c2c9c312b4360441ce0441169"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "times_one_q",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"*\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(decompose-equality)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(case \"fullset_is_ring_with_one\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(expand \"fullset_is_ring_with_one\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(copy -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"ring_with_one?\" -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite* \"times_zero[T,+,*,zero]\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite \"times_one[T,+,*,zero,one]\")",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(lemma \"fullset_is_ring_with_one\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"fullset_is_ring_with_one\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(propax)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(lemma \"fullset_is_ring_with_one\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(copy -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"ring_with_one?\" -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite* \"times_zero[T,+,*,zero]\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite* \"zero_times[T,+,*,zero]\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"times_one[T,+,*,zero,one]\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(lemma \"fullset_is_ring_with_one\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(copy -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(expand \"ring_with_one?\" -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite* \"times_zero[T,+,*,zero]\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"times_one[T,+,*,zero,one]\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "4",
        "name": "(4)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "4",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(lemma \"fullset_is_ring_with_one\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(copy -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(expand \"ring_with_one?\" -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite* \"times_zero[T,+,*,zero]\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite \"times_one[T,+,*,zero,one]\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.basis_quat": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "basis_quat",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "basis_quat",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand* *)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand* +)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"one_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"k\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(decompose-equality)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.q_prod_charac": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "q_prod_charac",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "q_prod_charac",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(name-replace \"A\" \"u\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(name-replace \"B\" \"v\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"A\" 1 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"B\" 1 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"basis_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"v\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"sqr_i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"sqr_j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"ji_prod\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_distr\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand* \"A\" \"B\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"distributive?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -2 \"u`x * one_q + u`y * i + u`z * j + u`t * k\" \"v`x * one_q + v`y * i + v`z * j\" \"v`t * k\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -3)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -2 \"u`x * one_q + u`y * i + u`z * j + u`t * k\" \"v`x * one_q + v`y * i\" \"v`z * j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -3)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -2 \"u`x * one_q + u`y * i + u`z * j + u`t * k\" \"v`x * one_q\" \"v`y * i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_distrl\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q + u`y * i + u`z * j\" \"u`t * k\" \"v`x * one_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q + u`y * i\" \"u`z * j\" \"v`x * one_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q\" \"u`y * i\" \"v`x * one_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q + u`y * i + u`z * j\" \"u`t * k\" \"v`y * i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q + u`y * i\" \" u`z * j\" \"v`y * i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q\" \"u`y * i\" \"v`y * i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q + u`y * i + u`z * j\" \"u`t * k\" \"v`z * j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q + u`y * i\" \"u`z * j\" \"v`z * j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q\" \"u`y * i\" \"v`z * j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q + u`y * i + u`z * j \" \"u`t * k\" \"v`t * k\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q + u`y * i\" \" u`z * j \" \"v`t * k\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"u`x * one_q\" \"u`y * i\" \"v`t * k\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"one_q_times\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"times_one_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"times_one_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"times_one_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"one_q_times\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* \"sc_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* \"one_q_times\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sqr_i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sqr_j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"ji_prod\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"ki_prod\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"kj_prod\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"ij_is_k\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"ik_prod\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"jk_prod\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"kk_prod\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"sc_one_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"sc_one_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* \"inv_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"a\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"b\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(case-replace \"a_q = a * one_q\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(case-replace \"b_q = b *one_q\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(lemma \"sc_quat_assoc\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"a\" \"one_q\" \"j\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(lemma \"sc_assoc\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"inv(one)\" \"a\" \"one_q\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replace -2 1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -3 \"inv(one)*a\" \"one_q\" \"j\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replace -4 1 rl)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite \"one_q_times\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(hide -4)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -3 \"(inv(one) * a)\" \"one_q\" \"(b * one_q)\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replace -4 1 rl)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(hide -4)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite \"one_q_times\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -3 \"b\" \"one_q\" \"i\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replace -4 1 rl)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(hide -4)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite \"one_q_times\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -3 \"a\" \"one_q\" \"j\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replace -4 1 rl)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(hide -4)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite \"one_q_times\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"inv(one)\" \"b\" \"one_q\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replace -2 1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -4 \"(inv(one) * b)\" \"one_q\" \"i\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replace -5 1 rl)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(hide -5)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite \"one_q_times\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"(inv(one) * a)\" \"b\" \"one_q\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replaces -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"(u`y * v`y)\" \"a\" \"one_q\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replaces -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"(u`z * v`y)\" \"inv(one)\" \"k\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replaces -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"(u`t * v`y)\" \"inv(one)*a\" \"j\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replaces -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"(u`z * v`z)\" \"b\" \"one_q\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replaces -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"(u`t * v`z)\" \"b\" \"i\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replaces -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"(u`y * v`t)\" \"a\" \"j\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replaces -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"(u`z * v`t)\" \"(inv(one) * b)\" \"i\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replaces -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst -1 \"(u`t * v`t)\" \"((inv(one) * a) * b)\" \"one_q\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replaces -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand* \"one_q\" \"i\" \"j\" \"k\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(decompose-equality)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(grind)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.1.1",
                "name": "(1.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.1",
                  "name": "(hide -)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(lemma \"plus_commutative[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst-cp -1 \"(u`t * v`x) + inv((u`z * v`y)) + (u`y * v`z)\" \"(u`x * v`t)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst-cp -1 \"(u`t * v`x) + inv((u`z * v`y))\" \"(u`y * v`z)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst -1 \"(u`t * v`x)\" \"inv((u`z * v`y))\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(rewrite \"plus_associative[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(rewrite \"plus_associative[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(rewrite \"plus_associative[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.1.2",
                "name": "(1.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.2",
                  "name": "(hide -)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(lemma \"times_commutative[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst-cp -1 \"(u`t * v`y)\" \"inv(a)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst -1 \"(u`y * v`t)\" \"a\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(rewrite \"times_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(rewrite \"times_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(rewrite \"plus_commutative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(rewrite \"plus_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(lemma \"plus_commutative[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst-cp -1 \"u`x * v`z + u`z * v`x + a * (u`y * v`t)\" \"inv(a) * (u`t * v`y)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst -1 \"(u`z * v`x)\" \"(u`x * v`z)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(replace -1 1 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(rewrite \"plus_associative\")",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.1.3",
                "name": "(1.1.3)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.3",
                  "name": "(hide -)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(lemma \"times_commutative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(inst-cp -1 \"(u`t * v`z)\" \"b\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(inst -1 \"(u`z * v`t)\" \"inv(b)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(rewrite \"times_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(rewrite \"times_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(rewrite \"plus_commutative[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(lemma \"plus_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(inst -1 \"(u`x * v`y) + (u`y * v`x)\" \"b * (u`t * v`z)\" \"inv(b) * (u`z * v`t)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(lemma \"plus_commutative[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(inst -1 \"b * (u`t * v`z)\" \"inv(b) * (u`z * v`t)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(rewrite \"plus_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(rewrite \"plus_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(rewrite \"plus_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(rewrite \"plus_associative\")",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.1.4",
                "name": "(1.1.4)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.4",
                  "name": "(hide -)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(rewrite \"plus_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(rewrite \"plus_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(rewrite \"plus_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(rewrite \"plus_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(lemma \"times_associative\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(inst -1 \"(u`t * v`t)\" \"inv(a)\" \"b\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(replace -1 1 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.4",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(hide 2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"b_q\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(hide 2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"a_q\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.sq_i": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "sq_i",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6500e8a79d5ab756a9a0060868c1a768772ed5620643d2147df0f33d7aa264f8"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "sq_i",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(lemma ax_sqr_i)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"one\" \"one\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma one_sc_times)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"one_times[T,+,*,zero,one]\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(inst?)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replaces -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"*\" -1 2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2T",
        "name": "(2T)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2T",
          "name": "(rewrite \"fullset_is_ring_with_one\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.one_sc_times": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "one_sc_times",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "one_sc_times",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand *)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"one_times[T,+,*,zero,one]\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(decompose-equality)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.sc_sqr_i": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "sc_sqr_i",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "sc_sqr_i",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"sqr_i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.sc_sqr_j": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "sc_sqr_j",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "sc_sqr_j",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"sqr_j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.sc_ji_prod": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "sc_ji_prod",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "sc_ji_prod",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"ji_prod\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.sc_quat": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "sc_quat",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "sc_quat",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"sc_quat_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"sc_comm\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -2 \"c\" \"u\" \"d*v\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -2 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"d\" \"u\" \"v\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"sc_quat_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"c\" \"d*u\" \"v\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"sc_quat_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"c*d\" \"u\" \"v\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(propax)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.inv_charac": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "inv_charac",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "inv_charac",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"*\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(decompose-equality)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(expand \"inv\" 1 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(expand \"inv\" 1 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(expand \"inv\" 1 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "4",
        "name": "(4)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "4",
          "name": "(expand \"inv\" 1 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.quat_negative_times": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "quat_negative_times",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quat_negative_times",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat_assoc\" :dir rl)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.quat_times_negative": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "quat_times_negative",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quat_times_negative",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_comm\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat_assoc\" :dir rl)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.kk_prod": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "kk_prod",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "kk_prod",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(rewrite \"ij_is_k\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"associative?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"i\" \"j\" \"i*j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"j\" \"i\" \"j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -2 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"ji_prod_lem\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"i\" \"inv(i*j)\" \"j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -2 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"quat_negative_times\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"i\" \"inv(i)\" \"j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -2 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"quat_negative_times\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"quat_times_negative\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sqr_i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"inv(a_q)\" \"j\" \"j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sqr_j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"quat_negative_times\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.ki_prod": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "ki_prod",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "ki_prod",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(rewrite \"ij_is_k\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"associative?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"i\" \"j\" \"i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"ji_prod_lem\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"quat_negative_times\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"i\" \"inv(i)\" \"j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"quat_times_negative\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sqr_i\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.kj_prod": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "kj_prod",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "kj_prod",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(lemma \"q_inv_inv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 k)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"ji_prod\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat_assoc\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"associative?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"j\" \"i\" \"j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_inv_inv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"i*j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"ji_prod_lem\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_comm\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat_assoc\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"associative?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"j\" \"j\" \"i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sqr_j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"q_inv_inv\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.ik_prod": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "ik_prod",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "ik_prod",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(rewrite \"ij_is_k\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"associative?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"i\" \"i\" \"j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sqr_i\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.jk_prod": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "jk_prod",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "jk_prod",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(rewrite \"ij_is_k\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_inv_inv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"i*j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"ji_prod_lem\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"quat_negative_times\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_comm\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat_assoc\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"associative?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"j\" \"j\" \"i\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sqr_j\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\" :dir rl)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.q_inv_inv": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "q_inv_inv",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "q_inv_inv",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"inv_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite one_sc_times)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.ji_prod_lem": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "ji_prod_lem",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "ji_prod_lem",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(rewrite \"ij_is_k\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"ji_prod\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.sc_one_quat": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "sc_one_quat",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "sc_one_quat",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat_assoc\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"one_q_times\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.sc_one_q": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "sc_one_q",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "sc_one_q",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand* \"*\" \"one_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"times_zero[T,+,*,zero]\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"times_one[T,+,*,zero,one]\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.IMP_field_TCC1": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "IMP_field_TCC1",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "IMP_field_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(assuming-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.IMP_quaternions_def_TCC1": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "IMP_quaternions_def_TCC1",
    "status": "untried",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "IMP_quaternions_def_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(assuming-tcc)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": []
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.pure_quat_charac": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "pure_quat_charac",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "pure_quat_charac",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(expand \"member\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"scalar_F\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"pure_quat\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(expand \"member\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"pure_quat\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"scalar_F\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite q_prod_charac)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(grind)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(hide 2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(lemma fullset_is_field)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(expand field?)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(hide -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(expand \"commutative?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(inst?)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(replaces -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(rewrite \"negate_is_right_inv\")",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(hide 2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(rewrite times_associative)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(lemma fullset_is_field)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand field?)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(hide -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"commutative?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(inst?)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(replaces -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(rewrite times_associative)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(rewrite negative_times)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(rewrite \"negate_is_right_inv\")",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "2.3",
            "name": "(2.3)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.3",
              "name": "(hide 2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(rewrite times_associative)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(lemma fullset_is_field)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(expand field?)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(hide -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(expand \"commutative?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(inst?)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(replaces -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(rewrite negative_times)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(rewrite times_associative)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.3",
              "name": "(rewrite negate_is_left_inv)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(hide -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(expand \"member\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(expand \"scalar_F\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "4",
        "name": "(4)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "4",
          "name": "(expand \"member\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(expand \"scalar_F\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(expand \"pure_quat\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(case \"(one + one) /= zero\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "4.1",
            "name": "(4.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "4.1",
              "name": "(prop)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "4.1.1",
                "name": "(4.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "4.1.1",
                  "name": "(hide (-2 -3))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(rewrite q_prod_charac)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(grind)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(rewrite negative_times)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(rewrite negative_times)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(rewrite times_associative)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(rewrite times_associative)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(lemma fullset_is_field)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(expand field?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(flatten)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(expand \"commutative?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(expand \"restrict\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(inst-cp -1 \"q`z\" \"q`t\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(rewrite plus_associative)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(rewrite plus_associative)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(rewrite plus_associative)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(lemma \"times_one[T,+,*,zero,one]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(inst -1 \"q`y * q`x\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(replace -1 -2 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(lemma \"right_distributive[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(replace -1 -2 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(lemma \"times_is_zero[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(prop)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(hide (-1 -3))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(lemma \"times_is_zero[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "4.1.2",
                "name": "(4.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "4.1.2",
                  "name": "(hide (-1 -3))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(rewrite q_prod_charac)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(grind)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(rewrite negative_times)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(rewrite negative_times)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(rewrite times_associative)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(rewrite times_associative)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(lemma fullset_is_field)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(expand field?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(flatten)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(expand \"commutative?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(expand \"restrict\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(inst-cp -1 \"q`y\" \"q`t\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(rewrite plus_associative)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(rewrite plus_associative)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(rewrite plus_associative)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(lemma \"times_one[T,+,*,zero,one]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(inst -1 \"q`z * q`x\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(replace -1 -2 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(lemma \"right_distributive[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(replace -1 -2 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(lemma \"times_is_zero[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(prop)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(hide (-1 -3))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(lemma \"times_is_zero[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "4.1.3",
                "name": "(4.1.3)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "4.1.3",
                  "name": "(hide (-1 -2))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(rewrite q_prod_charac)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(grind)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(lemma fullset_is_field)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(expand field?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(flatten)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(expand \"commutative?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(expand \"restrict\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(inst-cp -1 \"q`y\" \"q`z\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(rewrite plus_associative)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(lemma \"times_one[T,+,*,zero,one]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(inst -1 \"q`t * q`x\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(replace -1 -2 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(lemma \"right_distributive[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(replace -1 -2 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(lemma \"times_is_zero[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(prop)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(hide (-1 -3))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(lemma \"times_is_zero[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.1.3",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "4.2",
            "name": "(4.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "4.2",
              "name": "(hide (-1 2 3))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "4.2",
              "name": "(prop)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "4.2",
              "name": "(reveal 3)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "4.2",
              "name": "(case \"N(fullset[T])(2)\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "4.2.1",
                "name": "(4.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "4.2.1",
                  "name": "(expand \"charac\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.1",
                  "name": "(lift-if)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.1",
                  "name": "(prop)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "4.2.1.1",
                    "name": "(4.2.1.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "4.2.1.1",
                      "name": "(expand \"empty?\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.1",
                      "name": "(inst -1 2)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.1",
                      "name": "(expand \"member\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.1",
                      "name": "(propax)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   },
                   {
                    "branch": "4.2.1.2",
                    "name": "(4.2.1.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "4.2.1.2",
                      "name": "(lemma \"min_def[posnat]\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.2",
                      "name": "(inst?)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.2",
                      "name": "(prop)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.2",
                      "name": "(hide (2 3 4))",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.2",
                      "name": "(expand \"minimum?\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.2",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.2",
                      "name": "(skeep)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.2",
                      "name": "(hide (-2 -3))",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.2",
                      "name": "(expand \"N\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "4.2.1.2",
                      "name": "(case-replace \"x=1\" :hide? T)",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "4.2.1.2.1",
                        "name": "(4.2.1.2.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "4.2.1.2.1",
                          "name": "(inst -1 \"one\")",
                          "type": "proof-command",
                          "rules": [
                           {
                            "branch": "4.2.1.2.1.1",
                            "name": "(4.2.1.2.1.1)",
                            "type": "proof-branch",
                            "rules": [
                             {
                              "branch": "4.2.1.2.1.1",
                              "name": "(expand \"times\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "4.2.1.2.1.1",
                              "name": "(expand \"^\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "4.2.1.2.1.1",
                              "name": "(expand \"power\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "4.2.1.2.1.1",
                              "name": "(expand \"power\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "4.2.1.2.1.1",
                              "name": "(assert)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "4.2.1.2.1.1",
                              "name": "(lemma \"one_ne_zero\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "4.2.1.2.1.1",
                              "name": "(assert)",
                              "type": "proof-command",
                              "rules": []
                             }
                            ]
                           },
                           {
                            "branch": "4.2.1.2.1.2",
                            "name": "(4.2.1.2.1.2)",
                            "type": "proof-branch",
                            "rules": [
                             {
                              "branch": "4.2.1.2.1.2",
                              "name": "(grind)",
                              "type": "proof-command",
                              "rules": []
                             }
                            ]
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "branch": "4.2.1.2.2",
                        "name": "(4.2.1.2.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "4.2.1.2.2",
                          "name": "(assert)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "4.2.2",
                "name": "(4.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "4.2.2",
                  "name": "(hide 2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(expand \"N\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(skeep)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(expand \"times\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(expand \"^\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(expand \"power\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(expand \"power\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(expand \"power\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(lemma \"times_one[T,+,*,zero,one]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(replace -1 1 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(lemma \"right_distributive[T,+,*,zero]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(replace -1 1 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "4.2.2",
                  "name": "(rewrite \"times_zero\")",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.red_trace_charac": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "red_trace_charac",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "red_trace_charac",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"red_trace\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"+\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"conjugate\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"negate_is_right_inv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"negate_is_right_inv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"negate_is_right_inv\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.red_norm_charac": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "red_norm_charac",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "red_norm_charac",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"red_norm\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_prod_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst?)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"conjugate\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(split)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(rewrite \"negative_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"negative_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"negative_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"negative_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(lemma \"times_commutative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst-cp -1 \"q`y * q`y\" \"a\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replaces -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst-cp -1 \"q`z * q`z\" \"b\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replaces -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"negative_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"negate_negate\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(lemma \"times_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -1 \"q`t * q`t\" \"a\" \"b\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replaces -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -1 \"q`t * q`t\" \"a * b\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replaces -1)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"negative_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"negative_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"negate_negate\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"times_commutative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"negate_is_left_inv\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"times_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"times_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"times_commutative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"zero_plus\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"negate_is_right_inv\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"negative_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"negative_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"negate_negate\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"times_commutative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"negate_is_left_inv\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"times_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"times_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"times_commutative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"zero_plus\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite \"negate_is_left_inv\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "4",
        "name": "(4)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "4",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite \"times_negative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite \"negate_negate\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite \"times_commutative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(lemma \"times_commutative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(inst -1 \"q`y\" \"q`z\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(replaces -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite \"plus_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite \"negate_is_left_inv\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.q_x_cq_commutes": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "q_x_cq_commutes",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "q_x_cq_commutes",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"red_norm_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"red_norm\" -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"conjugate(q)\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"red_norm\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite conj_conj_quat)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"conjugate\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"negative_times_negative\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"negative_times_negative\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"negative_times_negative\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.conj_conj_quat": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "conj_conj_quat",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "conj_conj_quat",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(decompose-equality)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.conj_product_quat": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "conj_product_quat",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "conj_product_quat",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"q_prod_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(decompose-equality)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"q_prod_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(s_fact_dist \"plus\" \"times\" \"right\" rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite* inv_star)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_commutative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(s_fact_dist \"plus\" \"times\" \"right\" rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite* \"plus_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"cancel_left_plus\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_commutative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"cancel_left_plus\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_commutative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"cancel_left_plus\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_commutative\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(rewrite \"q_prod_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(s_fact_dist \"plus\" \"times\" \"right\" rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite* \"plus_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(s_tccl)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(rewrite \"q_prod_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(s_fact_dist \"plus\" \"times\" \"right\" rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite* \"inv_star\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite* \"plus_associative\" :dir rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(s_plus_permute (3 4 1 2))",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite* \"plus_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite times_commutative)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite cancel_left_plus)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite times_commutative)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite cancel_left_plus)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(s_times_permute (1 3 2))",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(rewrite cancel_left_plus)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(s_times_permute (1 3 2))",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "4",
        "name": "(4)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "4",
          "name": "(rewrite q_prod_charac)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite* \"inv_star\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(s_fact_dist \"plus\" \"times\" \"right\" rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(s_plus_permute (3 4 1 2))",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite* \"plus_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite times_commutative)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite cancel_left_plus)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite times_commutative)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite cancel_left_plus)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(s_times_permute (1 3 2))",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(rewrite cancel_left_plus)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(s_times_permute (1 3 2))",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.q_x_v_cq": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "q_x_v_cq",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "q_x_v_cq",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"pure_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"q_prod_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"q_prod_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"conjugate\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(typepred \"v\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"pure_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(s_fact_dist plus times)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* plus_associative :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(s_plus_permute (1 4 2 7 3 5 6))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(s_times_permute (4 2 1 3))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(s_times_permute (4 2 1 3))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(s_plus_permute (6 1 2 4 3 7 5))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(s_times_permute (3 2 4 5 1))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(s_times_permute (4 5 3 1 2))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(s_times_permute (4 3 2 5 1))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(s_times_permute (4 3 2 1 5))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.red_norm_prod": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "red_norm_prod",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "red_norm_prod",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"red_norm\" 1 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"conj_product_quat\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma q_assoc)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"associative?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -1 \"q\" \"v\" \"conjugate(v) * conjugate(q)\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"v\" \"conjugate(v)\" \"conjugate(q)\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 1 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(case-replace \"v * conjugate(v) = red_norm(v)\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(lemma \"sc_F_commutes\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -1 \"red_norm(v)\" \"conjugate(q)\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(replaces -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(lemma q_assoc)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"associative?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst?)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replace -1 1 rl)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"red_norm\" 1 2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(propax)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(hide -1 2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(rewrite \"red_norm_is_scalar\")",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(hide 2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"red_norm\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.q_conj_vs_inv": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "q_conj_vs_inv",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6524cb5fa7d6cb3f2dcc6f10f5c6e25ae02fcdce74dafd218cfb4055c00caad0"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "q_conj_vs_inv",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(typepred \"inv[quat[T, +, *, zero, one, a, b], *, one_q](q)\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"times_associative[quat,+,*,zero_q]\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(inst -1 \"inv[quat[T, +, *, zero, one, a, b], *, one_q](q)\" \"q\" \"conjugate(q)\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(lemma \"sc_F_commutes\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -1 \"red_norm(q)\" \"inv[quat[T, +, *, zero, one, a, b], *, one_q](q)\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(replaces -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"red_norm\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replaces -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(rewrite \"one_q_times\")",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(hide-all-but 1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"scalar_F\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(rewrite \"red_norm_charac\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(hide-all-but 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(lemma \"quat_is_ring_w_one\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"ring_with_one?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.sc_F_commutes": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "sc_F_commutes",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "sc_F_commutes",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep*)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"sc_comm\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"s`x\" \"one_q\" \"q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(case-replace \"s`x*one_q = s\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(replaces -2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(name-replace \"aa\" \"s`x\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replace -1 1 rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"aa\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"one_q_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"sc_comm\" :dir rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_one_q\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(hide (-1 2))",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(typepred \"s\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.T_q_is_linear": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "T_q_is_linear",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "T_q_is_linear",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep*)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"T_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_distr\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"distributive?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"q\" \"c*v\" \"d*w\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"q_distrl\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* \"sc_comm\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* \"sc_quat_assoc\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.T_q_red_norm_invariant": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "T_q_red_norm_invariant",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "T_q_red_norm_invariant",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep*)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"T_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* \"red_norm_prod\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"red_norm_conj\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"one_q_times\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"times_one_q\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.T_q_invariant_red_norm": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "T_q_invariant_red_norm",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "T_q_invariant_red_norm",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep*)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"T_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_comm\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat_assoc\" :dir rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"quat_x_pure_part_commutes\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"sc_quat_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"q_assoc\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"associative?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst?)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"red_norm\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite times_one_q)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.move_three_times": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "move_three_times",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "84bd017999f1c0d9773c3fdc9d467685975ff8f79785f6acfb3311cc99a56fbe"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "move_three_times",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma times_commutative)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"s1 * s2\" \"s3\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite times_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.move_four_times": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "move_four_times",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "53c0e83e489eb4785c969eddd95712b1bd974d13347b7d7643f6b8ae89ccb5e6"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "move_four_times",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma move_three_times)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"s1 * s2\" \"s3\" \"s4\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* times_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.times_heading_third": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "times_heading_third",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "times_heading_third",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma times_commutative)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"s1 * s2\" \"s3\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* times_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.times_heading_fourth": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "times_heading_fourth",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "times_heading_fourth",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma times_heading_third)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"s1 * s2\" \"s3\" \"s4\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* times_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.times_heading_fifth": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "times_heading_fifth",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "times_heading_fifth",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma times_heading_fourth)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"s1 * s2\" \"s3\" \"s4\" \"s5\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* times_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.times_heading_sixth": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "times_heading_sixth",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "times_heading_sixth",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"times_heading_fifth\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"s1 * s2\" \"s3\" \"s4\" \"s5\" \"s6\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* times_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.times_heading_seventh": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "times_heading_seventh",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "times_heading_seventh",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma times_heading_sixth)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"s1 * s2\" \"s3\" \"s4\" \"s5\" \"s6\" \"s7\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* times_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.plus_heading_third": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "plus_heading_third",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "plus_heading_third",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma plus_commutative)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"s1 + s2\" \"s3\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite plus_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.plus_heading_fourth": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "plus_heading_fourth",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "plus_heading_fourth",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma plus_heading_third)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"s1 + s2\" \"s3\" \"s4\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* plus_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.plus_heading_fifth": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "plus_heading_fifth",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "plus_heading_fifth",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma plus_heading_fourth)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst - \"s1 + s2\" \"s3\" \"s4\" \"s5\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* plus_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.plus_heading_sixth": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "plus_heading_sixth",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "plus_heading_sixth",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"plus_heading_fifth\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst - \"s1 + s2\" \"s3\" \"s4\" \"s5\" \"s6\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* plus_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.plus_heading_seventh": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "plus_heading_seventh",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "plus_heading_seventh",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"plus_heading_sixth\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst - \"s1 + s2\" \"s3\" \"s4\" \"s5\" \"s6\" \"s7\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replaces)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* plus_associative)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.red_norm_conj": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "red_norm_conj",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "red_norm_conj",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"red_norm\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite conj_conj_quat)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite q_x_cq_commutes)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.red_norm_is_scalar": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "red_norm_is_scalar",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "red_norm_is_scalar",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"red_norm_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"scalar_F\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(propax)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.quat_x_pure_part_commutes": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "quat_x_pure_part_commutes",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quat_x_pure_part_commutes",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(name-replace \"pp\" \"pure_part(q)\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(case \"q = q`x * one_q + pure_part(q)\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(replaces -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"q_distrl\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(lemma \"q_distr\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"distributive?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst?)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replaces -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(lemma \"sc_comm\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -1 \"q`x\" \"pp\" \"one_q\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replace -1 1 rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(lemma \"sc_quat_assoc\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst?)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replace -1 1 rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite times_one_q)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite sc_quat_assoc :dir rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"one_q_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"pp\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(hide 2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.pure_quat_charac_TCC1": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "pure_quat_charac_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6524cb5fa7d6cb3f2dcc6f10f5c6e25ae02fcdce74dafd218cfb4055c00caad0"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "pure_quat_charac_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(lemma \"fullset_is_field\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"field?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"division_ring?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"ring_with_one?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.q_conj_vs_inv_TCC1": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "q_conj_vs_inv_TCC1",
    "status": "untried",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6524cb5fa7d6cb3f2dcc6f10f5c6e25ae02fcdce74dafd218cfb4055c00caad0"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "q_conj_vs_inv_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(assuming-tcc)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": []
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.T_q_TCC1": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "T_q_TCC1",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "T_q_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(subtype-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.T_q_is_linear_TCC1": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "T_q_is_linear_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "T_q_is_linear_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(subtype-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.T_q_invariant_red_norm_TCC1": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "T_q_invariant_red_norm_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "T_q_invariant_red_norm_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(subtype-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.non_zero_red_norm": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "non_zero_red_norm",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ad961a4bbc8b5f6f0dd4db17431eabd1297331342658af3835f1a775fa1e960b"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "non_zero_red_norm",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"red_norm\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.nz_q_nz_red_norm": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "nz_q_nz_red_norm",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "e9e297092de7b790df14f9d887aed0e4a730ee2558461f3e83d0eaea02ca2346"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "nz_q_nz_red_norm",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"red_norm_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"zero_q\" -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"plus_associative\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* \"negative_times\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"negate_plus\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"b * (q`z * q`z)\" \"a * (q`y * q`y)\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 -3 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(case \"q`x * q`x + (a * b) * (q`t * q`t) = a * (q`y * q`y) + b * (q`z * q`z)\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(hide -2 -4)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -2 -4)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -2 \"(q`y)\" \"(q`z)\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replace -1 1 rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(generalize \"q\" \"q\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -2 -4)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -2 -4)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(postpone)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(postpone)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.nz_q_nz_sqr": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "nz_q_nz_sqr",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "6fc2a7b478d268b9d82121fff6af72f40223d887e83e0bebf367402b1a4cbd8c"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "nz_q_nz_sqr",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(rewrite \"q_prod_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": []
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(replaces -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"zero_q_times\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.zero_q_times": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "zero_q_times",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "zero_q_times",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"q_prod_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.times_zero_q": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "times_zero_q",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "times_zero_q",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"q_prod_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.nz_pp_nz_sqr_pp": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "nz_pp_nz_sqr_pp",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "953bef30f651b40a044f860e2db9585ec80ff7a876c05896e18cdf23a9996cff"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "nz_pp_nz_sqr_pp",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(expand \"pure_part\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"q_prod_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(decompose-equality -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"zero_q\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(split)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": []
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(replaces -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"zero_q_times\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.times_heading_fseq": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "times_heading_fseq",
    "status": "untried",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "5e60de203a1bf72413d94b49e60080233ce4050a25547bf47aae6938f03e801d"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "times_heading_fseq",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(measure-induct+ \"length(sq)\" (\"sq\"))",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(case \"n=0\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(replaces -1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(hide -)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(grind)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(case \"x!1 = (# length := length(x!1), seq := LAMBDA (i: below[length(x!1)]): IF i > 0 THEN x!1`seq(i) ELSE x!1`seq(0) ENDIF #)\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.1.1",
                "name": "(1.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.1.2",
                "name": "(1.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.2",
                  "name": "(hide 2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(grind)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(decompose-equality)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(decompose-equality)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(grind)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(hide -)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"times_fseq\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(lift-if)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(prop)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.2.1",
                "name": "(1.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.2.1",
                  "name": "(lift-if)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(prop)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "1.2.1.1",
                    "name": "(1.2.1.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.2.1.1",
                      "name": "(typepred \"n\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.1",
                      "name": "(grind)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   },
                   {
                    "branch": "1.2.1.2",
                    "name": "(1.2.1.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.2.1.2",
                      "name": "(hide 2 3)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(grind)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "1.2.2",
                "name": "(1.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.2.2",
                  "name": "(lift-if)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.2",
                  "name": "(prop)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "1.2.2.1",
                    "name": "(1.2.2.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.2.2.1",
                      "name": "(hide 1)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.2.1",
                      "name": "(grind)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   },
                   {
                    "branch": "1.2.2.2",
                    "name": "(1.2.2.2)",
                    "type": "proof-branch",
                    "rules": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.times_o_fseq": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "times_o_fseq",
    "status": "untried",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "70fc04fa2334976ae212b1f01c01743e7521cb7ac454c21fef208e8d41b659b2"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "times_o_fseq",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(measure-induct+ \"length(s1)\" (\"s1\"))",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"times_fseq\" 1 2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(lift-if)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(prop)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": []
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.nz_q_nz_red_norm_test": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "nz_q_nz_red_norm_test",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "e9e297092de7b790df14f9d887aed0e4a730ee2558461f3e83d0eaea02ca2346"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "nz_q_nz_red_norm_test",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"red_norm_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"zero_q\" -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite* \"negative_times\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"negate_plus\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"b * (q`z * q`z)\" \"a * (q`y * q`y)\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"plus_associative\" -2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 -2 rl)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(case-replace \"b * (q`z * q`z) + a * (q`y * q`y) = a * (q`y * q`y)+ b * (q`z * q`z)\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(hide -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst-cp 1 \"(q`y * q`y)\" \"(q`z * q`z)\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"^\" 2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand* \"power\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"power\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"power\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(generalize-skolem-constants 2)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.div_ring_iff_nz_rednorm": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "div_ring_iff_nz_rednorm",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "div_ring_iff_nz_rednorm",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"red_norm\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"division_ring?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"group?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"inv_exists?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -2 \"q\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(typepred \"q\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"remove\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(lemma \"q_assoc\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"associative?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -1 \"y\" \"q\" \"conjugate(q)\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replaces -4)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"one_q_times\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replaces -4)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_zero_q\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -2 -3)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"q_is_zero_iff_conj\" :dir rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(expand \"division_ring?\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(split)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(rewrite \"quat_is_ring_w_one\")",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(expand \"group?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"monoid?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"monad?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(split)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "2.2.1",
                "name": "(2.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.1",
                  "name": "(expand \"star_closed?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(skeep)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(inst-cp -1 \"x\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(inst -1 \"y\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(expand \"member\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(expand \"remove\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(split)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "2.2.1.1",
                    "name": "(2.2.1.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.2.1.1",
                      "name": "(flatten)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(lemma \"red_norm_prod\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(inst -1 \"x\" \"y\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(replace -2 -1 rl)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(expand \"red_norm\" -1 1)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(hide -2)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(lemma \"q_is_zero_iff_conj\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(inst -1 \"zero_q\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(replaces -1)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(rewrite \"zero_q_times\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(rewrite \"sc_F_product_charac\")",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "2.2.1.1.1",
                        "name": "(2.2.1.1.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "2.2.1.1.1",
                          "name": "(decompose-equality -1)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.2.1.1.1",
                          "name": "(hide (-1 -3 -4))",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.2.1.1.1",
                          "name": "(expand \"zero_q\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.2.1.1.1",
                          "name": "(lemma \"times_is_zero\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.2.1.1.1",
                          "name": "(inst?)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.2.1.1.1",
                          "name": "(assert)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.2.1.1.1",
                          "name": "(hide -2)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.2.1.1.1",
                          "name": "(split)",
                          "type": "proof-command",
                          "rules": [
                           {
                            "branch": "2.2.1.1.1.1",
                            "name": "(2.2.1.1.1.1)",
                            "type": "proof-branch",
                            "rules": [
                             {
                              "branch": "2.2.1.1.1.1",
                              "name": "(hide 1)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "2.2.1.1.1.1",
                              "name": "(rewrite \"red_norm_charac\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "2.2.1.1.1.1",
                              "name": "(decompose-equality 1)",
                              "type": "proof-command",
                              "rules": []
                             }
                            ]
                           },
                           {
                            "branch": "2.2.1.1.1.2",
                            "name": "(2.2.1.1.1.2)",
                            "type": "proof-branch",
                            "rules": [
                             {
                              "branch": "2.2.1.1.1.2",
                              "name": "(hide 2)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "2.2.1.1.1.2",
                              "name": "(rewrite \"red_norm_charac\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "2.2.1.1.1.2",
                              "name": "(decompose-equality 1)",
                              "type": "proof-command",
                              "rules": []
                             }
                            ]
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "branch": "2.2.1.1.2",
                        "name": "(2.2.1.1.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "2.2.1.1.2",
                          "name": "(hide (- 2 3))",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.2.1.1.2",
                          "name": "(rewrite \"red_norm_is_scalar\")",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "2.2.1.1.3",
                        "name": "(2.2.1.1.3)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "2.2.1.1.3",
                          "name": "(hide (- 2 3))",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.2.1.1.3",
                          "name": "(rewrite \"red_norm_is_scalar\")",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "branch": "2.2.1.2",
                    "name": "(2.2.1.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.2.1.2",
                      "name": "(hide -)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.2",
                      "name": "(expand \"member\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.2",
                      "name": "(expand \"fullset\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.2",
                      "name": "(propax)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "2.2.2",
                "name": "(2.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.2",
                  "name": "(hide -)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"member\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"remove\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"member\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(prop)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(expand* \"zero_q\" \"one_q\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(lemma \"one_ne_zero\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.2.3",
                "name": "(2.2.3)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.3",
                  "name": "(expand \"identity?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.3",
                  "name": "(skeep)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.3",
                  "name": "(expand \"restrict\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.3",
                  "name": "(hide -)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.3",
                  "name": "(rewrite \"one_q_times\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.3",
                  "name": "(rewrite \"times_one_q\")",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.2.4",
                "name": "(2.2.4)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.4",
                  "name": "(expand \"associative?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.4",
                  "name": "(skeep)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.4",
                  "name": "(expand \"restrict\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.4",
                  "name": "(hide -)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.4",
                  "name": "(lemma \"q_assoc\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.4",
                  "name": "(expand \"associative?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.4",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.2.5",
                "name": "(2.2.5)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.5",
                  "name": "(lemma \"nz_red_norm_inv_exist\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.5",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.q_is_zero_iff_conj": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "q_is_zero_iff_conj",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "q_is_zero_iff_conj",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(lemma \"negate_negate\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst-cp -1 \"q`y\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst-cp -1 \"q`z\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst -1 \"q`t\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(replaces -5)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(replaces -5)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(replaces -5)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite* \"negate_zero\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.nz_red_norm_inv_exist": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "nz_red_norm_inv_exist",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "nz_red_norm_inv_exist",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"inv_exists?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"x\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"red_norm_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"zero_q\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"fullset_is_field\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"field?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"division_ring?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"group?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide -1 -2 -4)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"inv_exists?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"x`x * x`x + inv(a) * (x`y * x`y) + inv(b) * (x`z * x`z) + (a * b) * (x`t * x`t)\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst 2 \"conjugate(x) *(y_1 * one_q)\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(hide 1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(split)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.1.1",
                "name": "(1.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.1",
                  "name": "(lemma \"q_assoc\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(expand \"associative?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replace -1 1 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(lemma \"red_norm_charac\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(expand \"red_norm\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(lemma \"sc_comm\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replace -1 1 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(case-replace \"(y_1 * (# x := x`x * x`x + inv(a) * (x`y * x`y) + inv(b) * (x`z * x`z) + (a * b) * (x`t * x`t), y := zero, z := zero, t := zero #)) = one_q\" :hide? T)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "1.1.1.1",
                    "name": "(1.1.1.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.1.1",
                      "name": "(hide -)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.1",
                      "name": "(rewrite \"one_q_times\")",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   },
                   {
                    "branch": "1.1.1.2",
                    "name": "(1.1.1.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.1.2",
                      "name": "(hide (-1 2))",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.2",
                      "name": "(expand \"*\" 1 1)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.2",
                      "name": "(expand \"one_q\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.2",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "1.1.2",
                "name": "(1.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.2",
                  "name": "(lemma \"q_assoc\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(expand \"associative?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(rewrite \"sc_comm\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(rewrite \"one_q_times\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(lemma \"sc_comm\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(replace -1 1 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(lemma \"sc_quat_assoc\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(replace -1 1 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(hide (-1 -2))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(lemma \"red_norm_charac\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(expand \"red_norm\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(rewrite \"q_x_cq_commutes\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(replaces -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(expand \"one_q\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(expand \"*\" 1 1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(hide -1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(expand \"remove\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(prop)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.2.1",
                "name": "(1.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.2.1",
                  "name": "(expand \"*\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(expand \"one_q\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(rewrite \"q_prod_charac\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(expand* \"conjugate\" \"zero_q\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(flatten)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(hide (-6 +))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(rewrite left_distributive)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(rewrite left_distributive)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(rewrite left_distributive)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.1",
                  "name": "(case-replace \"y_1 = zero\")",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "1.2.1.1",
                    "name": "(1.2.1.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.2.1.1",
                      "name": "(hide-all-but -6)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.1",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.1",
                      "name": "(lemma \"one_ne_zero\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.1",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   },
                   {
                    "branch": "1.2.1.2",
                    "name": "(1.2.1.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.2.1.2",
                      "name": "(lemma \"times_is_zero\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(inst-cp -1 \"x`x\" \"y_1\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(inst-cp -1 \"inv(x`y)\" \"y_1\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(inst-cp -1 \"inv(x`z)\" \"y_1\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(inst -1 \"inv(x`t)\" \"y_1\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(hide-all-but (-1 -2 -3 -4))",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(typepred \"x\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(expand \"remove\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(flatten)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(hide -1)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(expand \"zero_q\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(lemma \"negate_nz_T_is_nz_T\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.2.1.2",
                      "name": "(decompose-equality 1)",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.2.1.2.1",
                        "name": "(1.2.1.2.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.2.1.2.1",
                          "name": "(hide (-3 -4 -5))",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.2.1.2.1",
                          "name": "(inst?)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.2.1.2.1",
                          "name": "(assert)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.2.1.2.2",
                        "name": "(1.2.1.2.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.2.1.2.2",
                          "name": "(hide (-2 -3 -5))",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.2.1.2.2",
                          "name": "(inst?)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.2.1.2.2",
                          "name": "(assert)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.2.1.2.3",
                        "name": "(1.2.1.2.3)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.2.1.2.3",
                          "name": "(hide (-2 -4 -5))",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.2.1.2.3",
                          "name": "(inst?)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.2.1.2.3",
                          "name": "(assert)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "1.2.2",
                "name": "(1.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.2.2",
                  "name": "(expand \"member\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.2",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.2.2",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(hide 3)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"remove\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(prop)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(expand \"member\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"fullset\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(propax)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.sc_F_product_charac": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "sc_F_product_charac",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "sc_F_product_charac",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(typepred \"s\" \"c\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"scalar_F\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"q_prod_charac\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "quaternions.quat_div_ring_aux1": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "quat_div_ring_aux1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quat_div_ring_aux1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"fullset_is_field\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"field?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"division_ring?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"group?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"inv_exists?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -3 \"t\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -6 \"y\" \"zero\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(lemma \"cancel_right_plus\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -1 \"t * t + inv[T, +, zero](a)\" \"zero\" \"a\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"plus_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replace -1 1 rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_associative\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"times_associative\" :dir rl)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(replace -4 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(expand \"remove\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"member\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"fullset\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(prop)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(lemma \"cancel_right_plus\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst -1 \"t * t + inv[T, +, zero](a)\" \"zero\" \"a\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(rewrite \"plus_associative\" -1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(hide-all-but (-1 -2))",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(typepred \"a\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"remove\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(lemma \"sq_eq_zero\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst -1 \"t\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"sq\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.quat_div_ring_aux2": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "quat_div_ring_aux2",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "36eb81518007a3ae3f9156e3c31da94210707cb5fda5f57e027c2ac43b3d75dc"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quat_div_ring_aux2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"fullset_is_field\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"field?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"division_ring?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"group?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"inv_exists?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst-cp -3 \"a + a\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(inst -3 \"t\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(skeep*)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst -8 \"(one+a)*y!1\" \"(one + inv[T,+,zero](a))*y!1*y\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(prop)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(hide (-1 -2))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"commutative?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(expand \"restrict\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(lemma \"times_associative\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"one + a\" \"y!1\" \"(one + a) * y!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replaces -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -1 \"y!1\" \"one + a\" \"y!1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(replace -2 2 rl)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(hide -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(inst-cp -6 \"y!1\" \"one + a\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.1.1",
                "name": "(1.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.1",
                  "name": "(replaces -7)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst-cp -1 \"one + a\" \"y!1\" \"y!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst-cp -1 \"one + a\" \"one + a\" \"y!1 * y!1\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replace -2 2 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst-cp -1 \"one + inv[T, +, zero](a)\" \"y!1\" \"y\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(hide -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst-cp -1 \"one + inv[T, +, zero](a)\" \"y!1 * y\" \"(one + inv[T, +, zero](a)) * (y!1 * y)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst-cp -1 \"y!1 * y\" \"one + inv[T, +, zero](a)\" \"y!1 * y\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replace -2 2 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(hide -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst-cp -6 \"y!1 * y\" \"one + inv[T, +, zero](a)\")",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "1.1.1.1",
                    "name": "(1.1.1.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.1.1",
                      "name": "(replaces -7)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.1",
                      "name": "(inst-cp -1 \"one + inv[T, +, zero](a)\" \"y!1 * y\" \"y!1 * y\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.1",
                      "name": "(replaces -2)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.1",
                      "name": "(inst-cp -1 \"one + inv[T, +, zero](a)\" \"one + inv[T, +, zero](a)\" \"y!1 * y * (y!1 * y)\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.1",
                      "name": "(replace -2 2 rl)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.1",
                      "name": "(hide -2)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.1",
                      "name": "(inst-cp -1 \"y!1\" \"y\" \"y!1 * y\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.1",
                      "name": "(replaces -2)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.1",
                      "name": "(inst-cp -6 \"y\" \"y!1 * y\")",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.1.1.1.1",
                        "name": "(1.1.1.1.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -7)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -1 \"y!1\" \"y\" \"y\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -2)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -1 \"y!1\" \"y!1\" \"y * y\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replace -2 2 rl)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(hide -2)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(rewrite* \"sq_rew\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(lemma \"sq_plus\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -1 \"one\" \"a\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -2)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst -1 \"one\" \"inv[T, +, zero](a)\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -1)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(expand \"sq\" 2 (1 4))",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(rewrite* \"one_times\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(rewrite* \"times_one\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(lemma \"left_distributive\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -1 \"one + a + a\" \"sq(a)\" \"sq(y!1)\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -2)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(lemma \"right_distributive\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -1 \"a\" \"((one + a + a) * sq(y!1))\" \"sq(a) * sq(y!1)\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -2)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -2 \"one + a\" \"a\" \"sq(y!1)\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -3)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -2 \"one\" \"a\" \"sq(y!1)\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -1 \"a\" \"(one + a) * sq(y!1)\" \"a * sq(y!1)\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -2)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -3)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -1 \"a\" \"one * sq(y!1)\" \"a * sq(y!1)\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -2)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -2 \"one + inv[T, +, zero](a) + inv[T, +, zero](a)\" \"sq(inv[T, +, zero](a))\" \"sq(y!1) * sq(y)\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -3)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -1 \"b\" \"(one + inv[T, +, zero](a) + inv[T, +, zero](a)) * (sq(y!1) * sq(y))\" \"sq(inv[T, +, zero](a)) * (sq(y!1) * sq(y))\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -2)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -2 \"one + inv[T, +, zero](a)\" \"inv[T, +, zero](a)\" \"sq(y!1) * sq(y)\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -3)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -1 \"b\" \"(one + inv[T, +, zero](a)) * (sq(y!1) * sq(y))\" \"inv[T, +, zero](a) * (sq(y!1) * sq(y))\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -2)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -2 \"one\" \"inv[T, +, zero](a)\" \"sq(y!1) * sq(y)\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -3)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -1 \"b\" \"one * (sq(y!1) * sq(y))\" \"inv[T, +, zero](a) * (sq(y!1) * sq(y))\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(replaces -2)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(rewrite* \"one_times\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(s_plus_permute (5 1 2 3 4))",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(s_plus_permute (1 5 2 3 4))",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(inst-cp -8 \"sq(y!1)\" \"sq(y)\")",
                          "type": "proof-command",
                          "rules": [
                           {
                            "branch": "1.1.1.1.1.1",
                            "name": "(1.1.1.1.1.1)",
                            "type": "proof-branch",
                            "rules": [
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(replaces -9)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(inst-cp -3 \"b\" \"sq(y)\" \"sq(y!1)\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(replace -4 2 rl)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(hide -4)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(inst-cp -2 \"b * sq(y)\" \"a\" \"sq(y!1)\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(replace -3 2 rl)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(hide -3)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(case-replace \"b * sq(y) + a = a * sq(t) + b\")",
                              "type": "proof-command",
                              "rules": [
                               {
                                "branch": "1.1.1.1.1.1.1",
                                "name": "(1.1.1.1.1.1.1)",
                                "type": "proof-branch",
                                "rules": [
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(replace -10 2)",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(assert)",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(inst-cp -4 \"a\" \"a\" \"sq(y!1)\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(replace -5 2 rl)",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(hide -5)",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(rewrite \"sq_rew\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(rewrite \"sq_neg\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(s_plus_permute (3 6 1 2 4 5))",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(inst-cp -9 \"sq(a)\" \"sq(y) * sq(y!1)\")",
                                  "type": "proof-command",
                                  "rules": [
                                   {
                                    "branch": "1.1.1.1.1.1.1.1",
                                    "name": "(1.1.1.1.1.1.1.1)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.1.1.1.1.1.1",
                                      "name": "(replaces -10)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.1",
                                      "name": "(inst-cp -9 \"sq(a)\" \"sq(y!1)\")",
                                      "type": "proof-command",
                                      "rules": [
                                       {
                                        "branch": "1.1.1.1.1.1.1.1.1",
                                        "name": "(1.1.1.1.1.1.1.1.1)",
                                        "type": "proof-branch",
                                        "rules": [
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(replaces -10)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(inst-cp -4 \"sq(y)\" \"sq(y!1)\" \"sq(a)\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(replaces -5)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(inst-cp -4 \"b\" \"sq(y)\" \"sq(y!1) * sq(a)\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(replace -5 2 rl)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(hide -5)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(inst-cp -3 \"b * sq(y)\" \"a\" \"sq(y!1) * sq(a)\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(replace -4 2 rl)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(hide -4)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(replace -1 2)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(replace -10 2)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(assert)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(inst-cp -4 \"b\" \"inv[T, +, zero](a)\" \"sq(y) * sq(y!1)\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(replace -5 2 rl)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(hide -5)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(lemma \"times_negative\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(inst-cp -1 \"b\" \"a\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(replaces -2)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.1",
                                          "name": "(inst-cp -10 \"b\" \"a\")",
                                          "type": "proof-command",
                                          "rules": [
                                           {
                                            "branch": "1.1.1.1.1.1.1.1.1.1",
                                            "name": "(1.1.1.1.1.1.1.1.1.1)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.1",
                                              "name": "(replaces -11)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.1",
                                              "name": "(inst -1 \"a\" \"b\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.1",
                                              "name": "(replace -1 2 rl)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.1",
                                              "name": "(hide -1)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.1",
                                              "name": "(inst-cp -4 \"a\" \"(inv(b))\" \"sq(y) * sq(y!1)\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.1",
                                              "name": "(replaces -5)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.1",
                                              "name": "(inst-cp -4 \"inv(b)\" \"sq(y)\" \"sq(y!1)\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.1",
                                              "name": "(replace -5 2 rl)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.1",
                                              "name": "(case-replace \"inv(b) * sq(y) = a\")",
                                              "type": "proof-command",
                                              "rules": [
                                               {
                                                "branch": "1.1.1.1.1.1.1.1.1.1.1",
                                                "name": "(1.1.1.1.1.1.1.1.1.1.1)",
                                                "type": "proof-branch",
                                                "rules": [
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.1",
                                                  "name": "(hide (-1 -2 -6 -7 -8 -12 1))",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.1",
                                                  "name": "(inst-cp -6 \"sq(y!1)\" \"sq(a)\")",
                                                  "type": "proof-command",
                                                  "rules": [
                                                   {
                                                    "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                    "name": "(1.1.1.1.1.1.1.1.1.1.1.1)",
                                                    "type": "proof-branch",
                                                    "rules": [
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(replaces -7)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(expand \"sq\" 1 (3 5))",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(inst-cp -3 \"a\" \"a\" \"sq(y!1)\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(replace -4 1 rl)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(hide -4)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(lemma \"plus_associative\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(inst-cp -1 \"(a * a) * sq(y!1) + (a * a) * sq(y!1)\" \"(a * a * sq(y!1))\" \"(a * a * sq(y!1))\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(replaces -2)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(inst-cp -3 \"a * a\" \"a * a\" \"sq(y!1)\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(replace -4 1 rl)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(hide -4)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(inst-cp -2 \"a\" \"a\" \"a\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(replace -3 1 rl)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(hide -3)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(inst-cp -3 \"a * (a + a)\" \"a * (a + a)\" \"sq(y!1)\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(replace -4 1 rl)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(hide -4)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(inst-cp -3 \"a\" \"a\" \"a + a\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(replace -4 1 rl)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(expand \"sq\" 1)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(hide -4)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(inst-cp -4 \"(a + a) * (a + a)\" \"y!1\" \"y!1\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(replace -5 1 rl)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(hide -5)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(inst-cp -4 \"a + a\" \"a + a\" \"y!1\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(replaces -5)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(replace -5 1)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.1",
                                                      "name": "(assert)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    "branch": "1.1.1.1.1.1.1.1.1.1.1.2",
                                                    "name": "(1.1.1.1.1.1.1.1.1.1.1.2)",
                                                    "type": "proof-branch",
                                                    "rules": [
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.2",
                                                      "name": "(expand \"fullset\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.2",
                                                      "name": "(propax)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    "branch": "1.1.1.1.1.1.1.1.1.1.1.3",
                                                    "name": "(1.1.1.1.1.1.1.1.1.1.1.3)",
                                                    "type": "proof-branch",
                                                    "rules": [
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.3",
                                                      "name": "(expand \"fullset\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.1.3",
                                                      "name": "(propax)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     }
                                                    ]
                                                   }
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                "name": "(1.1.1.1.1.1.1.1.1.1.2)",
                                                "type": "proof-branch",
                                                "rules": [
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(hide (-1 -5 -8 -9 2 3))",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(lemma \"cancel_right_minus\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(inst -1 \"a * sq(t) + b\" \"zero\" \"b\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(assert)",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(lemma \"plus_associative\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(inst?)",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(replaces -1)",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(assert)",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(lemma \"nzd_R_cancel_right\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(lemma \"fullset_is_field\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(expand \"field?\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(flatten)",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(hide -2)",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.1.1.1.2",
                                                  "name": "(inst -2 \"fullset[T]\")",
                                                  "type": "proof-command",
                                                  "rules": [
                                                   {
                                                    "branch": "1.1.1.1.1.1.1.1.1.1.2.1",
                                                    "name": "(1.1.1.1.1.1.1.1.1.1.2.1)",
                                                    "type": "proof-branch",
                                                    "rules": [
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.2.1",
                                                      "name": "(lemma \"division_ring_is_ring_nz_closed\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.2.1",
                                                      "name": "(inst?)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.2.1",
                                                      "name": "(expand \"ring_nz_closed?\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.2.1",
                                                      "name": "(flatten)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.2.1",
                                                      "name": "(hide (-1 -3))",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.2.1",
                                                      "name": "(prop)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.2.1",
                                                      "name": "(inst -1 \"sq(y)\" \"a * sq(t)\" \"inv(b)\")",
                                                      "type": "proof-command",
                                                      "rules": [
                                                       {
                                                        "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1",
                                                        "name": "(1.1.1.1.1.1.1.1.1.1.2.1.1)",
                                                        "type": "proof-branch",
                                                        "rules": [
                                                         {
                                                          "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1",
                                                          "name": "(prop)",
                                                          "type": "proof-command",
                                                          "rules": [
                                                           {
                                                            "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.1",
                                                            "name": "(1.1.1.1.1.1.1.1.1.1.2.1.1.1)",
                                                            "type": "proof-branch",
                                                            "rules": [
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.1",
                                                              "name": "(hide-all-but -2)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.1",
                                                              "name": "(typepred \"y\")",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.1",
                                                              "name": "(expand \"remove\")",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.1",
                                                              "name": "(flatten)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.1",
                                                              "name": "(hide -1)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.1",
                                                              "name": "(expand \"sq\")",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.1",
                                                              "name": "(lemma \"times_is_zero\")",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.1",
                                                              "name": "(inst?)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.1",
                                                              "name": "(assert)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             }
                                                            ]
                                                           },
                                                           {
                                                            "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.2",
                                                            "name": "(1.1.1.1.1.1.1.1.1.1.2.1.1.2)",
                                                            "type": "proof-branch",
                                                            "rules": [
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.2",
                                                              "name": "(hide -2)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.2",
                                                              "name": "(inst -6 \"a\" \"sq(t)\" \"sq(y)\")",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.2",
                                                              "name": "(replaces -6)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.2",
                                                              "name": "(lemma \"sq_times\")",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.2",
                                                              "name": "(inst -1 \"t\" \"y\")",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.2",
                                                              "name": "(replace -1 -2 rl)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.2",
                                                              "name": "(hide -1)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.2",
                                                              "name": "(replaces -6)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.2",
                                                              "name": "(expand \"sq\" -1 1)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             },
                                                             {
                                                              "branch": "1.1.1.1.1.1.1.1.1.1.2.1.1.2",
                                                              "name": "(assert)",
                                                              "type": "proof-command",
                                                              "rules": []
                                                             }
                                                            ]
                                                           }
                                                          ]
                                                         }
                                                        ]
                                                       },
                                                       {
                                                        "branch": "1.1.1.1.1.1.1.1.1.1.2.1.2",
                                                        "name": "(1.1.1.1.1.1.1.1.1.1.2.1.2)",
                                                        "type": "proof-branch",
                                                        "rules": [
                                                         {
                                                          "branch": "1.1.1.1.1.1.1.1.1.1.2.1.2",
                                                          "name": "(expand \"fullset\")",
                                                          "type": "proof-command",
                                                          "rules": []
                                                         },
                                                         {
                                                          "branch": "1.1.1.1.1.1.1.1.1.1.2.1.2",
                                                          "name": "(propax)",
                                                          "type": "proof-command",
                                                          "rules": []
                                                         }
                                                        ]
                                                       },
                                                       {
                                                        "branch": "1.1.1.1.1.1.1.1.1.1.2.1.3",
                                                        "name": "(1.1.1.1.1.1.1.1.1.1.2.1.3)",
                                                        "type": "proof-branch",
                                                        "rules": [
                                                         {
                                                          "branch": "1.1.1.1.1.1.1.1.1.1.2.1.3",
                                                          "name": "(expand \"fullset\")",
                                                          "type": "proof-command",
                                                          "rules": []
                                                         },
                                                         {
                                                          "branch": "1.1.1.1.1.1.1.1.1.1.2.1.3",
                                                          "name": "(propax)",
                                                          "type": "proof-command",
                                                          "rules": []
                                                         }
                                                        ]
                                                       },
                                                       {
                                                        "branch": "1.1.1.1.1.1.1.1.1.1.2.1.4",
                                                        "name": "(1.1.1.1.1.1.1.1.1.1.2.1.4)",
                                                        "type": "proof-branch",
                                                        "rules": [
                                                         {
                                                          "branch": "1.1.1.1.1.1.1.1.1.1.2.1.4",
                                                          "name": "(expand \"fullset\")",
                                                          "type": "proof-command",
                                                          "rules": []
                                                         },
                                                         {
                                                          "branch": "1.1.1.1.1.1.1.1.1.1.2.1.4",
                                                          "name": "(propax)",
                                                          "type": "proof-command",
                                                          "rules": []
                                                         }
                                                        ]
                                                       }
                                                      ]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    "branch": "1.1.1.1.1.1.1.1.1.1.2.2",
                                                    "name": "(1.1.1.1.1.1.1.1.1.1.2.2)",
                                                    "type": "proof-branch",
                                                    "rules": [
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.2.2",
                                                      "name": "(expand \"division_ring?\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.2.2",
                                                      "name": "(expand \"ring_with_one?\")",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     },
                                                     {
                                                      "branch": "1.1.1.1.1.1.1.1.1.1.2.2",
                                                      "name": "(assert)",
                                                      "type": "proof-command",
                                                      "rules": []
                                                     }
                                                    ]
                                                   }
                                                  ]
                                                 }
                                                ]
                                               }
                                              ]
                                             }
                                            ]
                                           },
                                           {
                                            "branch": "1.1.1.1.1.1.1.1.1.2",
                                            "name": "(1.1.1.1.1.1.1.1.1.2)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.2",
                                              "name": "(expand \"fullset\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.2",
                                              "name": "(propax)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           },
                                           {
                                            "branch": "1.1.1.1.1.1.1.1.1.3",
                                            "name": "(1.1.1.1.1.1.1.1.1.3)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.3",
                                              "name": "(expand \"fullset\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.1.1.3",
                                              "name": "(propax)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           }
                                          ]
                                         }
                                        ]
                                       },
                                       {
                                        "branch": "1.1.1.1.1.1.1.1.2",
                                        "name": "(1.1.1.1.1.1.1.1.2)",
                                        "type": "proof-branch",
                                        "rules": [
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.2",
                                          "name": "(hide-all-but 1)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.2",
                                          "name": "(expand \"fullset\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.2",
                                          "name": "(propax)",
                                          "type": "proof-command",
                                          "rules": []
                                         }
                                        ]
                                       },
                                       {
                                        "branch": "1.1.1.1.1.1.1.1.3",
                                        "name": "(1.1.1.1.1.1.1.1.3)",
                                        "type": "proof-branch",
                                        "rules": [
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.3",
                                          "name": "(hide-all-but 1)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.3",
                                          "name": "(expand \"fullset\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.1.3",
                                          "name": "(propax)",
                                          "type": "proof-command",
                                          "rules": []
                                         }
                                        ]
                                       }
                                      ]
                                     }
                                    ]
                                   },
                                   {
                                    "branch": "1.1.1.1.1.1.1.2",
                                    "name": "(1.1.1.1.1.1.1.2)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.1.1.1.1.1.2",
                                      "name": "(hide-all-but 1)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.2",
                                      "name": "(expand \"fullset\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.2",
                                      "name": "(propax)",
                                      "type": "proof-command",
                                      "rules": []
                                     }
                                    ]
                                   },
                                   {
                                    "branch": "1.1.1.1.1.1.1.3",
                                    "name": "(1.1.1.1.1.1.1.3)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.1.1.1.1.1.3",
                                      "name": "(hide-all-but 1)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.3",
                                      "name": "(expand \"fullset\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.3",
                                      "name": "(propax)",
                                      "type": "proof-command",
                                      "rules": []
                                     }
                                    ]
                                   }
                                  ]
                                 }
                                ]
                               },
                               {
                                "branch": "1.1.1.1.1.1.2",
                                "name": "(1.1.1.1.1.1.2)",
                                "type": "proof-branch",
                                "rules": [
                                 {
                                  "branch": "1.1.1.1.1.1.2",
                                  "name": "(hide (-6 -7 2 3))",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.2",
                                  "name": "(lemma \"nzd_R_cancel_right\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.2",
                                  "name": "(lemma \"fullset_is_field\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.2",
                                  "name": "(expand \"field?\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.2",
                                  "name": "(flatten)",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.2",
                                  "name": "(hide -2)",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.2",
                                  "name": "(inst -2 \"fullset[T]\")",
                                  "type": "proof-command",
                                  "rules": [
                                   {
                                    "branch": "1.1.1.1.1.1.2.1",
                                    "name": "(1.1.1.1.1.1.2.1)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.1.1.1.1.2.1",
                                      "name": "(lemma \"division_ring_is_ring_nz_closed\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.2.1",
                                      "name": "(inst?)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.2.1",
                                      "name": "(expand \"ring_nz_closed?\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.2.1",
                                      "name": "(flatten)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.2.1",
                                      "name": "(hide (-1 -3))",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.2.1",
                                      "name": "(prop)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.2.1",
                                      "name": "(inst -1 \"sq(y)\" \"a * sq(t) + b\" \"zero\")",
                                      "type": "proof-command",
                                      "rules": [
                                       {
                                        "branch": "1.1.1.1.1.1.2.1.1",
                                        "name": "(1.1.1.1.1.1.2.1.1)",
                                        "type": "proof-branch",
                                        "rules": [
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(assert)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(inst -4 \"a * sq(t)\" \"b\" \"sq(y)\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(replaces -4)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(inst -4 \"a\" \"sq(t)\" \"sq(y)\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(replaces -4)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(lemma \"sq_times\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(inst -1 \"t\" \"y\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(replace -1 -2 rl)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(hide -1)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(replaces -4)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(lemma \"sq_rew\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(inst -1 \"one\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(replace -1 -2 rl)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(hide -1)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(assert)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(reveal -11)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(expand \"ring?\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(expand \"abelian_group?\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(flatten)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(hide-all-but (-2 -7 -12 1))",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(expand \"commutative?\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(expand \"restrict\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.1",
                                          "name": "(inst?)",
                                          "type": "proof-command",
                                          "rules": [
                                           {
                                            "branch": "1.1.1.1.1.1.2.1.1.1",
                                            "name": "(1.1.1.1.1.1.2.1.1.1)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.1.2.1.1.1",
                                              "name": "(assert)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           },
                                           {
                                            "branch": "1.1.1.1.1.1.2.1.1.2",
                                            "name": "(1.1.1.1.1.1.2.1.1.2)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.1.2.1.1.2",
                                              "name": "(expand \"fullset\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.2.1.1.2",
                                              "name": "(propax)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           },
                                           {
                                            "branch": "1.1.1.1.1.1.2.1.1.3",
                                            "name": "(1.1.1.1.1.1.2.1.1.3)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.1.2.1.1.3",
                                              "name": "(expand \"fullset\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.2.1.1.3",
                                              "name": "(propax)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           }
                                          ]
                                         }
                                        ]
                                       },
                                       {
                                        "branch": "1.1.1.1.1.1.2.1.2",
                                        "name": "(1.1.1.1.1.1.2.1.2)",
                                        "type": "proof-branch",
                                        "rules": [
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.2",
                                          "name": "(expand \"fullset\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.2",
                                          "name": "(propax)",
                                          "type": "proof-command",
                                          "rules": []
                                         }
                                        ]
                                       },
                                       {
                                        "branch": "1.1.1.1.1.1.2.1.3",
                                        "name": "(1.1.1.1.1.1.2.1.3)",
                                        "type": "proof-branch",
                                        "rules": [
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.3",
                                          "name": "(expand \"fullset\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.3",
                                          "name": "(propax)",
                                          "type": "proof-command",
                                          "rules": []
                                         }
                                        ]
                                       },
                                       {
                                        "branch": "1.1.1.1.1.1.2.1.4",
                                        "name": "(1.1.1.1.1.1.2.1.4)",
                                        "type": "proof-branch",
                                        "rules": [
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.4",
                                          "name": "(expand \"fullset\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.2.1.4",
                                          "name": "(propax)",
                                          "type": "proof-command",
                                          "rules": []
                                         }
                                        ]
                                       }
                                      ]
                                     }
                                    ]
                                   },
                                   {
                                    "branch": "1.1.1.1.1.1.2.2",
                                    "name": "(1.1.1.1.1.1.2.2)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.1.1.1.1.2.2",
                                      "name": "(hide-all-but (-1 1))",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.2.2",
                                      "name": "(expand \"division_ring?\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.2.2",
                                      "name": "(expand \"ring_with_one?\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.2.2",
                                      "name": "(assert)",
                                      "type": "proof-command",
                                      "rules": []
                                     }
                                    ]
                                   }
                                  ]
                                 }
                                ]
                               }
                              ]
                             }
                            ]
                           },
                           {
                            "branch": "1.1.1.1.1.2",
                            "name": "(1.1.1.1.1.2)",
                            "type": "proof-branch",
                            "rules": [
                             {
                              "branch": "1.1.1.1.1.2",
                              "name": "(hide-all-but 1)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.2",
                              "name": "(expand \"fullset\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.2",
                              "name": "(propax)",
                              "type": "proof-command",
                              "rules": []
                             }
                            ]
                           },
                           {
                            "branch": "1.1.1.1.1.3",
                            "name": "(1.1.1.1.1.3)",
                            "type": "proof-branch",
                            "rules": [
                             {
                              "branch": "1.1.1.1.1.3",
                              "name": "(hide-all-but 1)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.3",
                              "name": "(expand \"fullset\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.3",
                              "name": "(propax)",
                              "type": "proof-command",
                              "rules": []
                             }
                            ]
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "branch": "1.1.1.1.2",
                        "name": "(1.1.1.1.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.1.1.2",
                          "name": "(hide-all-but 1)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.2",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.2",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "1.1.1.1.3",
                        "name": "(1.1.1.1.3)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.1.1.3",
                          "name": "(hide-all-but 1)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.3",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.3",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "branch": "1.1.1.2",
                    "name": "(1.1.1.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.1.2",
                      "name": "(hide-all-but 1)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.2",
                      "name": "(expand \"fullset\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.2",
                      "name": "(propax)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   },
                   {
                    "branch": "1.1.1.3",
                    "name": "(1.1.1.3)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.1.3",
                      "name": "(hide-all-but 1)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.3",
                      "name": "(expand \"fullset\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "1.1.1.3",
                      "name": "(propax)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "1.1.2",
                "name": "(1.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.2",
                  "name": "(hide-all-but 1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.2",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "1.1.3",
                "name": "(1.1.3)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.3",
                  "name": "(hide-all-but 1)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.3",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(hide-all-but (-6 1))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"remove\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"member\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"fullset\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(prop)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(replace -1 -2 rl)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(typepred \"b\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(expand \"remove\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.2",
              "name": "(propax)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(hide (-2 -3 -4 -5))",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(typepred \"a\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"remove\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"member\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"fullset\" (-1 1))",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(prop)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(case \"N(fullset[T])(2)\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(expand \"charac\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(lift-if)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(prop)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "2.1.1",
                "name": "(2.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.1.1",
                  "name": "(expand \"empty?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(inst -1 2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(expand \"member\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.1.2",
                "name": "(2.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.1.2",
                  "name": "(lemma \"min_def[posnat]\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.2",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.2",
                  "name": "(prop)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.2",
                  "name": "(hide 2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.2",
                  "name": "(expand \"minimum?\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.2",
                  "name": "(skeep)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.2",
                  "name": "(case-replace \"x=1\" :hide? T)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "2.1.2.1",
                    "name": "(2.1.2.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.1.2.1",
                      "name": "(hide -2)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.1.2.1",
                      "name": "(expand \"N\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.1.2.1",
                      "name": "(inst -1 \"a\")",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "2.1.2.1.1",
                        "name": "(2.1.2.1.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "2.1.2.1.1",
                          "name": "(expand \"times\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.1.2.1.1",
                          "name": "(expand \"^\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.1.2.1.1",
                          "name": "(expand \"power\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.1.2.1.1",
                          "name": "(expand \"power\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.1.2.1.1",
                          "name": "(assert)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       },
                       {
                        "branch": "2.1.2.1.2",
                        "name": "(2.1.2.1.2)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "2.1.2.1.2",
                          "name": "(expand \"fullset\")",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "2.1.2.1.2",
                          "name": "(propax)",
                          "type": "proof-command",
                          "rules": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "branch": "2.1.2.2",
                    "name": "(2.1.2.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.1.2.2",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(hide 3)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"N\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"times\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"^\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"power\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"power\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"power\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(hide -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(lemma \"fullset_is_field\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"field?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(hide -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(lemma \"division_ring_is_ring_nz_closed\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(inst?)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"ring_nz_closed?\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(flatten)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(lemma \"nzd_R_cancel_right\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(inst?)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(inst -1 \"a\" \"x + x\" \"zero\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "2.2.1",
                "name": "(2.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(hide (-1 -2 -3))",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(rewrite \"left_distributive\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(lemma \"right_distributive\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(replace -1 1 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(replace -2 1 rl)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.2.2",
                "name": "(2.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.2",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.2",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.2.3",
                "name": "(2.2.3)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.3",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.3",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.2.4",
                "name": "(2.2.4)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.4",
                  "name": "(expand \"fullset\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.4",
                  "name": "(propax)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.IMP_ring_characteristic_def_TCC1": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "IMP_ring_characteristic_def_TCC1",
    "status": "untried",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ba8a745c8008c83b1d6acfc0540dcf01255e0fc9df3bfcac52cd889266f705f7"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "IMP_ring_characteristic_def_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(assuming-tcc)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": []
       }
      ]
     }
    ]
   }
  }
 ],
 "quaternions.quat_div_ring_charac": [
  {
   "info": {
    "theory": "quaternions",
    "formula": "quat_div_ring_charac",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "36eb81518007a3ae3f9156e3c31da94210707cb5fda5f57e027c2ac43b3d75dc"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quat_div_ring_charac",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(rewrite \"div_ring_iff_nz_rednorm\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(rewrite \"red_norm_charac\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"zero_q\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(hide -1 -3 -4)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(case \"q`x * q`x + inv(a) * (q`y * q`y) = b*(q`z * q`z + inv(a)* (q`t * q`t))\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "1.1",
            "name": "(1.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.1",
              "name": "(lemma \"quat_div_ring_aux1\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(lemma \"quat_div_ring_aux2\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(prop)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "1.1",
              "name": "(case \"(q`x * q`x + inv(a) * (q`y * q`y)) * (q`z * q`z + inv(a) * (q`t * q`t)) = (b * (q`z * q`z + inv(a) * (q`t * q`t))) * (q`z * q`z + inv(a) * (q`t * q`t ))\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "1.1.1",
                "name": "(1.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.1",
                  "name": "(lemma \"left_distributive\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(lemma \"right_distributive\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst-cp -2 \"q`x * q`x\" \"inv(a) * (q`y * q`y)\" \"q`z * q`z + inv(a) * (q`t * q`t)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replaces -3)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst-cp -1 \"q`x * q`x\" \"q`z * q`z\" \"inv(a) * (q`t * q`t)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(inst-cp -1 \"inv(a) * (q`y * q`y)\" \"q`z * q`z\" \"inv(a) * (q`t * q`t)\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(replaces -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(rewrite* \"sq_rew\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "1.1.1",
                  "name": "(case-replace \"inv(a) * sq(q`y) * (inv(a) * sq(q`t)) = sq(a) * sq(q`y) * sq(q`t)\" :hide? T)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "1.1.1.1",
                    "name": "(1.1.1.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "1.1.1.1",
                      "name": "(case \"sq(q`x * q`z + a * q`y * q`t) = a * sq(q`x * q`t + q`y * q`z) + b * sq(sq(q`z) + inv(a) * sq(q`t))\")",
                      "type": "proof-command",
                      "rules": [
                       {
                        "branch": "1.1.1.1.1",
                        "name": "(1.1.1.1.1)",
                        "type": "proof-branch",
                        "rules": [
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(hide -4)",
                          "type": "proof-command",
                          "rules": []
                         },
                         {
                          "branch": "1.1.1.1.1",
                          "name": "(case \"q`x * q`z + a * q`y * q`t /= zero\")",
                          "type": "proof-command",
                          "rules": [
                           {
                            "branch": "1.1.1.1.1.1",
                            "name": "(1.1.1.1.1.1)",
                            "type": "proof-branch",
                            "rules": [
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(lemma \"fullset_is_field\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(expand \"field?\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(expand \"division_ring?\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(expand \"ring_with_one?\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(expand \"monoid?\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(expand \"monad?\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(expand \"group?\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(flatten)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(hide -1 -2 -3 -4 -5 -6 -8)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(expand \"inv_exists?\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.1",
                              "name": "(inst -1 \"q`x * q`z + a * q`y * q`t\")",
                              "type": "proof-command",
                              "rules": [
                               {
                                "branch": "1.1.1.1.1.1.1",
                                "name": "(1.1.1.1.1.1.1)",
                                "type": "proof-branch",
                                "rules": [
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(skeep)",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(inst -10 \"(q`x * q`t + q`y * q`z)*y_1\" \"(sq(q`z) + inv(a) * sq(q`t))*y_1\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(prop)",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.1",
                                  "name": "(case \"sq(q`x * q`z + a * q`y * q`t) * sq(y_1) = a * (sq(q`x * q`t + q`y * q`z) * sq(y_1)) + b * (sq(sq(q`z) + inv(a) * sq(q`t)) * sq(y_1))\")",
                                  "type": "proof-command",
                                  "rules": [
                                   {
                                    "branch": "1.1.1.1.1.1.1.1",
                                    "name": "(1.1.1.1.1.1.1.1)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.1.1.1.1.1.1",
                                      "name": "(rewrite* \"sq_times\" :dir rl)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.1",
                                      "name": "(replace -2 -1)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.1",
                                      "name": "(expand \"sq\" -1 1)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.1",
                                      "name": "(assert)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.1",
                                      "name": "(expand \"sq\" -1 (1 2))",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.1",
                                      "name": "(assert)",
                                      "type": "proof-command",
                                      "rules": []
                                     }
                                    ]
                                   },
                                   {
                                    "branch": "1.1.1.1.1.1.1.2",
                                    "name": "(1.1.1.1.1.1.1.2)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.1.1.1.1.1.2",
                                      "name": "(lemma \"nzd_R_cancel_right\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.2",
                                      "name": "(inst?)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.1.2",
                                      "name": "(prop)",
                                      "type": "proof-command",
                                      "rules": [
                                       {
                                        "branch": "1.1.1.1.1.1.1.2.1",
                                        "name": "(1.1.1.1.1.1.1.2.1)",
                                        "type": "proof-branch",
                                        "rules": [
                                         {
                                          "branch": "1.1.1.1.1.1.1.2.1",
                                          "name": "(inst -1 \"sq(y_1)\" \"sq(q`x * q`z + a * q`y * q`t)\" \"a * sq(q`x * q`t + q`y * q`z) + b * sq(sq(q`z) + inv(a) * sq(q`t))\")",
                                          "type": "proof-command",
                                          "rules": [
                                           {
                                            "branch": "1.1.1.1.1.1.1.2.1.1",
                                            "name": "(1.1.1.1.1.1.1.2.1.1)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.1.1.2.1.1",
                                              "name": "(prop)",
                                              "type": "proof-command",
                                              "rules": [
                                               {
                                                "branch": "1.1.1.1.1.1.1.2.1.1.1",
                                                "name": "(1.1.1.1.1.1.1.2.1.1.1)",
                                                "type": "proof-branch",
                                                "rules": [
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.1",
                                                  "name": "(typepred \"y_1\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.1",
                                                  "name": "(expand \"remove\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.1",
                                                  "name": "(assert)",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.1",
                                                  "name": "(prop)",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.1",
                                                  "name": "(expand \"sq\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.1",
                                                  "name": "(hide-all-but (-3 1))",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.1",
                                                  "name": "(rewrite \"times_is_zero\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.1",
                                                  "name": "(assert)",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 }
                                                ]
                                               },
                                               {
                                                "branch": "1.1.1.1.1.1.1.2.1.1.2",
                                                "name": "(1.1.1.1.1.1.1.2.1.1.2)",
                                                "type": "proof-branch",
                                                "rules": [
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.2",
                                                  "name": "(inst -7 \"a * sq(q`x * q`t + q`y * q`z) \" \"b * sq(sq(q`z) + inv(a) * sq(q`t))\" \"sq(y_1)\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.2",
                                                  "name": "(replaces -7)",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.2",
                                                  "name": "(replaces -1)",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 },
                                                 {
                                                  "branch": "1.1.1.1.1.1.1.2.1.1.2",
                                                  "name": "(rewrite* \"times_associative\")",
                                                  "type": "proof-command",
                                                  "rules": []
                                                 }
                                                ]
                                               }
                                              ]
                                             }
                                            ]
                                           },
                                           {
                                            "branch": "1.1.1.1.1.1.1.2.1.2",
                                            "name": "(1.1.1.1.1.1.1.2.1.2)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.1.1.2.1.2",
                                              "name": "(expand \"fullset\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.2.1.2",
                                              "name": "(propax)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           },
                                           {
                                            "branch": "1.1.1.1.1.1.1.2.1.3",
                                            "name": "(1.1.1.1.1.1.1.2.1.3)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.1.1.2.1.3",
                                              "name": "(expand \"fullset\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.2.1.3",
                                              "name": "(propax)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           },
                                           {
                                            "branch": "1.1.1.1.1.1.1.2.1.4",
                                            "name": "(1.1.1.1.1.1.1.2.1.4)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.1.1.2.1.4",
                                              "name": "(expand \"fullset\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.1.1.2.1.4",
                                              "name": "(propax)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           }
                                          ]
                                         }
                                        ]
                                       },
                                       {
                                        "branch": "1.1.1.1.1.1.1.2.2",
                                        "name": "(1.1.1.1.1.1.1.2.2)",
                                        "type": "proof-branch",
                                        "rules": [
                                         {
                                          "branch": "1.1.1.1.1.1.1.2.2",
                                          "name": "(lemma \"fullset_is_field\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.2.2",
                                          "name": "(expand \"field?\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.2.2",
                                          "name": "(flatten)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.2.2",
                                          "name": "(lemma \"division_ring_is_ring_nz_closed\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.2.2",
                                          "name": "(inst?)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.2.2",
                                          "name": "(expand \"ring_nz_closed?\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.1.1.2.2",
                                          "name": "(assert)",
                                          "type": "proof-command",
                                          "rules": []
                                         }
                                        ]
                                       }
                                      ]
                                     }
                                    ]
                                   }
                                  ]
                                 }
                                ]
                               },
                               {
                                "branch": "1.1.1.1.1.1.2",
                                "name": "(1.1.1.1.1.1.2)",
                                "type": "proof-branch",
                                "rules": [
                                 {
                                  "branch": "1.1.1.1.1.1.2",
                                  "name": "(expand \"remove\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.1.2",
                                  "name": "(prop)",
                                  "type": "proof-command",
                                  "rules": [
                                   {
                                    "branch": "1.1.1.1.1.1.2.1",
                                    "name": "(1.1.1.1.1.1.2.1)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.1.1.1.1.2.1",
                                      "name": "(assert)",
                                      "type": "proof-command",
                                      "rules": []
                                     }
                                    ]
                                   },
                                   {
                                    "branch": "1.1.1.1.1.1.2.2",
                                    "name": "(1.1.1.1.1.1.2.2)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.1.1.1.1.2.2",
                                      "name": "(expand \"member\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.2.2",
                                      "name": "(expand \"fullset\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.1.2.2",
                                      "name": "(propax)",
                                      "type": "proof-command",
                                      "rules": []
                                     }
                                    ]
                                   }
                                  ]
                                 }
                                ]
                               }
                              ]
                             }
                            ]
                           },
                           {
                            "branch": "1.1.1.1.1.2",
                            "name": "(1.1.1.1.1.2)",
                            "type": "proof-branch",
                            "rules": [
                             {
                              "branch": "1.1.1.1.1.2",
                              "name": "(prop)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.2",
                              "name": "(replaces -1)",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.2",
                              "name": "(rewrite \"sq_zero\")",
                              "type": "proof-command",
                              "rules": []
                             },
                             {
                              "branch": "1.1.1.1.1.2",
                              "name": "(case \"sq(q`z) + inv(a) * sq(q`t) /= zero\")",
                              "type": "proof-command",
                              "rules": [
                               {
                                "branch": "1.1.1.1.1.2.1",
                                "name": "(1.1.1.1.1.2.1)",
                                "type": "proof-branch",
                                "rules": [
                                 {
                                  "branch": "1.1.1.1.1.2.1",
                                  "name": "(lemma \"fullset_is_field\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.2.1",
                                  "name": "(expand \"field?\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.2.1",
                                  "name": "(expand \"division_ring?\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.2.1",
                                  "name": "(expand \"group?\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.2.1",
                                  "name": "(flatten)",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.2.1",
                                  "name": "(hide -1 -2 -4)",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.2.1",
                                  "name": "(expand \"inv_exists?\")",
                                  "type": "proof-command",
                                  "rules": []
                                 },
                                 {
                                  "branch": "1.1.1.1.1.2.1",
                                  "name": "(inst -1 \"sq(q`z) + inv(a) * sq(q`t)\")",
                                  "type": "proof-command",
                                  "rules": [
                                   {
                                    "branch": "1.1.1.1.1.2.1.1",
                                    "name": "(1.1.1.1.1.2.1.1)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.1.1.1.2.1.1",
                                      "name": "(skeep)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.2.1.1",
                                      "name": "(inst -7 \"(q`x * q`t + q`y * q`z) * y\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.2.1.1",
                                      "name": "(lemma \"nzd_R_cancel_right\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.2.1.1",
                                      "name": "(inst?)",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.2.1.1",
                                      "name": "(prop)",
                                      "type": "proof-command",
                                      "rules": [
                                       {
                                        "branch": "1.1.1.1.1.2.1.1.1",
                                        "name": "(1.1.1.1.1.2.1.1.1)",
                                        "type": "proof-branch",
                                        "rules": [
                                         {
                                          "branch": "1.1.1.1.1.2.1.1.1",
                                          "name": "(inst -1 \"sq(y)\" \"zero\" \"a * sq(q`x * q`t + q`y * q`z) + b * sq(sq(q`z) + inv(a) * sq(q`t))\")",
                                          "type": "proof-command",
                                          "rules": [
                                           {
                                            "branch": "1.1.1.1.1.2.1.1.1.1",
                                            "name": "(1.1.1.1.1.2.1.1.1.1)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.1",
                                              "name": "(assert)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.1",
                                              "name": "(inst -6 \"a * sq(q`x * q`t + q`y * q`z)\" \"b * sq(sq(q`z) + inv(a) * sq(q`t))\" \"sq(y)\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.1",
                                              "name": "(replaces -6)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.1",
                                              "name": "(rewrite* \"times_associative\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.1",
                                              "name": "(rewrite* \"sq_times\" :dir rl)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.1",
                                              "name": "(replaces -2)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.1",
                                              "name": "(expand \"sq\" -1 2)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.1",
                                              "name": "(assert)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.1",
                                              "name": "(expand \"sq\" -1)",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.1",
                                              "name": "(rewrite* \"times_associative\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.1",
                                              "name": "(assert)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           },
                                           {
                                            "branch": "1.1.1.1.1.2.1.1.1.2",
                                            "name": "(1.1.1.1.1.2.1.1.1.2)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.2",
                                              "name": "(expand \"fullset\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.2",
                                              "name": "(propax)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           },
                                           {
                                            "branch": "1.1.1.1.1.2.1.1.1.3",
                                            "name": "(1.1.1.1.1.2.1.1.1.3)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.3",
                                              "name": "(expand \"fullset\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.3",
                                              "name": "(propax)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           },
                                           {
                                            "branch": "1.1.1.1.1.2.1.1.1.4",
                                            "name": "(1.1.1.1.1.2.1.1.1.4)",
                                            "type": "proof-branch",
                                            "rules": [
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.4",
                                              "name": "(expand \"fullset\")",
                                              "type": "proof-command",
                                              "rules": []
                                             },
                                             {
                                              "branch": "1.1.1.1.1.2.1.1.1.4",
                                              "name": "(propax)",
                                              "type": "proof-command",
                                              "rules": []
                                             }
                                            ]
                                           }
                                          ]
                                         }
                                        ]
                                       },
                                       {
                                        "branch": "1.1.1.1.1.2.1.1.2",
                                        "name": "(1.1.1.1.1.2.1.1.2)",
                                        "type": "proof-branch",
                                        "rules": [
                                         {
                                          "branch": "1.1.1.1.1.2.1.1.2",
                                          "name": "(lemma \"fullset_is_field\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.2.1.1.2",
                                          "name": "(expand \"field?\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.2.1.1.2",
                                          "name": "(flatten)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.2.1.1.2",
                                          "name": "(hide -2)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.2.1.1.2",
                                          "name": "(lemma \"division_ring_is_ring_nz_closed\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.2.1.1.2",
                                          "name": "(inst?)",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.2.1.1.2",
                                          "name": "(expand \"ring_nz_closed?\")",
                                          "type": "proof-command",
                                          "rules": []
                                         },
                                         {
                                          "branch": "1.1.1.1.1.2.1.1.2",
                                          "name": "(assert)",
                                          "type": "proof-command",
                                          "rules": []
                                         }
                                        ]
                                       }
                                      ]
                                     }
                                    ]
                                   },
                                   {
                                    "branch": "1.1.1.1.1.2.1.2",
                                    "name": "(1.1.1.1.1.2.1.2)",
                                    "type": "proof-branch",
                                    "rules": [
                                     {
                                      "branch": "1.1.1.1.1.2.1.2",
                                      "name": "(expand \"remove\")",
                                      "type": "proof-command",
                                      "rules": []
                                     },
                                     {
                                      "branch": "1.1.1.1.1.2.1.2",
                                      "name": "(prop)",
                                      "type": "proof-command",
                                      "rules": [
                                       {
                                        "branch": "1.1.1.1.1.2.1.2.1",
                                        "name": "(1.1.1.1.1.2.1.2.1)",
                                        "type": "proof-branch",
                                        "rules": []
                                       }
                                      ]
                                     }
                                    ]
                                   }
                                  ]
                                 }
                                ]
                               }
                              ]
                             }
                            ]
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "1.1.2",
                "name": "(1.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "1.1.2",
                  "name": "(postpone)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "1.2",
            "name": "(1.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "1.2",
              "name": "(postpone)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(postpone)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(postpone)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ]
}