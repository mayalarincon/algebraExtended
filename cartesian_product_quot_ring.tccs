%% TCCs associated with theory cartesian_product_quot_ring
%% This file was automatically generated by PVS, please **do not modify** by hand.
cartesian_product_quot_ring_TCCS: THEORY BEGIN

	% Assuming TCC generated (at line 34, column 3) for
	% quotient_rings[T, +, *, zero]
	% generated from assumption quotient_rings.fullset_is_ring
	  % proved
	IMP_quotient_rings_TCC1: OBLIGATION
	ring?[T, +, *, zero](fullset[T])
	
	% Subtype TCC generated (at line 56, column 69) for  i
	% expected type  below[length(fsx)]
	  % proved
	Sfs_TCC1: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R),
	          fsx, fsy: (cartesian_product_n[set[T]](fsQ(R)(fsA)))):
	    NOT fsA`length = 0 IMPLIES FORALL (i: below[fsA`length]): i < fsx`length
	
	% Subtype TCC generated (at line 56, column 65) for
	% finseq_appl[set[T]](fsx)(i)
	% expected type  coset[T, +](R, finseq_appl[set[T]](fsA)(i))
	  % proved
	Sfs_TCC2: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R),
	          fsx, fsy: (cartesian_product_n[set[T]](fsQ(R)(fsA)))):
	    NOT fsA`length = 0 IMPLIES
	     FORALL (i: below[fsA`length]):
	       coset?[T, +]
	           (R, finseq_appl[set[T]](fsA)(i))(finseq_appl[set[T]](fsx)(i))
	
	% Subtype TCC generated (at line 56, column 77) for  i
	% expected type  below[length(fsy)]
	  % proved
	Sfs_TCC3: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R),
	          fsx, fsy: (cartesian_product_n[set[T]](fsQ(R)(fsA)))):
	    NOT fsA`length = 0 IMPLIES FORALL (i: below[fsA`length]): i < fsy`length
	
	% Subtype TCC generated (at line 56, column 73) for
	% finseq_appl[set[T]](fsy)(i)
	% expected type  coset[T, +](R, finseq_appl[set[T]](fsA)(i))
	  % proved
	Sfs_TCC4: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R),
	          fsx, fsy: (cartesian_product_n[set[T]](fsQ(R)(fsA)))):
	    NOT fsA`length = 0 IMPLIES
	     FORALL (i: below[fsA`length]):
	       coset?[T, +]
	           (R, finseq_appl[set[T]](fsA)(i))(finseq_appl[set[T]](fsy)(i))
	
	% The subtype TCC (at line 65, column 73) in decl nil for
	% term generated from Pfs  i
	% expected type  below[fsx`length]
	% The subtype TCC (at line 65, column 69) in decl nil for
	% term generated from Pfs
	%  finseq_appl[set[T]](fsx)(i)
	% expected type  coset[T, +](R, finseq_appl[set[T]](fsA)(i))
	% The subtype TCC (at line 65, column 81) in decl nil for
	% term generated from Pfs  i
	% expected type  below[fsy`length]
	% The subtype TCC (at line 65, column 77) in decl nil for
	% term generated from Pfs
	%  finseq_appl[set[T]](fsy)(i)
	% expected type  coset[T, +](R, finseq_appl[set[T]](fsA)(i))
	% Subtype TCC generated (at line 75, column 7) for
	% cartesian_product_n[set[T]](fsQ(R)(fsA))
	% expected type  set[(cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % proved
	cartesian_product_quot_ring_is_ring_TCC1: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R)):
	    fsA`length /= 0 IMPLIES
	     FORALL (x: finseq[set[T]]):
	       cartesian_product_n[set[T]](fsQ(R)(fsA))(x) IMPLIES
	        cartesian_product_n[set[T]](fsQ(R)(fsA))(x)
	
	% The subtype TCC (at line 65, column 73) in decl nil for
	 % term generated from Pfs  i
	    % expected type  below[fsx`length]
	  % is subsumed by Sfs_TCC1
	% The subtype TCC (at line 65, column 69) in decl nil for
	 % term generated from Pfs
	    %  finseq_appl[set[T]](fsx)(i)
	    % expected type  coset[T, +](R, finseq_appl[set[T]](fsA)(i))
	  % is subsumed by Sfs_TCC2
	% The subtype TCC (at line 65, column 81) in decl nil for
	 % term generated from Pfs  i
	    % expected type  below[fsy`length]
	  % is subsumed by Sfs_TCC3
	% The subtype TCC (at line 65, column 77) in decl nil for
	 % term generated from Pfs
	    %  finseq_appl[set[T]](fsy)(i)
	    % expected type  coset[T, +](R, finseq_appl[set[T]](fsA)(i))
	  % is subsumed by Sfs_TCC4
	
	% Existence TCC generated (at line 74, column 9) for
	% ring?[(cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%       Pfs(R)(fsA), fsA]
	  % proved
	cartesian_product_quot_ring_is_ring_TCC2: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R)):
	    fsA`length /= 0 IMPLIES
	     EXISTS (x: (cartesian_product_n[set[T]](fsQ(R)(fsA)))): TRUE
	
	% Subtype TCC generated (at line 74, column 9) for
	% ring?[(cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%       Pfs(R)(fsA), fsA]
	% expected type  [[(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%   (cartesian_product_n[set[T]](fsQ(R)(fsA)))] ->
	%    (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % proved
	cartesian_product_quot_ring_is_ring_TCC3: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R)):
	    fsA`length /= 0 IMPLIES
	     FORALL (x1:
	               [(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	                (cartesian_product_n[set[T]](fsQ(R)(fsA)))]):
	       cartesian_product_n[set[T]](fsQ(R)(fsA))(Sfs(R)(fsA)(x1))
	
	% Subtype TCC generated (at line 74, column 9) for
	% ring?[(cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%       Pfs(R)(fsA), fsA]
	% expected type  [[(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%   (cartesian_product_n[set[T]](fsQ(R)(fsA)))] ->
	%    (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % proved
	cartesian_product_quot_ring_is_ring_TCC4: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R)):
	    fsA`length /= 0 IMPLIES
	     FORALL (x1:
	               [(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	                (cartesian_product_n[set[T]](fsQ(R)(fsA)))]):
	       cartesian_product_n[set[T]](fsQ(R)(fsA))(Pfs(R)(fsA)(x1))
	
	% Subtype TCC generated (at line 74, column 9) for
	% ring?[(cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%       Pfs(R)(fsA), fsA]
	% expected type  (cartesian_product_n[set[T]](fsQ(R)(fsA)))
	  % proved
	cartesian_product_quot_ring_is_ring_TCC5: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R)):
	    fsA`length /= 0 IMPLIES cartesian_product_n[set[T]](fsQ(R)(fsA))(fsA)

END cartesian_product_quot_ring_TCCS