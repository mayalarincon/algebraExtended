infinite_cyclic_groups[T:Type+,*:[T,T->T],one:T]: THEORY
BEGIN

   ASSUMING IMPORTING group_def[T,*,one]

       fullset_is_group: ASSUMPTION group?(fullset[T])

   ENDASSUMING

%  infinite cyclic groups

   IMPORTING group, group_rew

   Z: group[int,+,0] = generated_by[int,+,0](1)

   a: VAR T

   F(a: T): group[T,*,one] = generated_by(a)

   IMPORTING homomorphisms

   i: VAR int

   Z_gen: LEMMA i = group[int,+,0].^(1,i)


%  ----- All infinite cyclic groups are isomorphic to Z
   
   inf_cyclic_is_Z: LEMMA NOT finite_group?(F(a)) IMPLIES isomorphic?(Z,F(a))


END infinite_cyclic_groups


