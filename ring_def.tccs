%% TCCs associated with theory ring_def
%% This file was automatically generated by PVS, please **do not modify** by hand.
ring_def_TCCS: THEORY BEGIN

	% Subtype TCC generated (at line 21, column 63) for
	% restrict[[T, T], [(S), (S)], T](*)
	% expected type  [[(S), (S)] -> (S)]
	  % proved
	ring?_TCC1: OBLIGATION
	FORALL (S: set[T]):
	    abelian_group?[T, +, zero](S) AND star_closed?(S) IMPLIES
	     FORALL (x1: [(S), (S)]): S(*(x1))
	
	% Subtype TCC generated (at line 22, column 45) for
	% restrict[[T, T], [(S), (S)], T](+)
	% expected type  [[(S), (S)] -> (S)]
	  % proved
	ring?_TCC2: OBLIGATION
	FORALL (S: set[T]):
	    abelian_group?[T, +, zero](S) AND
	     star_closed?(S) AND associative?[(S)](restrict[[T, T], [(S), (S)], T](*))
	     IMPLIES FORALL (x1: [(S), (S)]): S(+x1)
	
	% The subtype TCC (at line 22, column 43) in decl nil for
	% term generated from ring?
	%  restrict[[T, T], [(S), (S)], T](*)
	% expected type  [[(S), (S)] -> (S)]
	% The subtype TCC (at line 23, column 44) in decl nil for
	% term generated from ring?
	%  restrict[[T, T], [(S), (S)], T](*)
	% expected type  [[(S), (S)] -> (S)]
	% The subtype TCC (at line 23, column 46) in decl nil for
	% term generated from ring?
	%  restrict[[T, T], [(S), (S)], T](+)
	% expected type  [[(S), (S)] -> (S)]
	% Subtype TCC generated (at line 26, column 70) for
	% restrict[[T, T], [(S), (S)], T](*)
	% expected type  [[(S), (S)] -> (S)]
	  % proved
	commutative_ring?_TCC1: OBLIGATION
	FORALL (S: set[T]): ring?(S) IMPLIES FORALL (x1: [(S), (S)]): S(*(x1))
	
	% The subtype TCC (at line 22, column 43) in decl nil for
	 % term generated from ring?
	    %  restrict[[T, T], [(S), (S)], T](*)
	    % expected type  [[(S), (S)] -> (S)]
	  % is subsumed by ring?_TCC1
	% The subtype TCC (at line 23, column 44) in decl nil for
	 % term generated from ring?
	    %  restrict[[T, T], [(S), (S)], T](*)
	    % expected type  [[(S), (S)] -> (S)]
	  % is subsumed by ring?_TCC1
	% The subtype TCC (at line 23, column 46) in decl nil for
	 % term generated from ring?
	    %  restrict[[T, T], [(S), (S)], T](+)
	    % expected type  [[(S), (S)] -> (S)]
	  % is subsumed by ring?_TCC2
	
	% Subtype TCC generated (at line 27, column 77) for
	% restrict[[T, T], [(S), (S)], T](*)
	% expected type  [[(S), (S)] -> (S)]
	  % proved
	finite_commutative_ring?_TCC1: OBLIGATION
	FORALL (S: set[T]): finite_ring?(S) IMPLIES FORALL (x1: [(S), (S)]): S(*(x1))

END ring_def_TCCS