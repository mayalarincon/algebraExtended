(ring_gcd_def
 (gcd?_TCC1 0
  (gcd?_TCC1-1 nil 3861824791
   ("" (skeep*)
    (("" (expand "member")
      (("" (typepred "X")
        (("" (expand "subset?")
          (("" (expand "member")
            (("" (inst?) (("" (assert) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" sets nil)
    (T formal-nonempty-type-decl nil ring_gcd_def nil)
    (set type-eq-decl nil sets nil) (empty? const-decl "bool" sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (subset? const-decl "bool" sets nil)
    (+ formal-const-decl "[T, T -> T]" ring_gcd_def nil)
    (* formal-const-decl "[T, T -> T]" ring_gcd_def nil)
    (zero formal-const-decl "T" ring_gcd_def nil)
    (commutative_ring? const-decl "bool" ring_def nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil (gcd? subtype "ring_gcd_def.a" "(ring_gcd_def.R)")))
 (gcd?_TCC2 0
  (gcd?_TCC2-1 nil 3861824791 ("" (subtype-tcc) nil nil) nil nil
   (gcd? subtype "ring_gcd_def.d" "(ring_gcd_def.R)"))))

