%% TCCs associated with theory chinese_remainder_theorem_rings
%% This file was automatically generated by PVS, please **do not modify** by hand.
chinese_remainder_theorem_rings_TCCS: THEORY BEGIN

	% Assuming TCC generated (at line 38, column 10) for
	% product_finseq_sets_ring[T, +, *, zero, one]
	% generated from assumption product_finseq_sets_ring.fullset_is_ring_with_one
	  % proved
	IMP_product_finseq_sets_ring_TCC1: OBLIGATION
	ring_with_one?[T, +, *, zero, one](fullset[T])
	
	% The assuming TCC (at line 39, column 3) in decl nil for
	% term generated from IMPORTING
	%  comaximal_finseqs_ideals[T, +, *, zero, one]
	% generated from assumption comaximal_finseqs_ideals.fullset_is_ring_with_one
	% Subtype TCC generated (at line 63, column 14) for  i
	% expected type  below[length(s)]
	  % proved
	surjective_aux_1_TCC1: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R),
	          s: finseq[(R)] | s`length = fsA`length, i: below[fsA`length]):
	    i < s`length
	
	% The subtype TCC (at line 64, column 64) in decl nil for
	% term generated from surjective_aux_1  i
	% expected type  below[s`length]
	% Subtype TCC generated (at line 68, column 49) for  fsA
	% expected type  fsI[T, +, *, zero](R)
	  % proved
	surjective_aux_2_TCC1: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R)):
	    fsRI?[T, +, *, zero](R)(fsA)
	
	% The subtype TCC (at line 64, column 64) in decl nil for
	 % term generated from surjective_aux_1  i
	    % expected type  below[s`length]
	  % is subsumed by surjective_aux_1_TCC1
	
	% Subtype TCC generated (at line 72, column 6) for  i
	% expected type  below[length(y)]
	  % proved
	surjective_aux_2_TCC2: OBLIGATION
	FORALL (y: finseq[set[T]], R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R)):
	    member(y, cartesian_product_n[set[T]](fsQ(R)(fsA))) IMPLIES
	     FORALL (s: finseq[(R)] | s`length = fsA`length,
	             r: finseq[(R)] | r`length = fsA`length, i: below[fsA`length]):
	       i < y`length
	
	% Subtype TCC generated (at line 72, column 13) for  i
	% expected type  below[length(r)]
	  % proved
	surjective_aux_2_TCC3: OBLIGATION
	FORALL (y: finseq[set[T]], R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R)):
	    member(y, cartesian_product_n[set[T]](fsQ(R)(fsA))) IMPLIES
	     FORALL (s: finseq[(R)] | s`length = fsA`length,
	             r: finseq[(R)] | r`length = fsA`length, i: below[fsA`length]):
	       i < r`length
	
	% Subtype TCC generated (at line 73, column 45) for  length(fsA) - 1
	% expected type  int_below_N[T, +, *, zero, length(fsA)]
	  % proved
	surjective_aux_2_TCC4: OBLIGATION
	FORALL (y: finseq[set[T]], R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R)):
	    member(y, cartesian_product_n[set[T]](fsQ(R)(fsA))) IMPLIES
	     FORALL (s: finseq[(R)] | s`length = fsA`length,
	             r: finseq[(R)] | r`length = fsA`length, i: below[fsA`length]):
	       finseq_appl[set[T]](y)(i) =
	        finseq_appl[(R)](r)(i) + finseq_appl[set[T]](fsA)(i)
	        IMPLIES fsA`length - 1 < fsA`length
	
	% Subtype TCC generated (at line 74, column 60) for  i
	% expected type  below[length(s)]
	  % proved
	surjective_aux_2_TCC5: OBLIGATION
	FORALL (y: finseq[set[T]], R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R)):
	    member(y, cartesian_product_n[set[T]](fsQ(R)(fsA))) IMPLIES
	     FORALL (s: finseq[(R)] | s`length = fsA`length,
	             r: finseq[(R)] | r`length = fsA`length, i: below[fsA`length]):
	       finseq_appl[set[T]](y)(i) =
	        finseq_appl[(R)](r)(i) + finseq_appl[set[T]](fsA)(i)
	        IMPLIES FORALL (i1: below[fsA`length]): i1 < s`length
	
	% Subtype TCC generated (at line 74, column 67) for  i
	% expected type  below[length(r)]
	  % proved
	surjective_aux_2_TCC6: OBLIGATION
	FORALL (y: finseq[set[T]], R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R)):
	    member(y, cartesian_product_n[set[T]](fsQ(R)(fsA))) IMPLIES
	     FORALL (s: finseq[(R)] | s`length = fsA`length,
	             r: finseq[(R)] | r`length = fsA`length, i: below[fsA`length]):
	       finseq_appl[set[T]](y)(i) =
	        finseq_appl[(R)](r)(i) + finseq_appl[set[T]](fsA)(i)
	        IMPLIES FORALL (i1: below[fsA`length]): i1 < r`length
	
	% Subtype TCC generated (at line 73, column 4) for
	% R_sigma_below[T, +, *, zero, length(fsA)]
	% expected type  posnat
	  % proved
	surjective_aux_2_TCC7: OBLIGATION
	FORALL (y: finseq[set[T]], R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R)):
	    member(y, cartesian_product_n[set[T]](fsQ(R)(fsA))) IMPLIES
	     FORALL (s: finseq[(R)] | s`length = fsA`length,
	             r: finseq[(R)] | r`length = fsA`length, i: below[fsA`length]):
	       finseq_appl[set[T]](y)(i) =
	        finseq_appl[(R)](r)(i) + finseq_appl[set[T]](fsA)(i)
	        IMPLIES fsA`length > 0
	
	% Assuming TCC generated (at line 73, column 4) for
	% R_sigma_below[T, +, *, zero, length(fsA)]
	% generated from assumption sigma_R_below.fullset_is_ring
	  % proved
	surjective_aux_2_TCC8: OBLIGATION
	FORALL (y: finseq[set[T]], R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R)):
	    member(y, cartesian_product_n[set[T]](fsQ(R)(fsA))) IMPLIES
	     FORALL (s: finseq[(R)] | s`length = fsA`length,
	             r: finseq[(R)] | r`length = fsA`length, i: below[fsA`length]):
	       finseq_appl[set[T]](y)(i) =
	        finseq_appl[(R)](r)(i) + finseq_appl[set[T]](fsA)(i)
	        IMPLIES ring?[T, +, *, zero](fullset[T])
	
	% The subtype TCC (at line 74, column 85) in decl nil for
	% term generated from surjective_aux_2  i
	% expected type  below[r`length]
	% Subtype TCC generated (at line 82, column 50) for  phi
	% expected type  [(R) -> (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % proved
	CRT_aux_1_TCC1: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R) | fsA`length /= 0,
	          phi: [(R) -> [# length: nat, seq: [below[fsA`length] -> set[T]] #]]):
	    (phi =
	      LAMBDA (x: (R)):
	        (# length := fsA`length,
	           seq
	             := LAMBDA (i: below[fsA`length]):
	                  x + finseq_appl[set[T]](fsA)(i) #))
	     IMPLIES
	     FORALL (x1: (R)):
	       (FORALL (x: nat): x < fsA`length IFF x < phi(x1)`length) AND
	        cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))(phi(x1))
	
	% The subtype TCC (at line 74, column 85) in decl nil for
	 % term generated from surjective_aux_2  i
	    % expected type  below[r`length]
	  % is subsumed by surjective_aux_2_TCC3
	
	% Subtype TCC generated (at line 82, column 8) for
	% cartesian_product_n[set[T]](fsQ(R)(fsA))
	% expected type  set[(cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % proved
	CRT_aux_1_TCC2: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R) | fsA`length /= 0,
	          phi: [(R) -> [# length: nat, seq: [below[fsA`length] -> set[T]] #]]):
	    (phi =
	      LAMBDA (x: (R)):
	        (# length := fsA`length,
	           seq
	             := LAMBDA (i: below[fsA`length]):
	                  x + finseq_appl[set[T]](fsA)(i) #))
	     IMPLIES
	     FORALL (x: finseq[set[T]]):
	       cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))(x) IMPLIES
	        cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))(x)
	
	% Existence TCC generated (at line 80, column 5) for
	% R_homomorphism?
	%     [T, +, *, zero, (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%      Sfs(R)(fsA), Pfs(R)(fsA), fsA]
	  % proved
	CRT_aux_1_TCC3: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R) | fsA`length /= 0,
	          phi: [(R) -> [# length: nat, seq: [below[fsA`length] -> set[T]] #]]):
	    (phi =
	      LAMBDA (x: (R)):
	        (# length := fsA`length,
	           seq
	             := LAMBDA (i: below[fsA`length]):
	                  x + finseq_appl[set[T]](fsA)(i) #))
	     IMPLIES
	     EXISTS (x: (cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA)))):
	       TRUE
	
	% Subtype TCC generated (at line 80, column 5) for
	% R_homomorphism?
	%     [T, +, *, zero, (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%      Sfs(R)(fsA), Pfs(R)(fsA), fsA]
	% expected type  [[(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%   (cartesian_product_n[set[T]](fsQ(R)(fsA)))] ->
	%    (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % proved
	CRT_aux_1_TCC4: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R) | fsA`length /= 0,
	          phi: [(R) -> [# length: nat, seq: [below[fsA`length] -> set[T]] #]]):
	    (phi =
	      LAMBDA (x: (R)):
	        (# length := fsA`length,
	           seq
	             := LAMBDA (i: below[fsA`length]):
	                  x + finseq_appl[set[T]](fsA)(i) #))
	     IMPLIES
	     FORALL (x1:
	               [(cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))),
	                (cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA)))]):
	       cartesian_product_n[set[T]]
	           (fsQ[T, +, *, zero](R)(fsA))(Sfs[T, +, *, zero](R)(fsA)(x1))
	
	% Subtype TCC generated (at line 80, column 5) for
	% R_homomorphism?
	%     [T, +, *, zero, (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%      Sfs(R)(fsA), Pfs(R)(fsA), fsA]
	% expected type  [[(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%   (cartesian_product_n[set[T]](fsQ(R)(fsA)))] ->
	%    (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % proved
	CRT_aux_1_TCC5: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R) | fsA`length /= 0,
	          phi: [(R) -> [# length: nat, seq: [below[fsA`length] -> set[T]] #]]):
	    (phi =
	      LAMBDA (x: (R)):
	        (# length := fsA`length,
	           seq
	             := LAMBDA (i: below[fsA`length]):
	                  x + finseq_appl[set[T]](fsA)(i) #))
	     IMPLIES
	     FORALL (x1:
	               [(cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))),
	                (cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA)))]):
	       cartesian_product_n[set[T]]
	           (fsQ[T, +, *, zero](R)(fsA))(Pfs[T, +, *, zero](R)(fsA)(x1))
	
	% Subtype TCC generated (at line 80, column 5) for
	% R_homomorphism?
	%     [T, +, *, zero, (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%      Sfs(R)(fsA), Pfs(R)(fsA), fsA]
	% expected type  (cartesian_product_n[set[T]](fsQ(R)(fsA)))
	  % proved
	CRT_aux_1_TCC6: OBLIGATION
	FORALL (R: ring[T, +, *, zero], fsA: fsI[T, +, *, zero](R) | fsA`length /= 0,
	          phi: [(R) -> [# length: nat, seq: [below[fsA`length] -> set[T]] #]]):
	    (phi =
	      LAMBDA (x: (R)):
	        (# length := fsA`length,
	           seq
	             := LAMBDA (i: below[fsA`length]):
	                  x + finseq_appl[set[T]](fsA)(i) #))
	     IMPLIES cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))(fsA)
	
	% The subtype TCC (at line 86, column 51) in decl nil for
	% term generated from CRT_aux_1  phi
	% expected type  R_homomorphism
	%     [T, +, *, zero,
	%      (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%      Sfs(R)(fsA), Pfs(R)(fsA), fsA](R,
	%                                     cartesian_product_n
	%                                     [set[T]]
	%                                     (fsQ(R)(fsA)))
	% The subtype TCC (at line 86, column 9) in decl nil for
	% term generated from CRT_aux_1
	%  cartesian_product_n[set[T]](fsQ(R)(fsA))
	% expected type  set[(cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	% The subtype TCC (at line 84, column 6) in decl nil for
	% term generated from CRT_aux_1
	%  R_kernel
	%     [T, +, *, zero, (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%      Sfs(R)(fsA), Pfs(R)(fsA), fsA]
	% expected type  [[(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%   (cartesian_product_n[set[T]](fsQ(R)(fsA)))] ->
	%    (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	% The subtype TCC (at line 84, column 6) in decl nil for
	% term generated from CRT_aux_1
	%  R_kernel
	%     [T, +, *, zero, (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%      Sfs(R)(fsA), Pfs(R)(fsA), fsA]
	% expected type  [[(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%   (cartesian_product_n[set[T]](fsQ(R)(fsA)))] ->
	%    (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	% The subtype TCC (at line 84, column 6) in decl nil for
	% term generated from CRT_aux_1
	%  R_kernel
	%     [T, +, *, zero, (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%      Sfs(R)(fsA), Pfs(R)(fsA), fsA]
	% expected type  (cartesian_product_n[set[T]](fsQ(R)(fsA)))
	% Subtype TCC generated (at line 93, column 65) for  phi
	% expected type  [(R) -> (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % proved
	CRT_aux_2_TCC1: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R) | fsA`length /= 0,
	          phi: [(R) -> [# length: nat, seq: [below[fsA`length] -> set[T]] #]]):
	    (phi =
	      LAMBDA (x: (R)):
	        (# length := fsA`length,
	           seq
	             := LAMBDA (i: below[fsA`length]):
	                  x + finseq_appl[set[T]](fsA)(i) #))
	     IMPLIES
	     FORALL (x1: (R)):
	       (FORALL (x: nat): x < fsA`length IFF x < phi(x1)`length) AND
	        cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))(phi(x1))
	
	% The subtype TCC (at line 86, column 51) in decl nil for
	 % term generated from CRT_aux_1  phi
	    % expected type  R_homomorphism
	                   %     [T, +, *, zero,
	                   %      (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	                   %      Sfs(R)(fsA), Pfs(R)(fsA), fsA](R,
	                   %                                     cartesian_product_n
	                   %                                     [set[T]]
	                   %                                     (fsQ(R)(fsA)))
	  % is subsumed by CRT_aux_1_TCC1
	% The subtype TCC (at line 86, column 9) in decl nil for
	 % term generated from CRT_aux_1
	    %  cartesian_product_n[set[T]](fsQ(R)(fsA))
	    % expected type  set[(cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % is subsumed by CRT_aux_1_TCC2
	% The subtype TCC (at line 84, column 6) in decl nil for
	 % term generated from CRT_aux_1
	    %  R_kernel
	    %     [T, +, *, zero, (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	    %      Sfs(R)(fsA), Pfs(R)(fsA), fsA]
	    % expected type  [[(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	                   %   (cartesian_product_n[set[T]](fsQ(R)(fsA)))] ->
	                   %    (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % is subsumed by CRT_aux_1_TCC4
	% The subtype TCC (at line 84, column 6) in decl nil for
	 % term generated from CRT_aux_1
	    %  R_kernel
	    %     [T, +, *, zero, (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	    %      Sfs(R)(fsA), Pfs(R)(fsA), fsA]
	    % expected type  [[(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	                   %   (cartesian_product_n[set[T]](fsQ(R)(fsA)))] ->
	                   %    (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % is subsumed by CRT_aux_1_TCC5
	% The subtype TCC (at line 84, column 6) in decl nil for
	 % term generated from CRT_aux_1
	    %  R_kernel
	    %     [T, +, *, zero, (cartesian_product_n[set[T]](fsQ(R)(fsA))),
	    %      Sfs(R)(fsA), Pfs(R)(fsA), fsA]
	    % expected type  (cartesian_product_n[set[T]](fsQ(R)(fsA)))
	  % is subsumed by CRT_aux_1_TCC6
	
	% The subtype TCC (at line 93, column 57) in decl nil for
	% term generated from CRT_aux_2  fsA
	% expected type  fsI[T, +, *, zero](R)
	% The subtype TCC (at line 93, column 5) in decl nil for
	% term generated from CRT_aux_2
	%  surjective?[(R), (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	% expected type  fsI[T, +, *, zero](R)
	% Subtype TCC generated (at line 107, column 38) for
	% cartesian_product_n[set[T]](fsQ(R)(fsA))
	% expected type  set[(cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % proved
	Chinese_Remainder_Theorem_TCC1: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R) | fsA`length /= 0):
	    FORALL (x: finseq[set[T]]):
	      cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))(x) IMPLIES
	       cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))(x)
	
	% The subtype TCC (at line 93, column 57) in decl nil for
	 % term generated from CRT_aux_2  fsA
	    % expected type  fsI[T, +, *, zero](R)
	  % is subsumed by surjective_aux_2_TCC1
	% The subtype TCC (at line 93, column 5) in decl nil for
	 % term generated from CRT_aux_2
	    %  surjective?[(R), (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	    % expected type  fsI[T, +, *, zero](R)
	  % is subsumed by surjective_aux_2_TCC1
	
	% Existence TCC generated (at line 102, column 5) for
	% R_isomorphic?
	%     [coset[T, +](R, Intersection(seq2set(fsA))),
	%      add(R, Intersection(seq2set(fsA))),
	%      product(R, Intersection(seq2set(fsA))),
	%      Intersection(seq2set(fsA)),
	%      (cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%      Pfs(R)(fsA), fsA]
	  % proved
	Chinese_Remainder_Theorem_TCC2: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R) | fsA`length /= 0):
	    EXISTS (x: coset[T, +](R, Intersection[T](seq2set[set[T]](fsA)))): TRUE
	
	% Subtype TCC generated (at line 102, column 5) for
	% R_isomorphic?
	%     [coset[T, +](R, Intersection(seq2set(fsA))),
	%      add(R, Intersection(seq2set(fsA))),
	%      product(R, Intersection(seq2set(fsA))),
	%      Intersection(seq2set(fsA)),
	%      (cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%      Pfs(R)(fsA), fsA]
	% expected type  [[coset[T, +](R, Intersection(seq2set(fsA))),
	%   coset[T, +](R, Intersection(seq2set(fsA)))] ->
	%    coset[T, +](R, Intersection(seq2set(fsA)))]
	  % proved
	Chinese_Remainder_Theorem_TCC3: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R) | fsA`length /= 0):
	    FORALL (x1:
	              [coset[T, +](R, Intersection[T](seq2set[set[T]](fsA))),
	               coset[T, +](R, Intersection[T](seq2set[set[T]](fsA)))]):
	      coset?[T, +]
	          (R, Intersection[T](seq2set[set[T]](fsA)))
	          (add[T, +](R, Intersection[T](seq2set[set[T]](fsA)))(x1))
	
	% Subtype TCC generated (at line 102, column 5) for
	% R_isomorphic?
	%     [coset[T, +](R, Intersection(seq2set(fsA))),
	%      add(R, Intersection(seq2set(fsA))),
	%      product(R, Intersection(seq2set(fsA))),
	%      Intersection(seq2set(fsA)),
	%      (cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%      Pfs(R)(fsA), fsA]
	% expected type  [[coset[T, +](R, Intersection(seq2set(fsA))),
	%   coset[T, +](R, Intersection(seq2set(fsA)))] ->
	%    coset[T, +](R, Intersection(seq2set(fsA)))]
	  % proved
	Chinese_Remainder_Theorem_TCC4: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R) | fsA`length /= 0):
	    FORALL (x1:
	              [coset[T, +](R, Intersection[T](seq2set[set[T]](fsA))),
	               coset[T, +](R, Intersection[T](seq2set[set[T]](fsA)))]):
	      coset?[T, +]
	          (R, Intersection[T](seq2set[set[T]](fsA)))
	          (product[T, +, *](R, Intersection[T](seq2set[set[T]](fsA)))(x1))
	
	% Subtype TCC generated (at line 102, column 5) for
	% R_isomorphic?
	%     [coset[T, +](R, Intersection(seq2set(fsA))),
	%      add(R, Intersection(seq2set(fsA))),
	%      product(R, Intersection(seq2set(fsA))),
	%      Intersection(seq2set(fsA)),
	%      (cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%      Pfs(R)(fsA), fsA]
	% expected type  coset[T, +](R, Intersection(seq2set(fsA)))
	  % proved
	Chinese_Remainder_Theorem_TCC5: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R) | fsA`length /= 0):
	    coset?[T, +]
	        (R, Intersection[T](seq2set[set[T]](fsA)))
	        (Intersection[T](seq2set[set[T]](fsA)))
	
	% Existence TCC generated (at line 102, column 5) for
	% R_isomorphic?
	%     [coset[T, +](R, Intersection(seq2set(fsA))),
	%      add(R, Intersection(seq2set(fsA))),
	%      product(R, Intersection(seq2set(fsA))),
	%      Intersection(seq2set(fsA)),
	%      (cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%      Pfs(R)(fsA), fsA]
	  % proved
	Chinese_Remainder_Theorem_TCC6: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R) | fsA`length /= 0):
	    EXISTS (x: (cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA)))): TRUE
	
	% Subtype TCC generated (at line 102, column 5) for
	% R_isomorphic?
	%     [coset[T, +](R, Intersection(seq2set(fsA))),
	%      add(R, Intersection(seq2set(fsA))),
	%      product(R, Intersection(seq2set(fsA))),
	%      Intersection(seq2set(fsA)),
	%      (cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%      Pfs(R)(fsA), fsA]
	% expected type  [[(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%   (cartesian_product_n[set[T]](fsQ(R)(fsA)))] ->
	%    (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % proved
	Chinese_Remainder_Theorem_TCC7: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R) | fsA`length /= 0):
	    FORALL (x1:
	              [(cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))),
	               (cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA)))]):
	      cartesian_product_n[set[T]]
	          (fsQ[T, +, *, zero](R)(fsA))(Sfs[T, +, *, zero](R)(fsA)(x1))
	
	% Subtype TCC generated (at line 102, column 5) for
	% R_isomorphic?
	%     [coset[T, +](R, Intersection(seq2set(fsA))),
	%      add(R, Intersection(seq2set(fsA))),
	%      product(R, Intersection(seq2set(fsA))),
	%      Intersection(seq2set(fsA)),
	%      (cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%      Pfs(R)(fsA), fsA]
	% expected type  [[(cartesian_product_n[set[T]](fsQ(R)(fsA))),
	%   (cartesian_product_n[set[T]](fsQ(R)(fsA)))] ->
	%    (cartesian_product_n[set[T]](fsQ(R)(fsA)))]
	  % proved
	Chinese_Remainder_Theorem_TCC8: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R) | fsA`length /= 0):
	    FORALL (x1:
	              [(cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))),
	               (cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA)))]):
	      cartesian_product_n[set[T]]
	          (fsQ[T, +, *, zero](R)(fsA))(Pfs[T, +, *, zero](R)(fsA)(x1))
	
	% Subtype TCC generated (at line 102, column 5) for
	% R_isomorphic?
	%     [coset[T, +](R, Intersection(seq2set(fsA))),
	%      add(R, Intersection(seq2set(fsA))),
	%      product(R, Intersection(seq2set(fsA))),
	%      Intersection(seq2set(fsA)),
	%      (cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	%      Pfs(R)(fsA), fsA]
	% expected type  (cartesian_product_n[set[T]](fsQ(R)(fsA)))
	  % proved
	Chinese_Remainder_Theorem_TCC9: OBLIGATION
	FORALL (R: ring_with_one[T, +, *, zero, one],
	          fsA: fsICM[T, +, *, zero, one](R) | fsA`length /= 0):
	    cartesian_product_n[set[T]](fsQ[T, +, *, zero](R)(fsA))(fsA)
	
	% The subtype TCC (at line 106, column 44) in decl nil for
	 % term generated from Chinese_Remainder_Theorem  fsA
	    % expected type  fsI[T, +, *, zero](R)
	  % is subsumed by surjective_aux_2_TCC1
	% The subtype TCC (at line 107, column 73) in decl nil for
	 % term generated from Chinese_Remainder_Theorem  fsA
	    % expected type  fsI[T, +, *, zero](R)
	  % is subsumed by surjective_aux_2_TCC1
	% The subtype TCC (at line 102, column 5) in decl nil for
	 % term generated from Chinese_Remainder_Theorem
	    %  R_isomorphic?
	    %     [coset[T, +](R, Intersection(seq2set(fsA))),
	    %      add(R, Intersection(seq2set(fsA))),
	    %      product(R, Intersection(seq2set(fsA))),
	    %      Intersection(seq2set(fsA)),
	    %      (cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	    %      Pfs(R)(fsA), fsA]
	    % expected type  fsI[T, +, *, zero](R)
	  % is subsumed by surjective_aux_2_TCC1
	% The subtype TCC (at line 102, column 5) in decl nil for
	 % term generated from Chinese_Remainder_Theorem
	    %  R_isomorphic?
	    %     [coset[T, +](R, Intersection(seq2set(fsA))),
	    %      add(R, Intersection(seq2set(fsA))),
	    %      product(R, Intersection(seq2set(fsA))),
	    %      Intersection(seq2set(fsA)),
	    %      (cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA),
	    %      Pfs(R)(fsA), fsA]
	    % expected type  fsI[T, +, *, zero](R)
	  % is subsumed by surjective_aux_2_TCC1

END chinese_remainder_theorem_rings_TCCS