%% TCCs associated with theory cartesian_product_finite
%% This file was automatically generated by PVS, please **do not modify** by hand.
cartesian_product_finite_TCCS: THEORY BEGIN

	% Subtype TCC generated (at line 56, column 70) for  i
	% expected type  below[length(fsA)]
	  % proved
	cartesian_product_n_TCC1: OBLIGATION
	FORALL (fsA: finseq[set[T]]):
	    NOT fsA`length = 0 IMPLIES
	     FORALL (fsz: finseq[T]):
	       fsz`length = fsA`length IMPLIES
	        FORALL (i: below(fsz`length)): i < fsA`length
	
	% Subtype TCC generated (at line 95, column 52) for  A
	% expected type  non_empty_finite_set[T]
	  % proved
	add_card_fs_TCC1: OBLIGATION
	FORALL (A: set[T], fsNS: finseq[non_empty_finite_set[T]]):
	    A /= emptyset AND is_finite(A) AND fsNS`length /= 0 IMPLIES
	     NOT empty?[T](A)
	
	% Subtype TCC generated (at line 103, column 31) for
	% cartesian_product_one(x, B)
	% expected type  finite_set[finseq[T]]
	  % proved
	cartesian_product_one_card_TCC1: OBLIGATION
	FORALL (B: set[finseq[T]], x: T):
	    is_finite(B) IMPLIES is_finite[finseq[T]](cartesian_product_one(x, B))
	
	% Subtype TCC generated (at line 121, column 13) for
	% {C | EXISTS x: member(x, A) AND C = cartesian_product_one(x, B)}
	% expected type  finite_set[set[finseq[T]]]
	  % proved
	cartesian_product_set_card_aux_TCC1: OBLIGATION
	FORALL (A: set[T], B: set[finseq[T]]):
	    B /= emptyset AND is_finite(B) AND is_finite(A) IMPLIES
	     is_finite[set[finseq[T]]]
	         ({C | EXISTS x: member[T](x, A) AND C = cartesian_product_one(x, B)})
	
	% Subtype TCC generated (at line 126, column 13) for
	% cartesian_product_set(A, B)
	% expected type  finite_set[finseq[T]]
	  % proved
	cartesian_product_set_card_TCC1: OBLIGATION
	FORALL (A: set[T], B: set[finseq[T]]):
	    B /= emptyset AND is_finite(B) AND is_finite(A) IMPLIES
	     is_finite[finseq[T]](cartesian_product_set(A, B))
	
	% Subtype TCC generated (at line 133, column 67) for  0
	% expected type  below[length(fsNS)]
	  % proved
	cartesian_product_n_degenerated_TCC1: OBLIGATION
	FORALL (fsNS: finseq[non_empty_finite_set[T]]):
	    fsNS`length = 1 IMPLIES 0 < fsNS`length
	
	% Subtype TCC generated (at line 138, column 13) for
	% cartesian_product_n(fsNS)
	% expected type  finite_set[finseq[T]]
	  % proved
	cartesian_product_n_card_degenerated_TCC1: OBLIGATION
	FORALL (fsNS: finseq[non_empty_finite_set[T]]):
	    fsNS`length = 1 IMPLIES is_finite[finseq[T]](cartesian_product_n(fsNS))
	
	% The subtype TCC (at line 138, column 52) in decl nil for
	% term generated from cartesian_product_n_card_degenerated  0
	% expected type  below[fsNS`length]
	% Subtype TCC generated (at line 143, column 13) for
	% cartesian_product_n(fsNS)
	% expected type  finite_set[finseq[T]]
	  % proved
	cartesian_product_n_card_TCC1: OBLIGATION
	FORALL (fsNS: finseq[non_empty_finite_set[T]]):
	    fsNS`length /= 0 IMPLIES is_finite[finseq[T]](cartesian_product_n(fsNS))
	
	% The subtype TCC (at line 138, column 52) in decl nil for
	 % term generated from cartesian_product_n_card_degenerated  0
	    % expected type  below[fsNS`length]
	  % is subsumed by cartesian_product_n_degenerated_TCC1
	
	% Subtype TCC generated (at line 143, column 50) for  card_fs(fsNS)
	% expected type  finite_sequence[posnat]
	  % proved
	cartesian_product_n_card_TCC2: OBLIGATION
	FORALL (fsNS: finseq[non_empty_finite_set[T]]):
	    fsNS`length /= 0 IMPLIES
	     FORALL (x1: below[card_fs(fsNS)`length]): card_fs(fsNS)`seq(x1) > 0

END cartesian_product_finite_TCCS