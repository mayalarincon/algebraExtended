%% TCCs associated with theory ring_prime_element
%% This file was automatically generated by PVS, please **do not modify** by hand.
ring_prime_element_TCCS: THEORY BEGIN

	% Assuming TCC generated (at line 35, column 7) for
	% ring_with_id_one_generator[T, +, *, zero, one]
	% generated from assumption ring_with_id_one_generator.fullset_is_ring_with_one
	  % untried
	IMP_ring_with_id_one_generator_TCC1: OBLIGATION
	ring_with_one?[T, +, *, zero, one](fullset[T])
	
	% Assuming TCC generated (at line 36, column 5) for
	% ring_prime_ideal[T, +, *, zero]
	% generated from assumption ring_prime_ideal.fullset_is_ring
	  % untried
	IMP_ring_prime_ideal_TCC1: OBLIGATION
	ring?[T, +, *, zero](fullset[T])
	
	% The assuming TCC (at line 37, column 5) in decl nil for
	% term generated from IMPORTING
	%  ring_with_one_ideal[T, +, *, zero, one]
	% generated from assumption ring_with_one_ideal.fullset_is_ring_with_one
	% The assuming TCC (at line 38, column 5) in decl nil for
	% term generated from IMPORTING
	%  ring_divides[T, +, *, zero, one]
	% generated from assumption ring_divides.fullset_is_ring_with_one
	% The assuming TCC (at line 41, column 5) in decl nil for
	% term generated from IMPORTING
	%  ring_principal_ideal[T, +, *, zero]
	% generated from assumption ring_principal_ideal.fullset_is_ring
	% Subtype TCC generated (at line 59, column 29) for  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	  % untried
	el_irred_iff_one_gen_maximal_TCC1: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]), c: (R),
	          S: [set[T] -> boolean]):
	    (S =
	      {X: set[T] |
	         (EXISTS (a: (R)): X = principal_ideal(R)(a)) AND
	          X /= singleton(zero) AND X /= R})
	     IMPLIES ring_with_one?[T, +, *, zero, one](R)
	
	% Subtype TCC generated (at line 64, column 63) for  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	  % untried
	prime_el_is_irreducible_TCC1: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]), p: (R)):
	    ring_with_one?[T, +, *, zero, one](R)
	
	% The subtype TCC (at line 64, column 100) in decl nil for
	% term generated from prime_el_is_irreducible  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% Subtype TCC generated (at line 69, column 57) for  p
	% expected type  (R)
	  % untried
	assoc_irreducible_is_irreducible_TCC1: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]),
	          p, c: (remove[T](zero, R))):
	    associates?(R)(p, c) IMPLIES R(p)
	
	% The subtype TCC (at line 64, column 100) in decl nil for
	 % term generated from prime_el_is_irreducible  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by prime_el_is_irreducible_TCC1
	
	% Subtype TCC generated (at line 69, column 54) for  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	  % untried
	assoc_irreducible_is_irreducible_TCC2: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]),
	          p, c: (remove[T](zero, R))):
	    associates?(R)(p, c) IMPLIES ring_with_one?[T, +, *, zero, one](R)
	
	% Subtype TCC generated (at line 69, column 95) for  c
	% expected type  (R)
	  % untried
	assoc_irreducible_is_irreducible_TCC3: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]),
	          p, c: (remove[T](zero, R))):
	    associates?(R)(p, c) AND R_irreducible_element?(R)(p) IMPLIES R(c)
	
	% The subtype TCC (at line 69, column 92) in decl nil for
	% term generated from assoc_irreducible_is_irreducible  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% Subtype TCC generated (at line 74, column 83) for  c
	% expected type  (R)
	  % untried
	assoc_prime_is_prime_TCC1: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]),
	          p, c: (remove[T](zero, R))):
	    associates?(R)(p, c) AND R_prime_element?(R)(p) IMPLIES R(c)
	
	% The subtype TCC (at line 69, column 92) in decl nil for
	 % term generated from assoc_irreducible_is_irreducible  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by assoc_irreducible_is_irreducible_TCC2
	
	% The subtype TCC (at line 74, column 51) in decl nil for
	% term generated from assoc_prime_is_prime  p
	% expected type  (R)
	% The subtype TCC (at line 74, column 48) in decl nil for
	% term generated from assoc_prime_is_prime  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% The subtype TCC (at line 74, column 80) in decl nil for
	% term generated from assoc_prime_is_prime  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% Subtype TCC generated (at line 79, column 31) for  p
	% expected type  (R)
	  % untried
	irreducible_el_divisors_charac_TCC1: OBLIGATION
	FORALL (R: (commutative_ring_with_one?[T, +, *, zero, one]),
	          p, c: (remove[T](zero, R))):
	    R(p)
	
	% The subtype TCC (at line 74, column 51) in decl nil for
	 % term generated from assoc_prime_is_prime  p
	    % expected type  (R)
	  % is subsumed by assoc_irreducible_is_irreducible_TCC1
	% The subtype TCC (at line 74, column 48) in decl nil for
	 % term generated from assoc_prime_is_prime  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by assoc_irreducible_is_irreducible_TCC2
	% The subtype TCC (at line 74, column 80) in decl nil for
	 % term generated from assoc_prime_is_prime  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by assoc_irreducible_is_irreducible_TCC2
	
	% Subtype TCC generated (at line 79, column 97) for  c
	% expected type  (R)
	  % untried
	irreducible_el_divisors_charac_TCC2: OBLIGATION
	FORALL (R: (commutative_ring_with_one?[T, +, *, zero, one]),
	          p, c: (remove[T](zero, R))):
	    R_irreducible_element?(R)(p) AND
	     divides?(R)(c, p) AND NOT associates?(R)(p, c)
	     IMPLIES R(c)
	
	% The subtype TCC (at line 79, column 52) in decl nil for
	% term generated from irreducible_el_divisors_charac  p
	% expected type  (R)
	% Subtype TCC generated (at line 86, column 44) for  p
	% expected type  (remove(zero, R))
	  % untried
	prime_el_divides_TCC1: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]), p: (R)):
	    R_prime_element?(R)(p) IMPLIES remove[T](zero, R)(p)
	
	% The subtype TCC (at line 79, column 52) in decl nil for
	 % term generated from irreducible_el_divisors_charac  p
	    % expected type  (R)
	  % is subsumed by irreducible_el_divisors_charac_TCC1
	
	% Subtype TCC generated (at line 86, column 46) for  op_fseq(fs)
	% expected type  (R)
	  % untried
	prime_el_divides_TCC2: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]), p: (R),
	          fs: finseq[(R)]):
	    R_prime_element?(R)(p) IMPLIES R(op_fseq[T, *, one](fs))
	
	% The subtype TCC (at line 86, column 22) in decl nil for
	% term generated from prime_el_divides  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% The subtype TCC (at line 88, column 52) in decl nil for
	% term generated from prime_el_divides  p
	% expected type  (remove(zero, R))
	% Subtype TCC generated (at line 98, column 34) for  length(fsl) - 1
	% expected type  below[length(fsl)]
	  % untried
	prime_el_divides_last_pos_TCC1: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]), p: (R),
	          fs: finseq[(R)] | fs`length /= 0):
	    R_prime_element?(R)(p) AND divides?(R)(p, op_fseq(fs)) IMPLIES
	     FORALL (fsl: finseq[(R)] | fsl`length = fs`length):
	       (FORALL (i: below[fsl`length]):
	          EXISTS (j: below[fs`length]):
	            finseq_appl[(R)](fsl)(i) = finseq_appl[(R)](fs)(j))
	        AND op_fseq(fsl) = op_fseq(fs)
	        IMPLIES fsl`length - 1 >= 0 AND fsl`length - 1 < fsl`length
	
	% The subtype TCC (at line 86, column 22) in decl nil for
	 % term generated from prime_el_divides  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by prime_el_is_irreducible_TCC1
	% The subtype TCC (at line 88, column 52) in decl nil for
	 % term generated from prime_el_divides  p
	    % expected type  (remove(zero, R))
	  % is subsumed by prime_el_divides_TCC1
	
	% The subtype TCC (at line 93, column 22) in decl nil for
	% term generated from prime_el_divides_last_pos  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% The subtype TCC (at line 93, column 44) in decl nil for
	% term generated from prime_el_divides_last_pos  p
	% expected type  (remove(zero, R))
	% The subtype TCC (at line 93, column 46) in decl nil for
	% term generated from prime_el_divides_last_pos  op_fseq(fs)
	% expected type  (R)
	% The subtype TCC (at line 98, column 27) in decl nil for
	% term generated from prime_el_divides_last_pos  p
	% expected type  (remove(zero, R))
	% Subtype TCC generated (at line 102, column 53) for  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	  % untried
	irreducible_prod_not_unit_TCC1: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one])):
	    ring_with_one?[T, +, *, zero, one](R)
	
	% The subtype TCC (at line 93, column 22) in decl nil for
	 % term generated from prime_el_divides_last_pos  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by prime_el_is_irreducible_TCC1
	% The subtype TCC (at line 93, column 44) in decl nil for
	 % term generated from prime_el_divides_last_pos  p
	    % expected type  (remove(zero, R))
	  % is subsumed by prime_el_divides_TCC1
	% The subtype TCC (at line 93, column 46) in decl nil for
	 % term generated from prime_el_divides_last_pos  op_fseq(fs)
	    % expected type  (R)
	  % is subsumed by prime_el_divides_TCC2
	% The subtype TCC (at line 98, column 27) in decl nil for
	 % term generated from prime_el_divides_last_pos  p
	    % expected type  (remove(zero, R))
	  % is subsumed by prime_el_divides_TCC1
	
	% Subtype TCC generated (at line 103, column 18) for  op_fseq(fsI)
	% expected type  (R)
	  % untried
	irreducible_prod_not_unit_TCC2: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]),
	          fsI: {fsI: fsIr[T, +, *, zero, one](R) | fsI`length /= 0}):
	    R(op_fseq[T, *, one](fsI))
	
	% The subtype TCC (at line 103, column 15) in decl nil for
	% term generated from irreducible_prod_not_unit  R
	% expected type  (ring_with_one?)
	% Subtype TCC generated (at line 108, column 14) for  op_fseq(fsI)
	% expected type  (R)
	  % untried
	irreducible_prod_unit_length_0_TCC1: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]),
	          fsI: fsIr[T, +, *, zero, one](R)):
	    R(op_fseq[T, *, one](fsI))
	
	% The subtype TCC (at line 103, column 15) in decl nil for
	 % term generated from irreducible_prod_not_unit  R
	    % expected type  (ring_with_one?)
	  % is subsumed by irreducible_prod_not_unit_TCC1
	
	% The subtype TCC (at line 108, column 11) in decl nil for
	% term generated from irreducible_prod_unit_length_0  R
	% expected type  (ring_with_one?)
	% Subtype TCC generated (at line 119, column 32) for  p
	% expected type  (R)
	  % untried
	prod_unit_irreducible_is_irreducible_TCC1: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]),
	          p, u: (remove[T](zero, R))):
	    R(p)
	
	% The subtype TCC (at line 108, column 11) in decl nil for
	 % term generated from irreducible_prod_unit_length_0  R
	    % expected type  (ring_with_one?)
	  % is subsumed by irreducible_prod_not_unit_TCC1
	
	% Subtype TCC generated (at line 119, column 48) for  u
	% expected type  (R)
	  % untried
	prod_unit_irreducible_is_irreducible_TCC2: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]),
	          p, u: (remove[T](zero, R))):
	    R_irreducible_element?(R)(p) IMPLIES R(u)
	
	% Subtype TCC generated (at line 119, column 85) for  u * p
	% expected type  (R)
	  % untried
	prod_unit_irreducible_is_irreducible_TCC3: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]),
	          p, u: (remove[T](zero, R))):
	    R_irreducible_element?(R)(p) AND unit?(R)(u) IMPLIES R(u * p)
	
	% The subtype TCC (at line 119, column 29) in decl nil for
	% term generated from prod_unit_irreducible_is_irreducible  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% The subtype TCC (at line 119, column 45) in decl nil for
	% term generated from prod_unit_irreducible_is_irreducible  R
	% expected type  (ring_with_one?)
	% The subtype TCC (at line 119, column 82) in decl nil for
	% term generated from prod_unit_irreducible_is_irreducible  R
	% expected type  (ring_with_one?[T, +, *, zero, one])
	% Subtype TCC generated (at line 124, column 76) for  u * p
	% expected type  (remove(zero, R))
	  % untried
	prod_unit_irreducible_is_associates_TCC1: OBLIGATION
	FORALL (R: (integral_domain_w_one?[T, +, *, zero, one]),
	          p, u: (remove[T](zero, R))):
	    R_irreducible_element?(R)(p) AND unit?(R)(u) IMPLIES
	     remove[T](zero, R)(u * p)
	
	% The subtype TCC (at line 119, column 29) in decl nil for
	 % term generated from prod_unit_irreducible_is_irreducible  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by irreducible_prod_not_unit_TCC1
	% The subtype TCC (at line 119, column 45) in decl nil for
	 % term generated from prod_unit_irreducible_is_irreducible  R
	    % expected type  (ring_with_one?)
	  % is subsumed by irreducible_prod_not_unit_TCC1
	% The subtype TCC (at line 119, column 82) in decl nil for
	 % term generated from prod_unit_irreducible_is_irreducible  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by irreducible_prod_not_unit_TCC1
	
	% The subtype TCC (at line 124, column 32) in decl nil for
	 % term generated from prod_unit_irreducible_is_associates  p
	    % expected type  (R)
	  % is subsumed by prod_unit_irreducible_is_irreducible_TCC1
	% The subtype TCC (at line 124, column 29) in decl nil for
	 % term generated from prod_unit_irreducible_is_associates  R
	    % expected type  (ring_with_one?[T, +, *, zero, one])
	  % is subsumed by irreducible_prod_not_unit_TCC1
	% The subtype TCC (at line 124, column 48) in decl nil for
	 % term generated from prod_unit_irreducible_is_associates  u
	    % expected type  (R)
	  % is subsumed by prod_unit_irreducible_is_irreducible_TCC2

END ring_prime_element_TCCS